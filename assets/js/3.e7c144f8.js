(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{1074:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"kubernetes-入门到精通"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-入门到精通"}},[t._v("#")]),t._v(" kubernetes 入门到精通")]),t._v(" "),n("h2",{attrs:{id:"第一章-kubernetes介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一章-kubernetes介绍"}},[t._v("#")]),t._v(" 第一章 kubernetes介绍")]),t._v(" "),n("p",[t._v("本章节主要介绍应用程序在服务器上部署方式演变以及kubernetes的概念、组件和工作原理。")]),t._v(" "),n("h3",{attrs:{id:"_1-1-应用部署方式演变"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-应用部署方式演变"}},[t._v("#")]),t._v(" 1.1 应用部署方式演变")]),t._v(" "),n("p",[t._v("在部署应用程序的方式上，主要经历了三个时代：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("传统部署")]),t._v("：互联网早期，会直接将应用程序部署在物理机上")]),t._v(" "),n("blockquote",[n("p",[t._v("优点：简单，不需要其它技术的参与")]),t._v(" "),n("p",[t._v("缺点：不能为应用程序定义资源使用边界，很难合理地分配计算资源，而且程序之间容易产生影响")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("虚拟化部署")]),t._v("：可以在一台物理机上运行多个虚拟机，每个虚拟机都是独立的一个环境")]),t._v(" "),n("blockquote",[n("p",[t._v("优点：程序环境不会相互产生影响，提供了一定程度的安全性")]),t._v(" "),n("p",[t._v("缺点：增加了操作系统，浪费了部分资源")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("容器化部署")]),t._v("：与虚拟化类似，但是共享了操作系统")]),t._v(" "),n("blockquote",[n("p",[t._v("优点：")]),t._v(" "),n("p",[t._v("​    可以保证每个容器拥有自己的文件系统、CPU、内存、进程空间等")]),t._v(" "),n("p",[t._v("​    运行应用程序所需要的资源都被容器包装，并和底层基础架构解耦")]),t._v(" "),n("p",[t._v("​    容器化的应用程序可以跨云服务商、跨Linux操作系统发行版进行部署")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(498),alt:"image-20200505183738289"}})]),t._v(" "),n("p",[t._v("容器化部署方式给带来很多的便利，但是也会出现一些问题，比如说：")]),t._v(" "),n("ul",[n("li",[t._v("一个容器故障停机了，怎么样让另外一个容器立刻启动去替补停机的容器")]),t._v(" "),n("li",[t._v("当并发访问量变大的时候，怎么样做到横向扩展容器数量")])]),t._v(" "),n("p",[t._v("这些容器管理的问题统称为"),n("strong",[t._v("容器编排")]),t._v("问题，为了解决这些容器编排问题，就产生了一些容器编排的软件：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("Swarm")]),t._v("：Docker自己的容器编排工具")]),t._v(" "),n("li",[n("strong",[t._v("Mesos")]),t._v("：Apache的一个资源统一管控的工具，需要和Marathon结合使用")]),t._v(" "),n("li",[n("strong",[t._v("Kubernetes")]),t._v("：Google开源的的容器编排工具")])]),t._v(" "),n("img",{staticStyle:{zoom:"110%"},attrs:{src:a(499),alt:"image-20200524150339551"}}),t._v(" "),n("h3",{attrs:{id:"_1-2-kubernetes简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-kubernetes简介"}},[t._v("#")]),t._v(" 1.2 kubernetes简介")]),t._v(" "),n("img",{staticStyle:{zoom:"100%"},attrs:{src:a(500),alt:"image-20200406232838722"}}),t._v(" "),n("p",[n("strong",[t._v("kubernetes")]),t._v("，是一个全新的基于容器技术的分布式架构领先方案，是"),n("strong",[t._v("谷歌")]),t._v("严格保密十几年的秘密武器----Borg系统的一个开源版本，于2014年9月发布第一个版本，2015年7月发布第一个正式版本。")]),t._v(" "),n("p",[n("strong",[t._v("kubernetes")]),t._v("的本质是"),n("strong",[t._v("一组服务器集群")]),t._v("，它可以在集群的每个节点上运行特定的程序，来对"),n("strong",[t._v("节点中的容器进行管理")]),t._v("。目的是实现"),n("strong",[t._v("资源管理的自动化")]),t._v("，主要提供了如下的主要功能：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("自我修复")]),t._v("：一旦某一个容器崩溃，能够在1秒中左右迅速启动新的容器")]),t._v(" "),n("li",[n("strong",[t._v("弹性伸缩")]),t._v("：可以根据需要，自动对集群中正在运行的容器数量进行调整")]),t._v(" "),n("li",[n("strong",[t._v("服务发现")]),t._v("：服务可以通过自动发现的形式找到它所依赖的服务")]),t._v(" "),n("li",[n("strong",[t._v("负载均衡")]),t._v("：如果一个服务起动了多个容器，能够自动实现请求的负载均衡")]),t._v(" "),n("li",[n("strong",[t._v("版本回退")]),t._v("：如果发现新发布的程序版本有问题，可以立即回退到原来的版本")]),t._v(" "),n("li",[n("strong",[t._v("存储编排")]),t._v("：可以根据容器自身的需求自动创建存储卷")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(501),alt:"image-20200526203726071"}})]),t._v(" "),n("h3",{attrs:{id:"_1-3-kubernetes组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-kubernetes组件"}},[t._v("#")]),t._v(" 1.3 kubernetes组件")]),t._v(" "),n("p",[t._v("一个kubernetes集群主要是由"),n("strong",[t._v("控制节点(master)")]),t._v("、**工作节点(node)**构成，每个节点上都会安装不同的组件。")]),t._v(" "),n("p",[n("strong",[t._v("master：集群的控制平面，负责集群的决策  (  管理  )")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("ApiServer")]),t._v(" : 资源操作的唯一入口，接收用户输入的命令，提供认证、授权、API注册和发现等机制")]),t._v(" "),n("p",[n("strong",[t._v("Scheduler")]),t._v(" : 负责集群资源调度，按照预定的调度策略将Pod调度到相应的node节点上")]),t._v(" "),n("p",[n("strong",[t._v("ControllerManager")]),t._v(" : 负责维护集群的状态，比如程序部署安排、故障检测、自动扩展、滚动更新等")]),t._v(" "),n("p",[t._v("**Etcd **：负责存储集群中各种资源对象的信息")])]),t._v(" "),n("p",[t._v("**node：集群的数据平面，负责为容器提供运行环境 ( 干活 ) **")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("Kubelet")]),t._v(" : 负责维护容器的生命周期，即通过控制docker，来创建、更新、销毁容器")]),t._v(" "),n("p",[n("strong",[t._v("KubeProxy")]),t._v(" : 负责提供集群内部的服务发现和负载均衡")]),t._v(" "),n("p",[n("strong",[t._v("Docker")]),t._v(" : 负责节点上容器的各种操作")])]),t._v(" "),n("img",{staticStyle:{zoom:"200%"},attrs:{src:a(502),alt:"image-20200406184656917"}}),t._v(" "),n("p",[t._v("下面，以部署一个nginx服务来说明kubernetes系统各个组件调用关系：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("首先要明确，一旦kubernetes环境启动之后，master和node都会将自身的信息存储到etcd数据库中")])]),t._v(" "),n("li",[n("p",[t._v("一个nginx服务的安装请求会首先被发送到master节点的apiServer组件")])]),t._v(" "),n("li",[n("p",[t._v("ApiServer组件会调用scheduler组件来决定到底应该把这个服务安装到哪个node节点上")]),t._v(" "),n("p",[t._v("在此时，它会从etcd中读取各个node节点的信息，然后按照一定的算法进行选择，并将结果告知apiServer")])]),t._v(" "),n("li",[n("p",[t._v("ApiServer调用Controller-manager去调度Node节点安装nginx服务")])]),t._v(" "),n("li",[n("p",[t._v("kubelet接收到指令后，会通知docker，然后由docker来启动一个nginx的pod")]),t._v(" "),n("p",[t._v("pod是kubernetes的最小操作单元，容器必须跑在pod中至此，")])]),t._v(" "),n("li",[n("p",[t._v("一个nginx服务就运行了，如果需要访问nginx，就需要通过kube-proxy来对pod产生访问的代理")])])]),t._v(" "),n("p",[t._v("​        这样，外界用户就可以访问集群中的nginx服务了")]),t._v(" "),n("h3",{attrs:{id:"_1-4-kubernetes概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-kubernetes概念"}},[t._v("#")]),t._v(" 1.4 kubernetes概念")]),t._v(" "),n("p",[n("strong",[t._v("Master")]),t._v("：集群控制节点，每个集群需要至少一个master节点负责集群的管控")]),t._v(" "),n("p",[n("strong",[t._v("Node")]),t._v("：工作负载节点，由master分配容器到这些node工作节点上，然后node节点上的docker负责容器的运行")]),t._v(" "),n("p",[n("strong",[t._v("Pod")]),t._v("：kubernetes的最小控制单元，容器都是运行在pod中的，一个pod中可以有1个或者多个容器")]),t._v(" "),n("p",[n("strong",[t._v("Controller")]),t._v("：控制器，通过它来实现对pod的管理，比如启动pod、停止pod、伸缩pod的数量等等")]),t._v(" "),n("p",[n("strong",[t._v("Service")]),t._v("：pod对外服务的统一入口，下面可以维护者同一类的多个pod")]),t._v(" "),n("p",[n("strong",[t._v("Label")]),t._v("：标签，用于对pod进行分类，同一类pod会拥有相同的标签")]),t._v(" "),n("p",[n("strong",[t._v("NameSpace")]),t._v("：命名空间，用来隔离pod的运行环境")]),t._v(" "),n("img",{staticStyle:{zoom:"200%"},attrs:{src:a(503),alt:"image-20200403224313355"}}),t._v(" "),n("h2",{attrs:{id:"第二章-集群环境搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二章-集群环境搭建"}},[t._v("#")]),t._v(" 第二章 集群环境搭建")]),t._v(" "),n("p",[t._v("本章节主要介绍如何搭建kubernetes的集群环境")]),t._v(" "),n("h3",{attrs:{id:"_2-1-环境规划"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-环境规划"}},[t._v("#")]),t._v(" 2.1 环境规划")]),t._v(" "),n("h4",{attrs:{id:"集群类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#集群类型"}},[t._v("#")]),t._v(" 集群类型")]),t._v(" "),n("p",[t._v("kubernetes集群大体上分为两类："),n("strong",[t._v("一主多从")]),t._v("和"),n("strong",[t._v("多主多从")]),t._v("。")]),t._v(" "),n("ul",[n("li",[t._v("一主多从：一台Master节点和多台Node节点，搭建简单，但是有单机故障风险，适合用于测试环境")]),t._v(" "),n("li",[t._v("多主多从：多台Master节点和多台Node节点，搭建麻烦，安全性高，适合用于生产环境")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(504),alt:"image-20200404094800622"}})]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("说明：为了测试简单，本次搭建的是 一主两从 类型的集群")])])]),t._v(" "),n("h4",{attrs:{id:"安装方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装方式"}},[t._v("#")]),t._v(" 安装方式")]),t._v(" "),n("p",[t._v("kubernetes有多种部署方式，目前主流的方式有kubeadm、minikube、二进制包")]),t._v(" "),n("ul",[n("li",[t._v("minikube：一个用于快速搭建单节点kubernetes的工具")]),t._v(" "),n("li",[t._v("kubeadm：一个用于快速搭建kubernetes集群的工具")]),t._v(" "),n("li",[t._v("二进制包 ：从官网下载每个组件的二进制包，依次去安装，此方式对于理解kubernetes组件更加有效")])]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("说明：现在需要安装kubernetes的集群环境，但是又不想过于麻烦，所以选择使用kubeadm方式")])])]),t._v(" "),n("h4",{attrs:{id:"主机规划"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主机规划"}},[t._v("#")]),t._v(" 主机规划")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("作用")]),t._v(" "),n("th",[t._v("IP地址")]),t._v(" "),n("th",[t._v("操作系统")]),t._v(" "),n("th",[t._v("配置")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Master")]),t._v(" "),n("td",[t._v("192.168.109.100")]),t._v(" "),n("td",[t._v("Centos7.5    基础设施服务器")]),t._v(" "),n("td",[t._v("2颗CPU  2G内存   50G硬盘")])]),t._v(" "),n("tr",[n("td",[t._v("Node1")]),t._v(" "),n("td",[t._v("192.168.109.101")]),t._v(" "),n("td",[t._v("Centos7.5    基础设施服务器")]),t._v(" "),n("td",[t._v("2颗CPU  2G内存   50G硬盘")])]),t._v(" "),n("tr",[n("td",[t._v("Node2")]),t._v(" "),n("td",[t._v("192.168.109.102")]),t._v(" "),n("td",[t._v("Centos7.5    基础设施服务器")]),t._v(" "),n("td",[t._v("2颗CPU  2G内存   50G硬盘")])])])]),t._v(" "),n("h3",{attrs:{id:"_2-2-环境搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-环境搭建"}},[t._v("#")]),t._v(" 2.2 环境搭建")]),t._v(" "),n("p",[t._v("本次环境搭建需要安装三台Centos服务器（一主二从），然后在每台服务器中分别安装docker（18.06.3），kubeadm（1.17.4）、kubelet（1.17.4）、kubectl（1.17.4）程序。")]),t._v(" "),n("h4",{attrs:{id:"主机安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主机安装"}},[t._v("#")]),t._v(" 主机安装")]),t._v(" "),n("p",[t._v("安装虚拟机过程中注意下面选项的设置：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("操作系统环境：CPU（2C）    内存（2G）   硬盘（50G）")])]),t._v(" "),n("li",[n("p",[t._v("语言选择：中文简体")])]),t._v(" "),n("li",[n("p",[t._v("软件选择：基础设施服务器")])]),t._v(" "),n("li",[n("p",[t._v("分区选择：自动分区")])]),t._v(" "),n("li",[n("p",[t._v("网络配置：按照下面配置网路地址信息")]),t._v(" "),n("div",{staticClass:"language-md extra-class"},[n("pre",{pre:!0,attrs:{class:"language-md"}},[n("code",[t._v("网络地址：192.168.109.100  （每台主机都不一样  分别为100、101、102）\n子网掩码：255.255.255.0\n默认网关：192.168.109.2\nDNS：    223.5.5.5\n")])])]),n("p",[n("img",{attrs:{src:a(505),alt:"image-20200505213817934"}})])]),t._v(" "),n("li",[n("p",[t._v("主机名设置：按照下面信息设置主机名")]),t._v(" "),n("div",{staticClass:"language-md extra-class"},[n("pre",{pre:!0,attrs:{class:"language-md"}},[n("code",[t._v("master节点： master\nnode节点：   node1\nnode节点：   node2\n")])])]),n("p",[n("img",{attrs:{src:a(506),alt:"image-20200505214156148"}})])])]),t._v(" "),n("h4",{attrs:{id:"环境初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境初始化"}},[t._v("#")]),t._v(" 环境初始化")]),t._v(" "),n("ol",[n("li",[t._v("检查操作系统的版本")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此方式下安装kubernetes集群要求Centos版本要在7.5或之上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /etc/redhat-release")]),t._v("\nCentOS Linux release 7"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1804 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Core"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("2） 主机名解析")]),t._v(" "),n("p",[t._v("为了方便后面集群节点间的直接调用，在这配置一下主机名解析，企业中推荐使用内部DNS服务器")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主机名成解析 编辑三台服务器的/etc/hosts文件，添加下面内容")]),t._v("\n192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("100  master\n192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("101  node1\n192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("102  node2\n")])])]),n("p",[t._v("3） 时间同步")]),t._v(" "),n("p",[t._v("kubernetes要求集群中的节点时间必须精确一致，这里直接使用chronyd服务从网络同步时间。")]),t._v(" "),n("p",[t._v("企业中建议配置内部的时间同步服务器")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动chronyd服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl start chronyd")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置chronyd服务开机自启")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl enable chronyd")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chronyd服务启动稍等几秒钟，就可以使用date命令验证时间了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# date")]),t._v("\n")])])]),n("p",[t._v("4） 禁用iptables和firewalld服务")]),t._v(" "),n("p",[t._v("kubernetes和docker在运行中会产生大量的iptables规则，为了不让系统规则跟它们混淆，直接关闭系统的规则")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 关闭firewalld服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl stop firewalld")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl disable firewalld")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 关闭iptables服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl stop iptables")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl disable iptables")]),t._v("\n")])])]),n("p",[t._v("5） 禁用selinux")]),t._v(" "),n("p",[t._v("selinux是linux系统下的一个安全服务，如果不关闭它，在安装集群中会产生各种各样的奇葩问题")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑 /etc/selinux/config 文件，修改SELINUX的值为disabled")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意修改完毕之后需要重启linux服务")]),t._v("\nSELINUX=disabled\n")])])]),n("p",[t._v("6） 禁用swap分区")]),t._v(" "),n("p",[t._v("swap分区指的是虚拟内存分区，它的作用是在物理内存使用完之后，将磁盘空间虚拟成内存来使用")]),t._v(" "),n("p",[t._v("启用swap设备会对系统的性能产生非常负面的影响，因此kubernetes要求每个节点都要禁用swap设备")]),t._v(" "),n("p",[t._v("但是如果因为某些原因确实不能关闭swap分区，就需要在集群安装过程中通过明确的参数进行配置说明")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑分区配置文件/etc/fstab，注释掉swap分区一行")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意修改完毕之后需要重启linux服务")]),t._v("\n UUID=455cc753"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7a60"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("4c17"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a424"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7741728c44a1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("boot    xfs     defaults        0 0\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mapper"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("centos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("home "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home                      xfs     defaults        0 0\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /dev/mapper/centos-swap swap                      swap    defaults        0 0")]),t._v("\n")])])]),n("p",[t._v("7）修改linux的内核参数")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改linux的内核参数，添加网桥过滤和地址转发功能")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑/etc/sysctl.d/kubernetes.conf文件，添加如下配置:")]),t._v("\nnet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bridge"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bridge"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("call"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ip6tables = 1\nnet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bridge"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bridge"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("call"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("iptables = 1\nnet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ipv4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ip_forward = 1\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新加载配置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sysctl -p")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载网桥过滤模块")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# modprobe br_netfilter")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看网桥过滤模块是否加载成功")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lsmod | grep br_netfilter")]),t._v("\n")])])]),n("p",[t._v("8）配置ipvs功能")]),t._v(" "),n("p",[t._v("在kubernetes中service有两种代理模型，一种是基于iptables的，一种是基于ipvs的")]),t._v(" "),n("p",[t._v("两者比较的话，ipvs的性能明显要高一些，但是如果要使用它，需要手动载入ipvs模块")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 安装ipset和ipvsadm")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install ipset ipvsadmin -y")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 添加需要加载的模块写入脚本文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat <<EOF >  /etc/sysconfig/modules/ipvs.modules")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\nmodprobe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" ip_vs\nmodprobe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" ip_vs_rr\nmodprobe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" ip_vs_wrr\nmodprobe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" ip_vs_sh\nmodprobe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" nf_conntrack_ipv4\nEOF\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3 为脚本文件添加执行权限")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chmod +x /etc/sysconfig/modules/ipvs.modules")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4 执行脚本文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /bin/bash /etc/sysconfig/modules/ipvs.modules")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5 查看对应的模块是否加载成功")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lsmod | grep -e ip_vs -e nf_conntrack_ipv4")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(507),alt:"image-20210719135715740"}})]),t._v(" "),n("p",[t._v("9） 重启服务器")]),t._v(" "),n("p",[t._v("上面步骤完成之后，需要重新启动linux系统")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reboot")]),t._v("\n")])])]),n("h4",{attrs:{id:"安装docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[t._v("#")]),t._v(" 安装docker")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 切换镜像源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 查看当前镜像源中支持的docker版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum list docker-ce --showduplicates")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3 安装特定版本的docker-ce")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 必须指定--setopt=obsoletes=0，否则yum会自动安装更高版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install --setopt=obsoletes=0 docker-ce-18.06.3.ce-3.el7 -y")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4 添加一个配置文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Docker在默认情况下使用的Cgroup Driver为cgroupfs，而kubernetes推荐使用systemd来代替cgroupfs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir /etc/docker")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat <<EOF >  /etc/docker/daemon.json")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exec-opts"')]),t._v(": "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"native.cgroupdriver=systemd"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry-mirrors"')]),t._v(": "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://kn0t2bca.mirror.aliyuncs.com"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nEOF\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5 启动docker")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl restart docker")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl enable docker")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6 检查docker状态和版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker version")]),t._v("\n")])])]),n("h4",{attrs:{id:"安装kubernetes组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装kubernetes组件"}},[t._v("#")]),t._v(" 安装kubernetes组件")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 由于kubernetes的镜像源在国外，速度比较慢，这里切换成国内的镜像源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑/etc/yum.repos.d/kubernetes.repo，添加下面的配置 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[kubernetes]")]),t._v("\nname=Kubernetes\nbaseurl=http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mirrors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliyun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kubernetes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("repos"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kubernetes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("el7"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mirrors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliyun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kubernetes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("doc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpg\n       http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mirrors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliyun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kubernetes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("doc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rpm"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("package"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpg\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装kubeadm、kubelet和kubectl")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install --setopt=obsoletes=0 kubeadm-1.17.4-0 kubelet-1.17.4-0 kubectl-1.17.4-0 -y")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置kubelet的cgroup")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑/etc/sysconfig/kubelet，添加下面的配置")]),t._v("\nKUBELET_CGROUP_ARGS="),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--cgroup-driver=systemd"')]),t._v("\nKUBE_PROXY_MODE="),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ipvs"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4 设置kubelet开机自启")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl enable kubelet")]),t._v("\n")])])]),n("h4",{attrs:{id:"准备集群镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#准备集群镜像"}},[t._v("#")]),t._v(" 准备集群镜像")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在安装kubernetes集群之前，必须要提前准备好集群需要的镜像，所需镜像可以通过下面命令查看")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm config images list")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此镜像在kubernetes的仓库中,由于网络原因,无法连接，下面提供了一种替代方案")]),t._v("\nimages="),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    kube"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("apiserver:v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\n    kube"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("controller"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("manager:v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\n    kube"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("scheduler:v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\n    kube"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("proxy:v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\n    pause:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1\n    etcd:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("0\n    coredns:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("5\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" imageName in $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\tdocker pull registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hangzhou"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliyuncs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("google_containers"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n\tdocker tag registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hangzhou"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliyuncs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("google_containers"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v(" \t\tk8s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gcr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n\tdocker rmi registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hangzhou"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliyuncs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("google_containers"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\ndone\n")])])]),n("h4",{attrs:{id:"集群初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#集群初始化"}},[t._v("#")]),t._v(" 集群初始化")]),t._v(" "),n("p",[t._v("下面开始对集群进行初始化，并将node节点加入到集群中")]),t._v(" "),n("blockquote",[n("p",[t._v("下面的操作只需要在"),n("code",[t._v("master")]),t._v("节点上执行即可")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建集群")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm init \\")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("kubernetes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("version=v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4 \\\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("network"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cidr=10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("16 \\\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cidr=10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("96"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("12 \\\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("apiserver"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("advertise"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("address=192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("100\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建必要文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir -p $HOME/.kube")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo chown $(id -u):$(id -g) $HOME/.kube/config")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("下面的操作只需要在"),n("code",[t._v("node")]),t._v("节点上执行即可")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将node节点加入集群")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm join 192.168.109.100:6443 \\ ")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("token 8507uc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o0knircuri8etnw2 \\\n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("discovery"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("token"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ca"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cert"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hash \\\n\tsha256:acc37967fb5b0acf39d7598f8a439cc7dc88f439a3f4d0c9cae88e7901b9d3f\n\t\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看集群状态 此时的集群状态为NotReady，这是因为还没有配置网络插件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get nodes")]),t._v("\nNAME     STATUS     ROLES    AGE     VERSION\nmaster   NotReady   master   6m43s   v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\nnode1    NotReady   <none>   22s     v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\nnode2    NotReady   <none>   19s     v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\n")])])]),n("h4",{attrs:{id:"安装网络插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装网络插件"}},[t._v("#")]),t._v(" 安装网络插件")]),t._v(" "),n("p",[t._v("kubernetes支持多种网络插件，比如flannel、calico、canal等等，任选一种使用即可，本次选择flannel")]),t._v(" "),n("blockquote",[n("p",[t._v("下面操作依旧只在"),n("code",[t._v("master")]),t._v("节点执行即可，插件使用的是DaemonSet的控制器，它会在每个节点上都运行")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取fannel的配置文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改文件中quay.io仓库为quay-mirror.qiniu.com")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用配置文件启动fannel")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f kube-flannel.yml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 稍等片刻，再次查看集群节点的状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get nodes")]),t._v("\nNAME     STATUS   ROLES    AGE     VERSION\nmaster   Ready    master   15m     v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\nnode1    Ready    <none>   8m53s   v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\nnode2    Ready    <none>   8m50s   v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4\n")])])]),n("p",[t._v("至此，kubernetes的集群环境搭建完成")]),t._v(" "),n("p",[t._v("如果执行完毕，NoReady 可以重启服务")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("systemctl daemon-reload \nsystemctl restart kubelet\n")])])]),n("h3",{attrs:{id:"_2-3-服务部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-服务部署"}},[t._v("#")]),t._v(" 2.3 服务部署")]),t._v(" "),n("p",[t._v("接下来在kubernetes集群中部署一个nginx程序，测试下集群是否在正常工作。")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署nginx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create deployment nginx --image=nginx:1.14-alpine")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暴露端口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl expose deployment nginx --port=80 --type=NodePort")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods,service")]),t._v("\nNAME                         READY   STATUS    RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("86c57db685"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fdc2k   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          18m\n\nNAME                 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TYPE")]),t._v("        CLUSTER"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP      EXTERNAL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        AGE\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kubernetes   ClusterIP   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("96"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1       <none>        443"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP        82m\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx        NodePort    10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("104"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("121"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("45   <none>        80:30073"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP   17m\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4 最后在电脑上访问下部署的nginx服务")]),t._v("\n")])])]),n("img",{staticStyle:{zoom:"80%"},attrs:{src:a(508),alt:"image-20200405142656921"}}),t._v(" "),n("h2",{attrs:{id:"第三章-资源管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三章-资源管理"}},[t._v("#")]),t._v(" 第三章 资源管理")]),t._v(" "),n("p",[t._v("本章节主要介绍yaml语法和kubernetes的资源管理方式")]),t._v(" "),n("h3",{attrs:{id:"_3-1-资源管理介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-资源管理介绍"}},[t._v("#")]),t._v(" 3.1 资源管理介绍")]),t._v(" "),n("p",[t._v("在kubernetes中，所有的内容都抽象为资源，用户需要通过操作资源来管理kubernetes。")]),t._v(" "),n("blockquote",[n("p",[t._v("kubernetes的本质上就是一个集群系统，用户可以在集群中部署各种服务，所谓的部署服务，其实就是在kubernetes集群中运行一个个的容器，并将指定的程序跑在容器中。")]),t._v(" "),n("p",[t._v("kubernetes的最小管理单元是pod而不是容器，所以只能将容器放在"),n("code",[t._v("Pod")]),t._v("中，而kubernetes一般也不会直接管理Pod，而是通过"),n("code",[t._v("Pod控制器")]),t._v("来管理Pod的。")]),t._v(" "),n("p",[t._v("Pod可以提供服务之后，就要考虑如何访问Pod中服务，kubernetes提供了"),n("code",[t._v("Service")]),t._v("资源实现这个功能。")]),t._v(" "),n("p",[t._v("当然，如果Pod中程序的数据需要持久化，kubernetes还提供了各种"),n("code",[t._v("存储")]),t._v("系统。")])]),t._v(" "),n("img",{staticStyle:{zoom:"200%"},attrs:{src:a(509),alt:"image-20200406225334627"}}),t._v(" "),n("blockquote",[n("p",[t._v("学习kubernetes的核心，就是学习如何对集群上的"),n("code",[t._v("Pod、Pod控制器、Service、存储")]),t._v("等各种资源进行操作")])]),t._v(" "),n("h3",{attrs:{id:"_3-2-yaml语言介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-yaml语言介绍"}},[t._v("#")]),t._v(" 3.2 YAML语言介绍")]),t._v(" "),n("p",[t._v("YAML是一个类似 XML、JSON 的标记性语言。它强调以"),n("strong",[t._v("数据")]),t._v('为中心，并不是以标识语言为重点。因而YAML本身的定义比较简单，号称"一种人性化的数据格式语言"。')]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("user")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("15"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Beijing"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("user")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Beijing\n")])])]),n("p",[t._v("YAML的语法比较简单，主要有下面几个：")]),t._v(" "),n("ul",[n("li",[t._v("大小写敏感")]),t._v(" "),n("li",[t._v("使用缩进表示层级关系")]),t._v(" "),n("li",[t._v("缩进不允许使用tab，只允许空格( 低版本限制 )")]),t._v(" "),n("li",[t._v("缩进的空格数不重要，只要相同层级的元素左对齐即可")]),t._v(" "),n("li",[t._v("'#'表示注释")])]),t._v(" "),n("p",[t._v("YAML支持以下几种数据类型：")]),t._v(" "),n("ul",[n("li",[t._v("纯量：单个的、不可再分的值")]),t._v(" "),n("li",[t._v("对象：键值对的集合，又称为映射（mapping）/ 哈希（hash） / 字典（dictionary）")]),t._v(" "),n("li",[t._v("数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 纯量, 就是指的一个简单的值，字符串、布尔值、整数、浮点数、Null、时间、日期")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 布尔类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" true (或者True)\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 整型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("234")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3 浮点型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4 null类型 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用~表示null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5 日期类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token datetime number"}},[t._v("2018-02-17")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日期必须使用ISO 8601格式，即yyyy-MM-dd")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6 时间类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token datetime number"}},[t._v("2018-02-17T15:02:31+08:00")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 7 字符串类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pyy     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 简单写法，直接写值 , 如果字符串中间有特殊字符，必须使用双引号或者单引号包裹 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" line1\n    line2     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 字符串过多的情况可以拆成多行，每一行会被转化成一个空格")]),t._v("\n")])])]),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 形式一(推荐):")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pyy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Beijing\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 形式二(了解):")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pyy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Beijing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 形式一(推荐):")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 顺义\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 昌平\t\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 形式二(了解):")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("顺义"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("昌平"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("小提示：")]),t._v(" "),n("p",[t._v("​\t1  书写yaml切记"),n("code",[t._v(":")]),t._v(" 后面要加一个空格")]),t._v(" "),n("p",[t._v("​\t2  如果需要将多段yaml配置放在一个文件中，中间要使用"),n("code",[t._v("---")]),t._v("分隔")]),t._v(" "),n("p",[t._v("​    3 下面是一个yaml转json的网站，可以通过它验证yaml是否书写正确")]),t._v(" "),n("p",[t._v("​       https://www.json2yaml.com/convert-yaml-to-json")])]),t._v(" "),n("h3",{attrs:{id:"_3-3-资源管理方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-资源管理方式"}},[t._v("#")]),t._v(" 3.3 资源管理方式")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("命令式对象管理：直接使用命令去操作kubernetes资源")]),t._v(" "),n("p",[n("code",[t._v("kubectl run nginx-pod --image=nginx:1.17.1 --port=80")])])]),t._v(" "),n("li",[n("p",[t._v("命令式对象配置：通过命令配置和配置文件去操作kubernetes资源")]),t._v(" "),n("p",[n("code",[t._v("kubectl create/patch -f nginx-pod.yaml")])])]),t._v(" "),n("li",[n("p",[t._v("声明式对象配置：通过apply命令和配置文件去操作kubernetes资源")]),t._v(" "),n("p",[n("code",[t._v("kubectl apply -f nginx-pod.yaml")])])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("操作对象")]),t._v(" "),n("th",[t._v("适用环境")]),t._v(" "),n("th",[t._v("优点")]),t._v(" "),n("th",[t._v("缺点")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("命令式对象管理")]),t._v(" "),n("td",[t._v("对象")]),t._v(" "),n("td",[t._v("测试")]),t._v(" "),n("td",[t._v("简单")]),t._v(" "),n("td",[t._v("只能操作活动对象，无法审计、跟踪")])]),t._v(" "),n("tr",[n("td",[t._v("命令式对象配置")]),t._v(" "),n("td",[t._v("文件")]),t._v(" "),n("td",[t._v("开发")]),t._v(" "),n("td",[t._v("可以审计、跟踪")]),t._v(" "),n("td",[t._v("项目大时，配置文件多，操作麻烦")])]),t._v(" "),n("tr",[n("td",[t._v("声明式对象配置")]),t._v(" "),n("td",[t._v("目录")]),t._v(" "),n("td",[t._v("开发")]),t._v(" "),n("td",[t._v("支持目录操作")]),t._v(" "),n("td",[t._v("意外情况下难以调试")])])])]),t._v(" "),n("h4",{attrs:{id:"命令式对象管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令式对象管理"}},[t._v("#")]),t._v(" 命令式对象管理")]),t._v(" "),n("p",[n("strong",[t._v("kubectl命令")])]),t._v(" "),n("p",[t._v("kubectl是kubernetes集群的命令行工具，通过它能够对集群本身进行管理，并能够在集群上进行容器化应用的安装部署。kubectl命令的语法如下：")]),t._v(" "),n("div",{staticClass:"language-md extra-class"},[n("pre",{pre:!0,attrs:{class:"language-md"}},[n("code",[t._v("kubectl "),n("span",{pre:!0,attrs:{class:"token url"}},[t._v("["),n("span",{pre:!0,attrs:{class:"token content"}},[t._v("command")]),t._v("] ["),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("type")]),t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token url"}},[t._v("["),n("span",{pre:!0,attrs:{class:"token content"}},[t._v("name")]),t._v("] ["),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("flags")]),t._v("]")]),t._v("\n")])])]),n("p",[n("strong",[t._v("comand")]),t._v("：指定要对资源执行的操作，例如create、get、delete")]),t._v(" "),n("p",[n("strong",[t._v("type")]),t._v("：指定资源类型，比如deployment、pod、service")]),t._v(" "),n("p",[n("strong",[t._v("name")]),t._v("：指定资源的名称，名称大小写敏感")]),t._v(" "),n("p",[n("strong",[t._v("flags")]),t._v("：指定额外的可选参数")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有pod")]),t._v("\nkubectl get pod \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看某个pod")]),t._v("\nkubectl get pod pod_name\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看某个pod,以yaml格式展示结果")]),t._v("\nkubectl get pod pod_name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o yaml\n")])])]),n("p",[n("strong",[t._v("资源类型")])]),t._v(" "),n("p",[t._v("kubernetes中所有的内容都抽象为资源，可以通过下面的命令进行查看:")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("kubectl api"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("resources\n")])])]),n("p",[t._v("经常使用的资源有下面这些：")]),t._v(" "),n("table",[n("tr",[n("th",[t._v("资源分类")]),t._v(" "),n("th",[t._v("资源名称")]),t._v(" "),n("th",[t._v("缩写")]),t._v(" "),n("th",[t._v("资源作用")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"2"}},[t._v("集群级别资源")]),t._v(" "),n("td",[t._v("nodes")]),t._v(" "),n("td",[t._v("no")]),t._v(" "),n("td",[t._v("集群组成部分")])]),t._v(" "),n("tr",[n("td",[t._v("namespaces")]),t._v(" "),n("td",[t._v("ns")]),t._v(" "),n("td",[t._v("隔离Pod")])]),t._v(" "),n("tr",[n("td",[t._v("pod资源")]),t._v(" "),n("td",[t._v("pods")]),t._v(" "),n("td",[t._v("po")]),t._v(" "),n("td",[t._v("装载容器")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"8"}},[t._v("pod资源控制器")]),t._v(" "),n("td",[t._v("replicationcontrollers")]),t._v(" "),n("td",[t._v("rc")]),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",[t._v("replicasets")]),t._v(" "),n("td",[t._v("rs")]),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",[t._v("deployments")]),t._v(" "),n("td",[t._v("deploy")]),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",[t._v("daemonsets")]),t._v(" "),n("td",[t._v("ds")]),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",[t._v("jobs")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",[t._v("cronjobs")]),t._v(" "),n("td",[t._v("cj")]),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",[t._v("horizontalpodautoscalers")]),t._v(" "),n("td",[t._v("hpa")]),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",[t._v("statefulsets")]),t._v(" "),n("td",[t._v("sts")]),t._v(" "),n("td",[t._v("控制pod资源")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"2"}},[t._v("服务发现资源")]),t._v(" "),n("td",[t._v("services")]),t._v(" "),n("td",[t._v("svc")]),t._v(" "),n("td",[t._v("统一pod对外接口")])]),t._v(" "),n("tr",[n("td",[t._v("ingress")]),t._v(" "),n("td",[t._v("ing")]),t._v(" "),n("td",[t._v("统一pod对外接口")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"3"}},[t._v("存储资源")]),t._v(" "),n("td",[t._v("volumeattachments")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("存储")])]),t._v(" "),n("tr",[n("td",[t._v("persistentvolumes")]),t._v(" "),n("td",[t._v("pv")]),t._v(" "),n("td",[t._v("存储")])]),t._v(" "),n("tr",[n("td",[t._v("persistentvolumeclaims")]),t._v(" "),n("td",[t._v("pvc")]),t._v(" "),n("td",[t._v("存储")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"2"}},[t._v("配置资源")]),t._v(" "),n("td",[t._v("configmaps")]),t._v(" "),n("td",[t._v("cm")]),t._v(" "),n("td",[t._v("配置")])]),t._v(" "),n("tr",[n("td",[t._v("secrets")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("配置")])])]),t._v(" "),n("p",[n("strong",[t._v("操作")])]),t._v(" "),n("p",[t._v("kubernetes允许对资源进行多种操作，可以通过--help查看详细的操作命令")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("kubectl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("help\n")])])]),n("p",[t._v("经常使用的操作有下面这些：")]),t._v(" "),n("table",[n("tr",[n("th",[t._v("命令分类")]),t._v(" "),n("th",[t._v("命令")]),t._v(" "),n("th",[t._v("翻译")]),t._v(" "),n("th",[t._v("命令作用")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"6"}},[t._v("基本命令")]),t._v(" "),n("td",[t._v("create")]),t._v(" "),n("td",[t._v("创建")]),t._v(" "),n("td",[t._v("创建一个资源")])]),t._v(" "),n("tr",[n("td",[t._v("edit")]),t._v(" "),n("td",[t._v("编辑")]),t._v(" "),n("td",[t._v("编辑一个资源")])]),t._v(" "),n("tr",[n("td",[t._v("get")]),t._v(" "),n("td",[t._v("获取")]),t._v(" "),n("td",[t._v("获取一个资源")])]),t._v(" "),n("tr",[n("td",[t._v("patch")]),t._v(" "),n("td",[t._v("更新")]),t._v(" "),n("td",[t._v("更新一个资源")])]),t._v(" "),n("tr",[n("td",[t._v("delete")]),t._v(" "),n("td",[t._v("删除")]),t._v(" "),n("td",[t._v("删除一个资源")])]),t._v(" "),n("tr",[n("td",[t._v("explain")]),t._v(" "),n("td",[t._v("解释")]),t._v(" "),n("td",[t._v("展示资源文档")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"10"}},[t._v("运行和调试")]),t._v(" "),n("td",[t._v("run")]),t._v(" "),n("td",[t._v("运行")]),t._v(" "),n("td",[t._v("在集群中运行一个指定的镜像")])]),t._v(" "),n("tr",[n("td",[t._v("expose")]),t._v(" "),n("td",[t._v("暴露")]),t._v(" "),n("td",[t._v("暴露资源为Service")])]),t._v(" "),n("tr",[n("td",[t._v("describe")]),t._v(" "),n("td",[t._v("描述")]),t._v(" "),n("td",[t._v("显示资源内部信息")])]),t._v(" "),n("tr",[n("td",[t._v("logs")]),t._v(" "),n("td",[t._v("日志")]),t._v(" "),n("td",[t._v("输出容器在 pod 中的日志")])]),t._v(" "),n("tr",[n("td",[t._v("attach")]),t._v(" "),n("td",[t._v("缠绕")]),t._v(" "),n("td",[t._v("进入运行中的容器")])]),t._v(" "),n("tr",[n("td",[t._v("exec")]),t._v(" "),n("td",[t._v("执行")]),t._v(" "),n("td",[t._v("执行容器中的一个命令")])]),t._v(" "),n("tr",[n("td",[t._v("cp")]),t._v(" "),n("td",[t._v("复制")]),t._v(" "),n("td",[t._v("在Pod内外复制文件")])]),t._v(" "),n("tr",[n("td",[t._v("rollout")]),t._v(" "),n("td",[t._v("首次展示")]),t._v(" "),n("td",[t._v("管理资源的发布")])]),t._v(" "),n("tr",[n("td",[t._v("scale")]),t._v(" "),n("td",[t._v("规模")]),t._v(" "),n("td",[t._v("扩(缩)容Pod的数量")])]),t._v(" "),n("tr",[n("td",[t._v("autoscale")]),t._v(" "),n("td",[t._v("自动调整")]),t._v(" "),n("td",[t._v("自动调整Pod的数量")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"2"}},[t._v("高级命令")]),t._v(" "),n("td",[t._v("apply")]),t._v(" "),n("td",[t._v("rc")]),t._v(" "),n("td",[t._v("通过文件对资源进行配置")])]),t._v(" "),n("tr",[n("td",[t._v("label")]),t._v(" "),n("td",[t._v("标签")]),t._v(" "),n("td",[t._v("更新资源上的标签")])]),t._v(" "),n("tr",[n("td",{attrs:{rowspan:"2"}},[t._v("其他命令")]),t._v(" "),n("td",[t._v("cluster-info")]),t._v(" "),n("td",[t._v("集群信息")]),t._v(" "),n("td",[t._v("显示集群信息")])]),t._v(" "),n("tr",[n("td",[t._v("version")]),t._v(" "),n("td",[t._v("版本")]),t._v(" "),n("td",[t._v("显示当前Server和Client的版本")])])]),t._v(" "),n("p",[t._v("下面以一个namespace / pod的创建和删除简单演示下命令的使用：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个namespace")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create namespace dev")]),t._v("\nnamespace"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取namespace")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get ns")]),t._v("\nNAME              STATUS   AGE\ndefault           Active   21h \ndev               Active   21s\nkube"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("lease   Active   21h\nkube"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("public       Active   21h\nkube"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("system       Active   21h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在此namespace下创建并运行一个nginx的Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run pod --image=nginx -n dev")]),t._v("\nkubectl run "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("generator=deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("v1 is DEPRECATED and will be removed in a future version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Use kubectl run "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("generator=run"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("v1 or kubectl create instead"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pod created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看新创建的pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n dev")]),t._v("\nNAME                   READY   STATUS    RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("864f9875b9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pcw7x   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          21s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定的pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete pod pod-864f9875b9-pcw7x -n dev")]),t._v("\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod-864f9875b9-pcw7x"')]),t._v(" deleted\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定的namespace")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete ns dev")]),t._v("\nnamespace "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dev"')]),t._v(" deleted\n")])])]),n("h4",{attrs:{id:"命令式对象配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令式对象配置"}},[t._v("#")]),t._v(" 命令式对象配置")]),t._v(" "),n("p",[t._v("命令式对象配置就是使用命令配合配置文件一起来操作kubernetes资源。")]),t._v(" "),n("p",[t._v("1） 创建一个nginxpod.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Namespace\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginxpod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("containers\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n")])])]),n("p",[t._v("2）执行create命令，创建资源：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f nginxpod.yaml")]),t._v("\nnamespace"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev created\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginxpod created\n")])])]),n("p",[t._v("此时发现创建了两个资源对象，分别是namespace和pod")]),t._v(" "),n("p",[t._v("3）执行get命令，查看资源：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl get -f nginxpod.yaml")]),t._v("\nNAME            STATUS   AGE\nnamespace"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev   Active   18s\n\nNAME            READY   STATUS    RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginxpod    1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          17s\n")])])]),n("p",[t._v("这样就显示了两个资源对象的信息")]),t._v(" "),n("p",[t._v("4）执行delete命令，删除资源：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f nginxpod.yaml")]),t._v("\nnamespace "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dev"')]),t._v(" deleted\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginxpod"')]),t._v(" deleted\n")])])]),n("p",[t._v("此时发现两个资源对象被删除了")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("总结:\n命令式对象配置的方式操作资源，可以简单的认为：命令  +  yaml配置文件（里面是命令需要的各种参数）\n")])])]),n("h4",{attrs:{id:"声明式对象配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#声明式对象配置"}},[t._v("#")]),t._v(" 声明式对象配置")]),t._v(" "),n("p",[t._v("声明式对象配置跟命令式对象配置很相似，但是它只有一个命令apply。")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首先执行一次kubectl apply -f yaml文件，发现创建了资源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl apply -f nginxpod.yaml")]),t._v("\nnamespace"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev created\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginxpod created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次执行一次kubectl apply -f yaml文件，发现说资源没有变动")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl apply -f nginxpod.yaml")]),t._v("\nnamespace"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev unchanged\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginxpod unchanged\n")])])]),n("div",{staticClass:"language-md extra-class"},[n("pre",{pre:!0,attrs:{class:"language-md"}},[n("code",[t._v("总结:\n其实声明式对象配置就是使用apply描述一个资源最终的状态（在yaml中定义状态）\n使用apply操作资源：\n    如果资源不存在，就创建，相当于 kubectl create\n\t\t如果资源已存在，就更新，相当于 kubectl patch\n")])])]),n("blockquote",[n("p",[t._v("扩展：kubectl可以在node节点上运行吗 ?")])]),t._v(" "),n("p",[t._v("kubectl的运行是需要进行配置的，它的配置文件是$HOME/.kube，如果想要在node节点运行此命令，需要将master上的.kube文件复制到node节点上，即在master节点上执行下面操作：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("scp  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r  HOME"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kube   node1: HOME"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("使用推荐:  三种方式应该怎么用 ?")])]),t._v(" "),n("p",[t._v("创建/更新资源      使用声明式对象配置 kubectl apply -f  XXX.yaml")]),t._v(" "),n("p",[t._v("删除资源              使用命令式对象配置 kubectl delete -f  XXX.yaml")]),t._v(" "),n("p",[t._v("查询资源              使用命令式对象管理 kubectl get(describe) 资源名称")]),t._v(" "),n("h2",{attrs:{id:"第四章-实战入门"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第四章-实战入门"}},[t._v("#")]),t._v(" 第四章 实战入门")]),t._v(" "),n("p",[t._v("本章节将介绍如何在kubernetes集群中部署一个nginx服务，并且能够对其进行访问。")]),t._v(" "),n("h3",{attrs:{id:"_4-1-namespace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-namespace"}},[t._v("#")]),t._v(" 4.1 Namespace")]),t._v(" "),n("p",[t._v("Namespace是kubernetes系统中的一种非常重要资源，它的主要作用是用来实现"),n("strong",[t._v("多套环境的资源隔离")]),t._v("或者"),n("strong",[t._v("多租户的资源隔离")]),t._v("。")]),t._v(" "),n("p",[t._v('默认情况下，kubernetes集群中的所有的Pod都是可以相互访问的。但是在实际中，可能不想让两个Pod之间进行互相的访问，那此时就可以将两个Pod划分到不同的namespace下。kubernetes通过将集群内部的资源分配到不同的Namespace中，可以形成逻辑上的"组"，以方便不同的组的资源进行隔离使用和管理。')]),t._v(" "),n("p",[t._v("可以通过kubernetes的授权机制，将不同的namespace交给不同租户进行管理，这样就实现了多租户的资源隔离。此时还能结合kubernetes的资源配额机制，限定不同租户能占用的资源，例如CPU使用量、内存使用量等等，来实现租户可用资源的管理。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(510),alt:"image-20200407100850484"}})]),t._v(" "),n("p",[t._v("kubernetes在集群启动之后，会默认创建几个namespace")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("[root@master ~]# kubectl  get namespace\nNAME              STATUS   AGE\ndefault           Active   45h     #  所有未指定Namespace的对象都会被分配在default命名空间\nkube-node-lease   Active   45h     #  集群节点之间的心跳维护，v1.13开始引入\nkube-public       Active   45h     #  此命名空间下的资源可以被所有人访问（包括未认证用户）\nkube-system       Active   45h     #  所有由Kubernetes系统创建的资源都处于这个命名空间\n")])])]),n("p",[t._v("下面来看namespace资源的具体操作：")]),t._v(" "),n("p",[n("strong",[t._v("查看")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 查看所有的ns  命令：kubectl get ns")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get ns")]),t._v("\nNAME              STATUS   AGE\ndefault           Active   45h\nkube-node-lease   Active   45h\nkube-public       Active   45h     \nkube-system       Active   45h     \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 查看指定的ns   命令：kubectl get ns ns名称")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get ns default")]),t._v("\nNAME      STATUS   AGE\ndefault   Active   45h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3 指定输出格式  命令：kubectl get ns ns名称  -o 格式参数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubernetes支持的格式有很多，比较常见的是wide、json、yaml")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get ns default -o yaml")]),t._v("\napiVersion: v1\nkind: Namespace\nmetadata:\n  creationTimestamp: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-04-05T04:44:16Z"')]),t._v("\n  name: default\n  resourceVersion: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"151"')]),t._v("\n  selfLink: /api/v1/namespaces/default\n  uid: 7405f73a-e486-43d4-9db6-145f1409f090\nspec:\n  finalizers:\n  - kubernetes\nstatus:\n  phase: Active\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4 查看ns详情  命令：kubectl describe ns ns名称")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe ns default")]),t._v("\nName:         default\nLabels:       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nAnnotations:  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nStatus:       Active  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Active 命名空间正在使用中  Terminating 正在删除命名空间")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ResourceQuota 针对namespace做的资源限制")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# LimitRange针对namespace中的每个组件做的资源限制")]),t._v("\nNo resource quota.\nNo LimitRange resource.\n")])])]),n("p",[n("strong",[t._v("创建")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建namespace")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create ns dev")]),t._v("\nnamespace/dev created\n")])])]),n("p",[n("strong",[t._v("删除")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('# 删除namespace\n[root@master ~]# kubectl delete ns dev\nnamespace "dev" deleted\n')])])]),n("p",[n("strong",[t._v("配置方式")])]),t._v(" "),n("p",[t._v("首先准备一个yaml文件：ns-dev.yaml")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("apiVersion: v1\nkind: Namespace\nmetadata:\n  name: dev\n")])])]),n("p",[t._v("然后就可以执行对应的创建和删除命令了：")]),t._v(" "),n("p",[t._v("​    创建：kubectl  create  -f  ns-dev.yaml")]),t._v(" "),n("p",[t._v("​    删除：kubectl  delete  -f  ns-dev.yaml")]),t._v(" "),n("h3",{attrs:{id:"_4-2-pod"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-pod"}},[t._v("#")]),t._v(" 4.2 Pod")]),t._v(" "),n("p",[t._v("Pod是kubernetes集群进行管理的最小单元，程序要运行必须部署在容器中，而容器必须存在于Pod中。")]),t._v(" "),n("p",[t._v("Pod可以认为是容器的封装，一个Pod中可以存在一个或者多个容器。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(339),alt:"image-20200407121501907"}})]),t._v(" "),n("p",[t._v("kubernetes在集群启动之后，集群中的各个组件也都是以Pod方式运行的。可以通过下面命令查看：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n kube-system")]),t._v("\nNAMESPACE     NAME                             READY   STATUS    RESTARTS   AGE\nkube-system   coredns-6955765f44-68g6v         "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   coredns-6955765f44-cs5r8         "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   etcd-master                      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   kube-apiserver-master            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   kube-controller-manager-master   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   kube-flannel-ds-amd64-47r25      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   kube-flannel-ds-amd64-ls5lh      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   kube-proxy-685tk                 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   kube-proxy-87spt                 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\nkube-system   kube-scheduler-master            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2d1h\n")])])]),n("p",[n("strong",[t._v("创建并运行")])]),t._v(" "),n("p",[t._v("kubernetes没有提供单独运行Pod的命令，都是通过Pod控制器来实现的")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令格式： kubectl run (pod控制器名称) [参数] ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --image  指定Pod的镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --port   指定端口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --namespace  指定namespace")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run nginx --image=nginx:1.17.1 --port=80 --namespace dev ")]),t._v("\ndeployment.apps/nginx created\n")])])]),n("p",[n("strong",[t._v("查看pod信息")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod基本信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-5ff7956ff6-fg2db   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          43s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod的详细信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod nginx-5ff7956ff6-fg2db -n dev")]),t._v("\nName:         nginx-5ff7956ff6-fg2db\nNamespace:    dev\nPriority:     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nNode:         node1/192.1ku68.109.101\nStart Time:   Wed, 08 Apr "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" 09:29:24 +0800\nLabels:       pod-template-hash"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("5ff7956ff6\n              "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\nAnnotations:  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nStatus:       Running\nIP:           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.23\nIPs:\n  IP:           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.23\nControlled By:  ReplicaSet/nginx-5ff7956ff6\nContainers:\n  nginx:\n    Container ID:   docker://4c62b8c0648d2512380f4ffa5da2c99d16e05634979973449c98e9b829f6253c\n    Image:          nginx:1.17.1\n    Image ID:       docker-pullable://nginx@sha256:485b610fefec7ff6c463ced9623314a04ed67e3945b9c08d7e53a47f6d108dc7\n    Port:           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/TCP\n    Host Port:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/TCP\n    State:          Running\n      Started:      Wed, 08 Apr "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" 09:30:01 +0800\n    Ready:          True\n    Restart Count:  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    Environment:    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-hwvvw "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ro"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nConditions:\n  Type              Status\n  Initialized       True\n  Ready             True\n  ContainersReady   True\n  PodScheduled      True\nVolumes:\n  default-token-hwvvw:\n    Type:        Secret "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a volume populated by a Secret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    SecretName:  default-token-hwvvw\n    Optional:    "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nQoS Class:       BestEffort\nNode-Selectors:  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nTolerations:     node.kubernetes.io/not-ready:NoExecute "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 300s\n                 node.kubernetes.io/unreachable:NoExecute "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 300s\nEvents:\n  Type    Reason     Age        From               Message\n  ----    ------     ----       ----               -------\n  Normal  Scheduled  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  default-scheduler  Successfully assigned dev/nginx-5ff7956ff6-fg2db to node1\n  Normal  Pulling    4m11s      kubelet, node1     Pulling image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx:1.17.1"')]),t._v("\n  Normal  Pulled     3m36s      kubelet, node1     Successfully pulled image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx:1.17.1"')]),t._v("\n  Normal  Created    3m36s      kubelet, node1     Created container nginx\n  Normal  Started    3m36s      kubelet, node1     Started container nginx\n")])])]),n("p",[n("strong",[t._v("访问Pod")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取podIP")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE    IP             NODE    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". \nnginx-5ff7956ff6-fg2db   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          190s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.23   node1   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问POD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl http://10.244.1.23:80")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("DOCTYPE html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Welcome to nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/head"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("em"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Thank you "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" using nginx."),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/em"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[n("strong",[t._v("删除指定Pod")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete pod nginx-5ff7956ff6-fg2db -n dev")]),t._v("\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx-5ff7956ff6-fg2db"')]),t._v(" deleted\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时，显示删除Pod成功，但是再查询，发现又新产生了一个 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-5ff7956ff6-jj4ng   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          21s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这是因为当前Pod是由Pod控制器创建的，控制器会监控Pod状况，一旦发现Pod死亡，会立即重建")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时要想删除Pod，必须删除Pod控制器")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先来查询一下当前namespace下的Pod控制器")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deployment -n  dev")]),t._v("\nNAME    READY   UP-TO-DATE   AVAILABLE   AGE\nnginx   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("           9m7s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来，删除此PodPod控制器")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete deploy nginx -n dev")]),t._v("\ndeployment.apps "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v(" deleted\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 稍等片刻，再查询Pod，发现Pod被删除了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNo resources found "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dev namespace.\n")])])]),n("p",[n("strong",[t._v("配置操作")])]),t._v(" "),n("p",[t._v("创建一个pod-nginx.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n")])])]),n("p",[t._v("然后就可以执行对应的创建和删除命令了：")]),t._v(" "),n("p",[t._v("​    创建：kubectl  create  -f  pod-nginx.yaml")]),t._v(" "),n("p",[t._v("​    删除：kubectl  delete  -f  pod-nginx.yaml")]),t._v(" "),n("h3",{attrs:{id:"_4-3-label"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-label"}},[t._v("#")]),t._v(" 4.3 Label")]),t._v(" "),n("p",[t._v("Label是kubernetes系统中的一个重要概念。它的作用就是在资源上添加标识，用来对它们进行区分和选择。")]),t._v(" "),n("p",[n("strong",[t._v("Label的特点：")])]),t._v(" "),n("ul",[n("li",[t._v("一个Label会以key/value键值对的形式附加到各种对象上，如Node、Pod、Service等等")]),t._v(" "),n("li",[t._v("一个资源对象可以定义任意数量的Label ，同一个Label也可以被添加到任意数量的资源对象上去")]),t._v(" "),n("li",[t._v("Label通常在资源对象定义时确定，当然也可以在对象创建后动态添加或者删除")])]),t._v(" "),n("p",[t._v("可以通过Label实现资源的多维度分组，以便灵活、方便地进行资源分配、调度、配置、部署等管理工作。")]),t._v(" "),n("blockquote",[n("p",[t._v("一些常用的Label 示例如下：")]),t._v(" "),n("ul",[n("li",[t._v('版本标签："version":"release", "version":"stable"......')]),t._v(" "),n("li",[t._v('环境标签："environment":"dev"，"environment":"test"，"environment":"pro"')]),t._v(" "),n("li",[t._v('架构标签："tier":"frontend"，"tier":"backend"')])])]),t._v(" "),n("p",[t._v("标签定义完毕之后，还要考虑到标签的选择，这就要使用到Label Selector，即：")]),t._v(" "),n("p",[t._v("​    Label用于给某个资源对象定义标识")]),t._v(" "),n("p",[t._v("​    Label Selector用于查询和筛选拥有某些标签的资源对象")]),t._v(" "),n("p",[n("strong",[t._v("当前有两种Label Selector：")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("基于等式的Label Selector")]),t._v(" "),n("p",[t._v('name = slave: 选择所有包含Label中key="name"且value="slave"的对象')]),t._v(" "),n("p",[t._v('env != production: 选择所有包括Label中的key="env"且value不等于"production"的对象')])]),t._v(" "),n("li",[n("p",[t._v("基于集合的Label Selector")]),t._v(" "),n("p",[t._v('name in (master, slave): 选择所有包含Label中的key="name"且value="master"或"slave"的对象')]),t._v(" "),n("p",[t._v('name not in (frontend): 选择所有包含Label中的key="name"且value不等于"frontend"的对象')])])]),t._v(" "),n("p",[t._v('标签的选择条件可以使用多个，此时将多个Label Selector进行组合，使用逗号","进行分隔即可。例如：')]),t._v(" "),n("p",[t._v("​\t\tname=slave，env!=production")]),t._v(" "),n("p",[t._v("​\t\tname not in (frontend)，env!=production")]),t._v(" "),n("p",[n("strong",[t._v("命令方式")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为pod资源打标签")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label pod nginx-pod version=1.0 -n dev")]),t._v("\npod/nginx-pod labeled\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为pod资源更新标签")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label pod nginx-pod version=2.0 -n dev --overwrite")]),t._v("\npod/nginx-pod labeled\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看标签")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod nginx-pod  -n dev --show-labels")]),t._v("\nNAME        READY   STATUS    RESTARTS   AGE   LABELS\nnginx-pod   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          10m   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 筛选标签")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n dev -l version=2.0  --show-labels")]),t._v("\nNAME        READY   STATUS    RESTARTS   AGE   LABELS\nnginx-pod   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          17m   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n dev -l version!=2.0 --show-labels")]),t._v("\nNo resources found "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dev namespace.\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除标签")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label pod nginx-pod version- -n dev")]),t._v("\npod/nginx-pod labeled\n")])])]),n("p",[n("strong",[t._v("配置方式")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.0"')]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n")])])]),n("p",[t._v("然后就可以执行对应的更新命令了：kubectl  apply  -f  pod-nginx.yaml")]),t._v(" "),n("h3",{attrs:{id:"_4-4-deployment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-deployment"}},[t._v("#")]),t._v(" 4.4 Deployment")]),t._v(" "),n("p",[t._v("在kubernetes中，Pod是最小的控制单元，但是kubernetes很少直接控制Pod，一般都是通过Pod控制器来完成的。Pod控制器用于pod的管理，确保pod资源符合预期的状态，当pod的资源出现故障时，会尝试进行重启或重建pod。")]),t._v(" "),n("p",[t._v("在kubernetes中Pod控制器的种类有很多，本章节只介绍一种：Deployment。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(511),alt:"image-20200408193950807"}})]),t._v(" "),n("p",[n("strong",[t._v("命令操作")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令格式: kubectl run deployment名称  [参数] ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --image  指定pod的镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --port   指定端口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --replicas  指定创建pod数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --namespace  指定namespace")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run nginx --image=nginx:1.17.1 --port=80 --replicas=3 -n dev")]),t._v("\ndeployment.apps/nginx created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看创建的Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-5ff7956ff6-6k8cb   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          19s\nnginx-5ff7956ff6-jxfjt   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          19s\nnginx-5ff7956ff6-v6jqw   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          19s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看deployment的信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deploy -n dev")]),t._v("\nNAME    READY   UP-TO-DATE   AVAILABLE   AGE\nnginx   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("/3     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("           2m42s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# UP-TO-DATE：成功升级的副本数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AVAILABLE：可用副本的数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deploy -n dev -o wide")]),t._v("\nNAME    READY UP-TO-DATE  AVAILABLE   AGE     CONTAINERS   IMAGES              SELECTOR\nnginx   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("/3     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("           2m51s   nginx        nginx:1.17.1        "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看deployment的详细信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe deploy nginx -n dev")]),t._v("\nName:                   nginx\nNamespace:              dev\nCreationTimestamp:      Wed, 08 Apr "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":14:14 +0800\nLabels:                 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\nAnnotations:            deployment.kubernetes.io/revision: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nSelector:               "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\nReplicas:               "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" desired "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" updated "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" total "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" available "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nRollingUpdateStrategy:  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("% max unavailable, "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("% max surge\nPod Template:\n  Labels:  "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.17.1\n    Port:         "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/TCP\n    Host Port:    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/TCP\n    Environment:  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Mounts:       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  Volumes:        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nNewReplicaSet:   nginx-5ff7956ff6 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("/3 replicas created"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nEvents:\n  Type    Reason             Age    From                   Message\n  ----    ------             ----   ----                   -------\n  Normal  ScalingReplicaSet  5m43s  deployment-controller  Scaled up replicaset nginx-5ff7956ff6 to "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete deploy nginx -n dev")]),t._v("\ndeployment.apps "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v(" deleted\n")])])]),n("p",[n("strong",[t._v("配置操作")])]),t._v(" "),n("p",[t._v("创建一个deploy-nginx.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\n  namespace: dev\nspec:\n  replicas: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  selector:\n    matchLabels:\n      run: nginx\n  template:\n    metadata:\n      labels:\n        run: nginx\n    spec:\n      containers:\n      - image: nginx:1.17.1\n        name: nginx\n        ports:\n        - containerPort: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          protocol: TCP\n")])])]),n("p",[t._v("然后就可以执行对应的创建和删除命令了：")]),t._v(" "),n("p",[t._v("​    创建：kubectl  create  -f  deploy-nginx.yaml")]),t._v(" "),n("p",[t._v("​    删除：kubectl  delete  -f  deploy-nginx.yaml")]),t._v(" "),n("h3",{attrs:{id:"_4-5-service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-service"}},[t._v("#")]),t._v(" 4.5 Service")]),t._v(" "),n("p",[t._v("通过上面的学习，已经能够利用Deployment来创建一组Pod来提供具有高可用性的服务。")]),t._v(" "),n("p",[t._v("虽然每个Pod都会分配一个单独的Pod IP，然而却存在如下两问题：")]),t._v(" "),n("ul",[n("li",[t._v("Pod IP 会随着Pod的重建产生变化")]),t._v(" "),n("li",[t._v("Pod IP 仅仅是集群内可见的虚拟IP，外部无法访问")])]),t._v(" "),n("p",[t._v("这样对于访问这个服务带来了难度。因此，kubernetes设计了Service来解决这个问题。")]),t._v(" "),n("p",[t._v("Service可以看作是一组同类Pod"),n("strong",[t._v("对外的访问接口")]),t._v("。借助Service，应用可以方便地实现服务发现和负载均衡。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(512),alt:"image-20200408194716912"}})]),t._v(" "),n("p",[n("strong",[t._v("操作一：创建集群内部可访问的Service")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暴露Service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl expose deploy nginx --name=svc-nginx1 --type=ClusterIP --port=80 --target-port=80 -n dev")]),t._v("\nservice/svc-nginx1 exposed\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc svc-nginx1 -n dev -o wide")]),t._v("\nNAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   AGE     SELECTOR\nsvc-nginx1   ClusterIP   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.109")]),t._v(".179.231   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/TCP    3m51s   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里产生了一个CLUSTER-IP，这就是service的IP，在Service的生命周期中，这个地址是不会变动的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以通过这个IP访问当前service对应的POD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.109.179.231:80")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("DOCTYPE html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Welcome to nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/head"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("Welcome to nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/h"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[n("strong",[t._v("操作二：创建集群外部也可访问的Service")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面创建的Service的type类型为ClusterIP，这个ip地址只用集群内部可访问")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果需要创建外部也可以访问的Service，需要修改type为NodePort")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl expose deploy nginx --name=svc-nginx2 --type=NodePort --port=80 --target-port=80 -n dev")]),t._v("\nservice/svc-nginx2 exposed\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时查看，会发现出现了NodePort类型的Service，而且有一对Port（80:31928/TC）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc  svc-nginx2  -n dev -o wide")]),t._v("\nNAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        AGE    SELECTOR\nsvc-nginx2    NodePort    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.100")]),t._v(".94.0      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":31928/TCP   9s     "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来就可以通过集群外的主机访问 节点   IP:31928  访问服务了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 例如在的电脑主机上通过浏览器访问下面的地址")]),t._v("\nhttp://192.168.109.100:31928/\n")])])]),n("p",[n("strong",[t._v("删除Service")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# kubectl delete svc svc-nginx1 -n dev                                   service "svc-nginx-1" deleted')]),t._v("\n")])])]),n("p",[n("strong",[t._v("配置方式")])]),t._v(" "),n("p",[t._v("创建一个svc-nginx.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" svc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.109.179.231 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不指定随机分配")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n")])])]),n("p",[t._v("然后就可以执行对应的创建和删除命令了：")]),t._v(" "),n("p",[t._v("​    创建：kubectl  create  -f  svc-nginx.yaml")]),t._v(" "),n("p",[t._v("​    删除：kubectl  delete  -f  svc-nginx.yaml")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("小结")])]),t._v(" "),n("p",[t._v("至此，已经掌握了Namespace、Pod、Label、Deployment、Service资源的基本操作，有了这些操作，就可以在kubernetes集群中实现一个服务的简单部署和访问了，但是如果想要更好的使用kubernetes，就需要深入学习这几种资源的细节和原理。")])]),t._v(" "),n("h2",{attrs:{id:"第五章-pod详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第五章-pod详解"}},[t._v("#")]),t._v(" 第五章 Pod详解")]),t._v(" "),n("p",[t._v("本章节将详细介绍Pod资源的各种配置（yaml）和原理。")]),t._v(" "),n("h3",{attrs:{id:"_5-1-pod介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-pod介绍"}},[t._v("#")]),t._v(" 5.1 Pod介绍")]),t._v(" "),n("h4",{attrs:{id:"pod结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pod结构"}},[t._v("#")]),t._v(" Pod结构")]),t._v(" "),n("p",[n("img",{attrs:{src:a(339),alt:"image-20200407121501907"}})]),t._v(" "),n("p",[t._v("每个Pod中都可以包含一个或者多个容器，这些容器可以分为两类：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("用户程序所在的容器，数量可多可少")])]),t._v(" "),n("li",[n("p",[t._v("Pause容器，这是每个Pod都会有的一个"),n("strong",[t._v("根容器")]),t._v("，它的作用有两个：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("可以以它为依据，评估整个Pod的健康状态")])]),t._v(" "),n("li",[n("p",[t._v("可以在根容器上设置Ip地址，其它容器都此Ip（Pod IP），以实现Pod内部的网路通信")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("这里是Pod内部的通讯，Pod的之间的通讯采用虚拟二层网络技术来实现，我们当前环境用的是Flannel\n")])])])])])])]),t._v(" "),n("h4",{attrs:{id:"pod定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pod定义"}},[t._v("#")]),t._v(" Pod定义")]),t._v(" "),n("p",[t._v("下面是Pod的资源清单：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，版本号，例如v1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod       　 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，资源类型，例如 Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，元数据")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod名称")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Pod所属的命名空间,默认为"default"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自定义标签列表")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　          \n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器的详细定义")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器列表")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器名称")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器的镜像名称")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Always"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("Never"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("IfNotPresent "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取镜像的策略 ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令参数列表")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workingDir")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的工作目录")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#挂载到容器内部的存储卷配置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储卷在容器内mount的绝对路径，应少于512字符")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" boolean "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否为只读模式")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#需要暴露的端口库号列表")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口的名称")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器需要监听的端口号")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器所在主机需要监听的端口号，默认与Container相同")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口协议，支持TCP和UDP，默认TCP")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器运行前需设置的环境变量列表")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量名称")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量的值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制和请求的设置")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制的设置")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源请求的设置")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu请求，容器启动的初始可用数量")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存请求,容器启动的初始可用数量")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#生命周期钩子")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动后立即执行此钩子,如果执行失败,会根据重启策略进行重启")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器终止前执行此钩子,无论结果如何,容器都会终止")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内各容器健康检查的设置，当探测无响应几次后将自动重启该容器")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod容器内检查方式设置为exec方式")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#exec方式需要制定的命令或脚本")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("HttpHeaders")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方式设置为tcpSocket方式")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n       "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动完成后首次探测的时间，单位为秒")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0    　　    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0     　　    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("successThreshold")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureThreshold")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Always "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" OnFailure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod的重启策略")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeName表示将该Pod调度到指定到名称的node节点上")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obeject "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeSelector表示将该Pod调度到包含这个label的node上")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pull镜像时使用的secret名称，以key：secretkey格式指定")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostNetwork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在该pod上定义共享存储卷列表")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享存储卷名称 （volumes类型有很多种）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　　        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod所在宿主机的目录，将被用于同期中mount的目录")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　　"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为secret的存储卷，挂载集群与定义的secret对象到容器内部")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scretname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  \n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     \n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#小提示：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t在这里，可通过一个命令来查看每种资源的可配置项")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   kubectl explain 资源类型         查看某种资源可以配置的一级属性")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\tkubectl explain 资源类型.属性     查看属性的子属性")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod")]),t._v("\nKIND:     Pod\nVERSION:  v1\nFIELDS:\n   apiVersion   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   kind "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   metadata     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   spec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   status       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.metadata")]),t._v("\nKIND:     Pod\nVERSION:  v1\nRESOURCE: metadata "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nFIELDS:\n   annotations  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   clusterName  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   creationTimestamp    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   deletionGracePeriodSeconds   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   deletionTimestamp    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   finalizers   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   generateName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   generation   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   labels       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   managedFields        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   namespace    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   ownerReferences      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   resourceVersion      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   selfLink     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   uid  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[t._v("在kubernetes中基本所有资源的一级属性都是一样的，主要包含5部分：")]),t._v(" "),n("ul",[n("li",[t._v("apiVersion   "),n("string",[t._v("     版本，由kubernetes内部定义，版本号必须可以用 kubectl api-versions 查询到")])],1),t._v(" "),n("li",[t._v("kind "),n("string",[t._v("                类型，由kubernetes内部定义，版本号必须可以用 kubectl api-resources 查询到")])],1),t._v(" "),n("li",[t._v("metadata   "),n("Object",[t._v("     元数据，主要是资源标识和说明，常用的有name、namespace、labels等")])],1),t._v(" "),n("li",[t._v("spec "),n("Object",[t._v("               描述，这是配置中最重要的一部分，里面是对各种资源配置的详细描述")])],1),t._v(" "),n("li",[t._v("status  "),n("Object",[t._v("            状态信息，里面的内容不需要定义，由kubernetes自动生成")])],1)]),t._v(" "),n("p",[t._v("在上面的属性中，spec是接下来研究的重点，继续看下它的常见子属性:")]),t._v(" "),n("ul",[n("li",[t._v("containers   <[]Object>       容器列表，用于定义容器的详细信息")]),t._v(" "),n("li",[t._v("nodeName "),n("String",[t._v("           根据nodeName的值将pod调度到指定的Node节点上")])],1),t._v(" "),n("li",[t._v("nodeSelector   <map[]>      根据NodeSelector中定义的信息选择将该Pod调度到包含这些label的Node 上")]),t._v(" "),n("li",[t._v("hostNetwork  "),n("boolean",[t._v("    是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络")])],1),t._v(" "),n("li",[t._v("volumes      <[]Object>       存储卷，用于定义Pod上面挂在的存储信息")]),t._v(" "),n("li",[t._v("restartPolicy\t"),n("string",[t._v("       重启策略，表示Pod在遇到故障的时候的处理策略")])],1)]),t._v(" "),n("h3",{attrs:{id:"_5-2-pod配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-pod配置"}},[t._v("#")]),t._v(" 5.2 Pod配置")]),t._v(" "),n("p",[t._v("本小节主要来研究"),n("code",[t._v("pod.spec.containers")]),t._v("属性，这也是pod配置中最为关键的一项配置。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.spec.containers")]),t._v("\nKIND:     Pod\nVERSION:  v1\nRESOURCE: containers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组，代表可以有多个容器")]),t._v("\nFIELDS:\n   name  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n   image "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n   imagePullPolicy  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 镜像拉取策略 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n   args     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器的启动命令需要的参数列表")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器环境变量的配置")]),t._v("\n   ports    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要暴露的端口号列表")]),t._v("\n   resources "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源限制和资源请求的设置")]),t._v("\n")])])]),n("h4",{attrs:{id:"基本配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本配置"}},[t._v("#")]),t._v(" 基本配置")]),t._v(" "),n("p",[t._v("创建pod-base.yaml文件，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pyy\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n")])])]),n("p",[t._v("上面定义了一个比较简单Pod的配置，里面有两个容器：")]),t._v(" "),n("ul",[n("li",[t._v("nginx：用1.17.1版本的nginx镜像创建，（nginx是一个轻量级web容器）")]),t._v(" "),n("li",[t._v("busybox：用1.30版本的busybox镜像创建，（busybox是一个小巧的linux命令集合）")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod-base.yaml")]),t._v("\npod/pod-base created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod状况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# READY 1/2 : 表示当前Pod中有2个容器，其中1个准备就绪，1个未就绪")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RESTARTS  : 重启次数，因为有1个容器故障了，Pod一直在重启试图恢复它")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n dev")]),t._v("\nNAME       READY   STATUS    RESTARTS   AGE\npod-base   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/2     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("          95s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以通过describe查看内部的详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时已经运行起来了一个基本的Pod，虽然它暂时有问题")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod pod-base -n dev")]),t._v("\n")])])]),n("h4",{attrs:{id:"镜像拉取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#镜像拉取"}},[t._v("#")]),t._v(" 镜像拉取")]),t._v(" "),n("p",[t._v("创建pod-imagepullpolicy.yaml文件，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("imagepullpolicy\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.2\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于设置镜像拉取策略")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n")])])]),n("p",[t._v("imagePullPolicy，用于设置镜像拉取策略，kubernetes支持配置三种拉取策略：")]),t._v(" "),n("ul",[n("li",[t._v("Always：总是从远程仓库拉取镜像（一直远程下载）")]),t._v(" "),n("li",[t._v("IfNotPresent：本地有则使用本地镜像，本地没有则从远程仓库拉取镜像（本地有就本地  本地没远程下载）")]),t._v(" "),n("li",[t._v("Never：只使用本地镜像，从不去远程仓库拉取，本地没有就报错 （一直使用本地）")])]),t._v(" "),n("blockquote",[n("p",[t._v("默认值说明：")]),t._v(" "),n("p",[t._v("​    如果镜像tag为具体版本号， 默认策略是：IfNotPresent")]),t._v(" "),n("p",[t._v("​\t如果镜像tag为：latest（最终版本） ，默认策略是always")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-imagepullpolicy.yaml")]),t._v("\npod/pod-imagepullpolicy created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 此时明显可以看到nginx镜像有一步Pulling image "nginx:1.17.1"的过程')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod pod-imagepullpolicy -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nEvents:\n  Type     Reason     Age               From               Message\n  ----     ------     ----              ----               -------\n  Normal   Scheduled  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("         default-scheduler  Successfully assigned dev/pod-imagePullPolicy to node1\n  Normal   Pulling    32s               kubelet, node1     Pulling image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx:1.17.1"')]),t._v("\n  Normal   Pulled     26s               kubelet, node1     Successfully pulled image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx:1.17.1"')]),t._v("\n  Normal   Created    26s               kubelet, node1     Created container nginx\n  Normal   Started    25s               kubelet, node1     Started container nginx\n  Normal   Pulled     7s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 25s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Container image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"busybox:1.30"')]),t._v(" already present on machine\n  Normal   Created    7s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 25s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Created container busybox\n  Normal   Started    7s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 25s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Started container busybox\n")])])]),n("h4",{attrs:{id:"启动命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动命令"}},[t._v("#")]),t._v(" 启动命令")]),t._v(" "),n("p",[t._v("在前面的案例中，一直有一个问题没有解决，就是的busybox容器一直没有成功运行，那么到底是什么原因导致这个容器的故障呢？")]),t._v(" "),n("p",[t._v("原来busybox并不是一个程序，而是类似于一个工具类的集合，kubernetes集群启动管理后，它会自动关闭。解决方法就是让其一直在运行，这就用到了command配置。")]),t._v(" "),n("p",[t._v("创建pod-command.yaml文件，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("command\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touch /tmp/hello.txt;while true;do /bin/echo $(date +%T) >> /tmp/hello.txt; sleep 3; done;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("p",[t._v("command，用于在pod中的容器初始化完毕之后运行一个命令。")]),t._v(" "),n("blockquote",[n("p",[t._v("稍微解释下上面命令的意思：")]),t._v(" "),n("p",[t._v('​    "/bin/sh","-c",  使用sh执行命令')]),t._v(" "),n("p",[t._v("​    touch /tmp/hello.txt;   创建一个/tmp/hello.txt 文件")]),t._v(" "),n("p",[t._v("​    while true;do /bin/echo $(date +%T) >> /tmp/hello.txt; sleep 3; done;  每隔3秒向文件中写入当前时间")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create  -f pod-command.yaml")]),t._v("\npod/pod-command created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时发现两个pod都正常运行了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-command -n dev")]),t._v("\nNAME          READY   STATUS   RESTARTS   AGE\npod-command   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     Runing   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入pod中的busybox容器，查看文件内容")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 补充一个命令: kubectl exec  pod名称 -n 命名空间 -it -c 容器名称 /bin/sh  在容器内部执行命令")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用这个命令就可以进入某个容器的内部，然后进行相关操作了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如，可以查看txt文件的内容")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec pod-command -n dev -it -c busybox /bin/sh")]),t._v("\n/ "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tail -f /tmp/hello.txt")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":35:35\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":35:38\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":35:41\n特别说明：\n    通过上面发现command已经可以完成启动命令和传递参数的功能，为什么这里还要提供一个args选项，用于传递参数呢?这其实跟docker有点关系，kubernetes中的command、args两项其实是实现覆盖Dockerfile中ENTRYPOINT的功能。\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 如果command和args均没有写，那么用Dockerfile的配置。\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 如果command写了，但args没有写，那么Dockerfile默认的配置会被忽略，执行输入的command\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" 如果command没写，但args写了，那么Dockerfile中配置的ENTRYPOINT的命令会被执行，使用当前args的参数\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 如果command和args都写了，那么Dockerfile的配置被忽略，执行command并追加上args参数\n")])])]),n("h4",{attrs:{id:"环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),n("p",[t._v("创建pod-env.yaml文件，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("env\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"while true;do /bin/echo $(date +%T);sleep 60; done;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置环境变量列表")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v("\n")])])]),n("p",[t._v("env，环境变量，用于在pod中的容器设置环境变量。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 创建Pod\n[root@master ~]# kubectl create -f pod-env.yaml\npod/pod-env created\n\n# 进入容器，输出环境变量\n[root@master ~]# kubectl exec pod-env -n dev -c busybox -it /bin/sh\n/ # echo $username\nadmin\n/ # echo $password\n123456\n")])])]),n("p",[t._v("这种方式不是很推荐，推荐将这些配置单独存储在配置文件中，这种方式将在后面介绍。")]),t._v(" "),n("h4",{attrs:{id:"端口设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#端口设置"}},[t._v("#")]),t._v(" 端口设置")]),t._v(" "),n("p",[t._v("本小节来介绍容器的端口设置，也就是containers的ports选项。")]),t._v(" "),n("p",[t._v("首先看下ports支持的子选项：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.spec.containers.ports")]),t._v("\nKIND:     Pod\nVERSION:  v1\nRESOURCE: ports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nFIELDS:\n   name         "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口名称，如果指定，必须保证name在pod中是唯一的\t\t")]),t._v("\n   containerPort"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器要监听的端口(0<x<65536)")]),t._v("\n   hostPort     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器要在主机上公开的端口，如果设置，主机上只能运行容器的一个副本(一般省略) ")]),t._v("\n   hostIP       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要将外部端口绑定到的主机IP(一般省略)")]),t._v("\n   protocol     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口协议。必须是UDP、TCP或SCTP。默认为“TCP”。")]),t._v("\n")])])]),n("p",[t._v("接下来，编写一个测试案例，创建pod-ports.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ports\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置容器暴露的端口列表")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-ports.yaml")]),t._v("\npod/pod-ports created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在下面可以明显看到配置信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-ports -n dev -o yaml")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nspec:\n  containers:\n  - image: nginx:1.17.1\n    imagePullPolicy: IfNotPresent\n    name: nginx\n    ports:\n    - containerPort: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      name: nginx-port\n      protocol: TCP\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n")])])]),n("p",[t._v("访问容器中的程序需要使用的是"),n("code",[t._v("podIp:containerPort")])]),t._v(" "),n("h4",{attrs:{id:"资源配额"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#资源配额"}},[t._v("#")]),t._v(" 资源配额")]),t._v(" "),n("p",[t._v("容器中的程序要运行，肯定是要占用一定资源的，比如cpu和内存等，如果不对某个容器的资源做限制，那么它就可能吃掉大量资源，导致其它容器无法运行。针对这种情况，kubernetes提供了对内存和cpu的资源进行配额的机制，这种机制主要通过resources选项实现，他有两个子选项：")]),t._v(" "),n("ul",[n("li",[t._v("limits：用于限制运行时容器的最大占用资源，当容器占用资源超过limits时会被终止，并进行重启")]),t._v(" "),n("li",[t._v("requests ：用于设置容器需要的最小资源，如果环境资源不够，容器将无法启动")])]),t._v(" "),n("p",[t._v("可以通过上面两个选项设置资源的上下限。")]),t._v(" "),n("p",[t._v("接下来，编写一个测试案例，创建pod-resources.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("resources\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源配额")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制资源（上限）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求资源（下限）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制")]),t._v("\n")])])]),n("p",[t._v("在这对cpu和memory的单位做一个说明：")]),t._v(" "),n("ul",[n("li",[t._v("cpu：core数，可以为整数或小数")]),t._v(" "),n("li",[t._v("memory： 内存大小，可以使用Gi、Mi、G、M等形式")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create  -f pod-resources.yaml")]),t._v("\npod/pod-resources created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看发现pod运行正常")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-resources -n dev")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE  \npod-resources   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          39s   \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来，停止Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete  -f pod-resources.yaml")]),t._v("\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod-resources"')]),t._v(" deleted\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑pod，修改resources.requests.memory的值为10Gi")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod-resources.yaml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次启动pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create  -f pod-resources.yaml")]),t._v("\npod/pod-resources created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod状态，发现Pod启动失败")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-resources -n dev -o wide")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE          \npod-resources   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/2     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          20s    \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod详情会发现，如下提示")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod pod-resources -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nWarning  FailedScheduling  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  default-scheduler  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/2 nodes are available: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" Insufficient memory."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("内存不足"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"_5-3-pod生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-pod生命周期"}},[t._v("#")]),t._v(" 5.3 Pod生命周期")]),t._v(" "),n("p",[t._v("我们一般将pod对象从创建至终的这段时间范围称为pod的生命周期，它主要包含下面的过程：")]),t._v(" "),n("ul",[n("li",[t._v("pod创建过程")]),t._v(" "),n("li",[t._v("运行初始化容器（init container）过程")]),t._v(" "),n("li",[t._v("运行主容器（main container）\n"),n("ul",[n("li",[t._v("容器启动后钩子（post start）、容器终止前钩子（pre stop）")]),t._v(" "),n("li",[t._v("容器的存活性探测（liveness probe）、就绪性探测（readiness probe）")])])]),t._v(" "),n("li",[t._v("pod终止过程")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(513),alt:"image-20200412111402706"}})]),t._v(" "),n("p",[t._v("在整个生命周期中，Pod会出现5种"),n("strong",[t._v("状态")]),t._v("（"),n("strong",[t._v("相位")]),t._v("），分别如下：")]),t._v(" "),n("ul",[n("li",[t._v("挂起（Pending）：apiserver已经创建了pod资源对象，但它尚未被调度完成或者仍处于下载镜像的过程中")]),t._v(" "),n("li",[t._v("运行中（Running）：pod已经被调度至某节点，并且所有容器都已经被kubelet创建完成")]),t._v(" "),n("li",[t._v("成功（Succeeded）：pod中的所有容器都已经成功终止并且不会被重启")]),t._v(" "),n("li",[t._v("失败（Failed）：所有容器都已经终止，但至少有一个容器终止失败，即容器返回了非0值的退出状态")]),t._v(" "),n("li",[t._v("未知（Unknown）：apiserver无法正常获取到pod对象的状态信息，通常由网络通信失败所导致")])]),t._v(" "),n("h4",{attrs:{id:"创建和终止"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建和终止"}},[t._v("#")]),t._v(" 创建和终止")]),t._v(" "),n("p",[n("strong",[t._v("pod的创建过程")])]),t._v(" "),n("ol",[n("li",[n("p",[t._v("用户通过kubectl或其他api客户端提交需要创建的pod信息给apiServer")])]),t._v(" "),n("li",[n("p",[t._v("apiServer开始生成pod对象的信息，并将信息存入etcd，然后返回确认信息至客户端")])]),t._v(" "),n("li",[n("p",[t._v("apiServer开始反映etcd中的pod对象的变化，其它组件使用watch机制来跟踪检查apiServer上的变动")])]),t._v(" "),n("li",[n("p",[t._v("scheduler发现有新的pod对象要创建，开始为Pod分配主机并将结果信息更新至apiServer")])]),t._v(" "),n("li",[n("p",[t._v("node节点上的kubelet发现有pod调度过来，尝试调用docker启动容器，并将结果回送至apiServer")])]),t._v(" "),n("li",[n("p",[t._v("apiServer将接收到的pod状态信息存入etcd中")]),t._v(" "),n("p",[n("img",{attrs:{src:a(514),alt:"image-20200406184656917"}})])])]),t._v(" "),n("p",[n("strong",[t._v("pod的终止过程")])]),t._v(" "),n("ol",[n("li",[t._v("用户向apiServer发送删除pod对象的命令")]),t._v(" "),n("li",[t._v("apiServcer中的pod对象信息会随着时间的推移而更新，在宽限期内（默认30s），pod被视为dead")]),t._v(" "),n("li",[t._v("将pod标记为terminating状态")]),t._v(" "),n("li",[t._v("kubelet在监控到pod对象转为terminating状态的同时启动pod关闭过程")]),t._v(" "),n("li",[t._v("端点控制器监控到pod对象的关闭行为时将其从所有匹配到此端点的service资源的端点列表中移除")]),t._v(" "),n("li",[t._v("如果当前pod对象定义了preStop钩子处理器，则在其标记为terminating后即会以同步的方式启动执行")]),t._v(" "),n("li",[t._v("pod对象中的容器进程收到停止信号")]),t._v(" "),n("li",[t._v("宽限期结束后，若pod中还存在仍在运行的进程，那么pod对象会收到立即终止的信号")]),t._v(" "),n("li",[t._v("kubelet请求apiServer将此pod资源的宽限期设置为0从而完成删除操作，此时pod对于用户已不可见")])]),t._v(" "),n("h4",{attrs:{id:"初始化容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化容器"}},[t._v("#")]),t._v(" 初始化容器")]),t._v(" "),n("p",[t._v("初始化容器是在pod的主容器启动之前要运行的容器，主要是做一些主容器的前置工作，它具有两大特征：")]),t._v(" "),n("ol",[n("li",[t._v("初始化容器必须运行完成直至结束，若某初始化容器运行失败，那么kubernetes需要重启它直到成功完成")]),t._v(" "),n("li",[t._v("初始化容器必须按照定义的顺序执行，当且仅当前一个成功之后，后面的一个才能运行")])]),t._v(" "),n("p",[t._v("初始化容器有很多的应用场景，下面列出的是最常见的几个：")]),t._v(" "),n("ul",[n("li",[t._v("提供主容器镜像中不具备的工具程序或自定义代码")]),t._v(" "),n("li",[t._v("初始化容器要先于应用容器串行启动并运行完成，因此可用于延后应用容器的启动直至其依赖的条件得到满足")])]),t._v(" "),n("p",[t._v("接下来做一个案例，模拟下面这个需求：")]),t._v(" "),n("p",[t._v("​    假设要以主容器来运行nginx，但是要求在运行nginx之前先要能够连接上mysql和redis所在服务器")]),t._v(" "),n("p",[t._v("​    为了简化测试，事先规定好mysql"),n("code",[t._v("(192.168.109.201)")]),t._v("和redis"),n("code",[t._v("(192.168.109.202)")]),t._v("服务器的地址")]),t._v(" "),n("p",[t._v("创建pod-initcontainer.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("initcontainer\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initContainers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mysql\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sh'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'until ping 192.168.109.201 -c 1 ; do echo waiting for mysql...; sleep 2; done;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("redis\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sh'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'until ping 192.168.109.202 -c 1 ; do echo waiting for reids...; sleep 2; done;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-initcontainer.yaml")]),t._v("\npod/pod-initcontainer created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发现pod卡在启动第一个初始化容器过程中，后面的容器不会运行")]),t._v("\nroot@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod  pod-initcontainer -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  49s   default-scheduler  Successfully assigned dev/pod-initcontainer to node1\n  Normal  Pulled     48s   kubelet, node1     Container image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"busybox:1.30"')]),t._v(" already present on machine\n  Normal  Created    48s   kubelet, node1     Created container test-mysql\n  Normal  Started    48s   kubelet, node1     Started container test-mysql\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 动态查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-initcontainer -n dev -w")]),t._v("\nNAME                             READY   STATUS     RESTARTS   AGE\npod-initcontainer                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Init:0/2   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          15s\npod-initcontainer                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Init:1/2   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          52s\npod-initcontainer                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Init:1/2   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          53s\npod-initcontainer                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     PodInitializing   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          89s\npod-initcontainer                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          90s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来新开一个shell，为当前服务器新增两个ip，观察pod的变化")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ifconfig ens33:1 192.168.109.201 netmask 255.255.255.0 up")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ifconfig ens33:2 192.168.109.202 netmask 255.255.255.0 up")]),t._v("\n")])])]),n("h4",{attrs:{id:"钩子函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数"}},[t._v("#")]),t._v(" 钩子函数")]),t._v(" "),n("p",[t._v("钩子函数能够感知自身生命周期中的事件，并在相应的时刻到来时运行用户指定的程序代码。")]),t._v(" "),n("p",[t._v("kubernetes在主容器的启动之后和停止之前提供了两个钩子函数：")]),t._v(" "),n("ul",[n("li",[t._v("post start：容器创建之后执行，如果失败了会重启容器")]),t._v(" "),n("li",[t._v("pre stop  ：容器终止之前执行，执行完成之后容器将成功终止，在其完成之前会阻塞删除容器的操作")])]),t._v(" "),n("p",[t._v("钩子处理器支持使用下面三种方式定义动作：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Exec命令：在容器内执行一次命令")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[t._v("……\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n……\n")])])])]),t._v(" "),n("li",[n("p",[t._v("TCPSocket：在当前容器尝试访问指定的socket")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[t._v("……      \n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n……\n")])])])]),t._v(" "),n("li",[n("p",[t._v("HTTPGet：在当前容器中向某url发起http请求")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[t._v("……\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" / "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#URI地址")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#主机地址")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持的协议，http或者https")]),t._v("\n……\n")])])])])]),t._v(" "),n("p",[t._v("接下来，以exec方式为例，演示下钩子函数的使用，创建pod-hook-exec.yaml文件，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exec\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在容器启动的时候执行一个命令，修改掉nginx的默认首页内容")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo postStart... > /usr/share/nginx/html/index.html"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在容器停止之前停止nginx服务")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/sbin/nginx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-hook-exec.yaml")]),t._v("\npod/pod-hook-exec created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods  pod-hook-exec -n dev -o wide")]),t._v("\nNAME           READY   STATUS     RESTARTS   AGE    IP            NODE    \npod-hook-exec  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          29s    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".2.48   node2   \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.244.2.48")]),t._v("\npostStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),n("h4",{attrs:{id:"容器探测"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器探测"}},[t._v("#")]),t._v(" 容器探测")]),t._v(" "),n("p",[t._v('容器探测用于检测容器中的应用实例是否正常工作，是保障业务可用性的一种传统机制。如果经过探测，实例的状态不符合预期，那么kubernetes就会把该问题实例" 摘除 "，不承担业务流量。kubernetes提供了两种探针来实现容器探测，分别是：')]),t._v(" "),n("ul",[n("li",[t._v("liveness probes：存活性探针，用于检测应用实例当前是否处于正常运行状态，如果不是，k8s会重启容器")]),t._v(" "),n("li",[t._v("readiness probes：就绪性探针，用于检测应用实例当前是否可以接收请求，如果不能，k8s不会转发流量")])]),t._v(" "),n("blockquote",[n("p",[t._v("livenessProbe 决定是否重启容器，readinessProbe 决定是否将请求转发给容器。")])]),t._v(" "),n("p",[t._v("上面两种探针目前均支持三种探测方式：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Exec命令：在容器内执行一次命令，如果命令执行的退出码为0，则认为程序正常，否则不正常")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[t._v("……\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n……\n")])])])]),t._v(" "),n("li",[n("p",[t._v("TCPSocket：将会尝试访问一个用户容器的端口，如果能够建立这条连接，则认为程序正常，否则不正常")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[t._v("……      \n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n……\n")])])])]),t._v(" "),n("li",[n("p",[t._v("HTTPGet：调用容器内Web应用的URL，如果返回的状态码在200和399之间，则认为程序正常，否则不正常")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[t._v("……\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" / "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#URI地址")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#主机地址")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持的协议，http或者https")]),t._v("\n……\n")])])])])]),t._v(" "),n("p",[t._v("下面以liveness probes为例，做几个演示：")]),t._v(" "),n("p",[n("strong",[t._v("方式一：Exec")])]),t._v(" "),n("p",[t._v("创建pod-liveness-exec.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("liveness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exec\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/cat"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/hello.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行一个查看文件的命令")]),t._v("\n")])])]),n("p",[t._v("创建pod，观察效果")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-liveness-exec.yaml")]),t._v("\npod/pod-liveness-exec created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pods pod-liveness-exec -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n  Normal   Created    20s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2 over 50s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Created container nginx\n  Normal   Started    20s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2 over 50s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Started container nginx\n  Normal   Killing    20s                kubelet, node1     Container nginx failed liveness probe, will be restarted\n  Warning  Unhealthy  0s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x5 over 40s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   kubelet, node1     Liveness probe failed: cat: can"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t open '")]),t._v("/tmp/hello11.txt': No such "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 观察上面的信息就会发现nginx容器启动之后就进行了健康检查")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查失败之后，容器被kill掉，然后尝试进行重启（这是重启策略的作用，后面讲解）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 稍等一会之后，再观察pod信息，就可以看到RESTARTS不再是0，而是一直增长")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-liveness-exec -n dev")]),t._v("\nNAME                READY   STATUS             RESTARTS   AGE\npod-liveness-exec   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     CrashLoopBackOff   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("          3m19s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然接下来，可以修改成一个存在的文件，比如/tmp/hello.txt，再试，结果就正常了......")]),t._v("\n")])])]),n("p",[n("strong",[t._v("方式二：TCPSocket")])]),t._v(" "),n("p",[t._v("创建pod-liveness-tcpsocket.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("liveness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tcpsocket\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 尝试访问8080端口")]),t._v("\n")])])]),n("p",[t._v("创建pod，观察效果")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-liveness-tcpsocket.yaml")]),t._v("\npod/pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("liveness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tcpsocket created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pods pod-liveness-tcpsocket -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  Normal   Scheduled  31s                            default"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("scheduler  Successfully assigned dev/pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("liveness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tcpsocket to node2\n  Normal   Pulled     <invalid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("                      kubelet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(' node2     Container image "nginx'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('1.17.1" already present on machine\n  Normal   Created    <invalid'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("                      kubelet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node2     Created container nginx\n  Normal   Started    <invalid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("                      kubelet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node2     Started container nginx\n  Warning  Unhealthy  <invalid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" (x2 over <invalid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(")  kubelet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node2     Liveness probe failed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dial tcp 10.244.2.44:8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" connection refused\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 观察上面的信息，发现尝试访问8080端口,但是失败了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 稍等一会之后，再观察pod信息，就可以看到RESTARTS不再是0，而是一直增长")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-liveness-tcpsocket  -n dev")]),t._v("\nNAME                     READY   STATUS             RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("liveness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tcpsocket   0/1     CrashLoopBackOff   2          3m19s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然接下来，可以修改成一个可以访问的端口，比如80，再试，结果就正常了......")]),t._v("\n")])])]),n("p",[n("strong",[t._v("方式三：HTTPGet")])]),t._v(" "),n("p",[t._v("创建pod-liveness-httpget.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("liveness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("httpget\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其实就是访问http://127.0.0.1:80/hello  ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持的协议，http或者https")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /hello "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#URI地址")]),t._v("\n")])])]),n("p",[t._v("创建pod，观察效果")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-liveness-httpget.yaml")]),t._v("\npod/pod-liveness-httpget created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod pod-liveness-httpget -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n  Normal   Pulled     6s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 64s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Container image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx:1.17.1"')]),t._v(" already present on machine\n  Normal   Created    6s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 64s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Created container nginx\n  Normal   Started    6s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 63s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Started container nginx\n  Warning  Unhealthy  6s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x6 over 56s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Liveness probe failed: HTTP probe failed with statuscode: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("\n  Normal   Killing    6s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2 over 36s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Container nginx failed liveness probe, will be restarted\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 观察上面信息，尝试访问路径，但是未找到,出现404错误")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 稍等一会之后，再观察pod信息，就可以看到RESTARTS不再是0，而是一直增长")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-liveness-httpget -n dev")]),t._v("\nNAME                   READY   STATUS    RESTARTS   AGE\npod-liveness-httpget   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("          3m17s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然接下来，可以修改成一个可以访问的路径path，比如/，再试，结果就正常了......")]),t._v("\n")])])]),n("p",[t._v("至此，已经使用liveness Probe演示了三种探测方式，但是查看livenessProbe的子属性，会发现除了这三种方式，还有一些其他的配置，在这里一并解释下：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.spec.containers.livenessProbe")]),t._v("\nFIELDS:\n   "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n   tcpSocket    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   httpGet      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   initialDelaySeconds  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器启动后等待多少秒执行第一次探测")]),t._v("\n   timeoutSeconds       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 探测超时时间。默认1秒，最小1秒")]),t._v("\n   periodSeconds        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行探测的频率。默认是10秒，最小1秒")]),t._v("\n   failureThreshold     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连续探测失败多少次才被认定为失败。默认是3。最小值是1")]),t._v("\n   successThreshold     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连续探测成功多少次才被认定为成功。默认是1")]),t._v("\n")])])]),n("p",[t._v("下面稍微配置两个，演示下效果即可：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more pod-liveness-httpget.yaml")]),t._v("\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-liveness-httpget\n  namespace: dev\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.17.1\n    ports:\n    - name: nginx-port\n      containerPort: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    livenessProbe:\n      httpGet:\n        scheme: HTTP\n        port: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" \n        path: /\n      initialDelaySeconds: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器启动后30s开始探测")]),t._v("\n      timeoutSeconds: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 探测超时时间为5s")]),t._v("\n")])])]),n("h4",{attrs:{id:"重启策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重启策略"}},[t._v("#")]),t._v(" 重启策略")]),t._v(" "),n("p",[t._v("在上一节中，一旦容器探测出现了问题，kubernetes就会对容器所在的Pod进行重启，其实这是由pod的重启策略决定的，pod的重启策略有 3 种，分别如下：")]),t._v(" "),n("ul",[n("li",[t._v("Always ：容器失效时，自动重启该容器，这也是默认值。")]),t._v(" "),n("li",[t._v("OnFailure ： 容器终止运行且退出码不为0时重启")]),t._v(" "),n("li",[t._v("Never ： 不论状态为何，都不重启该容器")])]),t._v(" "),n("p",[t._v("重启策略适用于pod对象中的所有容器，首次需要重启的容器，将在其需要时立即进行重启，随后再次需要重启的操作将由kubelet延迟一段时间后进行，且反复的重启操作的延迟时长以此为10s、20s、40s、80s、160s和300s，300s是最大延迟时长。")]),t._v(" "),n("p",[t._v("创建pod-restartpolicy.yaml：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("restartpolicy\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /hello\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置重启策略为Never")]),t._v("\n")])])]),n("p",[t._v("运行Pod测试")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-restartpolicy.yaml")]),t._v("\npod/pod-restartpolicy created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod详情，发现nginx容器失败")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl  describe pods pod-restartpolicy  -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n  Warning  Unhealthy  15s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 35s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, node1     Liveness probe failed: HTTP probe failed with statuscode: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("\n  Normal   Killing    15s                kubelet, node1     Container nginx failed liveness probe\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 多等一会，再观察pod的重启次数，发现一直是0，并未重启   ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl  get pods pod-restartpolicy -n dev")]),t._v("\nNAME                   READY   STATUS    RESTARTS   AGE\npod-restartpolicy      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          5min42s\n")])])]),n("h3",{attrs:{id:"_5-4-pod调度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-pod调度"}},[t._v("#")]),t._v(" 5.4 Pod调度")]),t._v(" "),n("p",[t._v("在默认情况下，一个Pod在哪个Node节点上运行，是由Scheduler组件采用相应的算法计算出来的，这个过程是不受人工控制的。但是在实际使用中，这并不满足的需求，因为很多情况下，我们想控制某些Pod到达某些节点上，那么应该怎么做呢？这就要求了解kubernetes对Pod的调度规则，kubernetes提供了四大类调度方式：")]),t._v(" "),n("ul",[n("li",[t._v("自动调度：运行在哪个节点上完全由Scheduler经过一系列的算法计算得出")]),t._v(" "),n("li",[t._v("定向调度：NodeName、NodeSelector")]),t._v(" "),n("li",[t._v("亲和性调度：NodeAffinity、PodAffinity、PodAntiAffinity")]),t._v(" "),n("li",[t._v("污点（容忍）调度：Taints、Toleration")])]),t._v(" "),n("h4",{attrs:{id:"定向调度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定向调度"}},[t._v("#")]),t._v(" 定向调度")]),t._v(" "),n("p",[t._v("定向调度，指的是利用在pod上声明nodeName或者nodeSelector，以此将Pod调度到期望的node节点上。注意，这里的调度是强制的，这就意味着即使要调度的目标Node不存在，也会向上面进行调度，只不过pod运行失败而已。")]),t._v(" "),n("p",[n("strong",[t._v("NodeName")])]),t._v(" "),n("p",[t._v("NodeName用于强制约束将Pod调度到指定的Name的Node节点上。这种方式，其实是直接跳过Scheduler的调度逻辑，直接将Pod调度到指定名称的节点。")]),t._v(" "),n("p",[t._v("接下来，实验一下：创建一个pod-nodename.yaml文件")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodename\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定调度到node1节点上")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-nodename.yaml")]),t._v("\npod/pod-nodename created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看Pod调度到NODE属性，确实是调度到了node1节点上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-nodename -n dev -o wide")]),t._v("\nNAME           READY   STATUS    RESTARTS   AGE   IP            NODE      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\npod-nodename   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          56s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.87   node1     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("   \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来，删除pod，修改nodeName的值为node3（并没有node3节点）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f pod-nodename.yaml")]),t._v("\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod-nodename"')]),t._v(" deleted\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod-nodename.yaml")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-nodename.yaml")]),t._v("\npod/pod-nodename created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#再次查看，发现已经向Node3节点调度，但是由于不存在node3节点，所以pod无法正常运行")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-nodename -n dev -o wide")]),t._v("\nNAME           READY   STATUS    RESTARTS   AGE   IP       NODE    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\npod-nodename   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          6s    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   node3   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("           \n")])])]),n("p",[n("strong",[t._v("NodeSelector")])]),t._v(" "),n("p",[t._v("NodeSelector用于将pod调度到添加了指定标签的node节点上。它是通过kubernetes的label-selector机制实现的，也就是说，在pod创建之前，会由scheduler使用MatchNodeSelector调度策略进行label匹配，找出目标node，然后将pod调度到目标节点，该匹配规则是强制约束。")]),t._v(" "),n("p",[t._v("接下来，实验一下：")]),t._v(" "),n("p",[t._v("1 首先分别为node节点添加标签")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label nodes node1 nodeenv=pro")]),t._v("\nnode/node2 labeled\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl label nodes node2 nodeenv=test")]),t._v("\nnode/node2 labeled\n")])])]),n("p",[t._v("2 创建一个pod-nodeselector.yaml文件，并使用它创建Pod")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeselector\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeenv")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pro "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定调度到具有nodeenv=pro标签的节点上")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-nodeselector.yaml")]),t._v("\npod/pod-nodeselector created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看Pod调度到NODE属性，确实是调度到了node1节点上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-nodeselector -n dev -o wide")]),t._v("\nNAME               READY   STATUS    RESTARTS   AGE     IP          NODE    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\npod-nodeselector   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          47s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.87   node1   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来，删除pod，修改nodeSelector的值为nodeenv: xxxx（不存在打有此标签的节点）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f pod-nodeselector.yaml")]),t._v("\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod-nodeselector"')]),t._v(" deleted\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod-nodeselector.yaml")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-nodeselector.yaml")]),t._v("\npod/pod-nodeselector created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#再次查看，发现pod无法正常运行,Node的值为none")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME               READY   STATUS    RESTARTS   AGE     IP       NODE    \npod-nodeselector   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2m20s   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看详情,发现node selector匹配失败的提示")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pods pod-nodeselector -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nEvents:\n  Type     Reason            Age        From               Message\n  ----     ------            ----       ----               -------\n  Warning  FailedScheduling  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  default-scheduler  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/3 nodes are available: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" didn"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t match node selector.\n  Warning  FailedScheduling  <unknown>  default-scheduler  0/3 nodes are available: 3 node(s) didn'")]),t._v("t match node selector.\n")])])]),n("h4",{attrs:{id:"亲和性调度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#亲和性调度"}},[t._v("#")]),t._v(" 亲和性调度")]),t._v(" "),n("p",[t._v("上一节，介绍了两种定向调度的方式，使用起来非常方便，但是也有一定的问题，那就是如果没有满足条件的Node，那么Pod将不会被运行，即使在集群中还有可用Node列表也不行，这就限制了它的使用场景。")]),t._v(" "),n("p",[t._v("基于上面的问题，kubernetes还提供了一种亲和性调度（Affinity）。它在NodeSelector的基础之上的进行了扩展，可以通过配置的形式，实现优先选择满足条件的Node进行调度，如果没有，也可以调度到不满足条件的节点上，使调度更加灵活。")]),t._v(" "),n("p",[t._v("Affinity主要分为三类：")]),t._v(" "),n("ul",[n("li",[t._v("nodeAffinity(node亲和性）: 以node为目标，解决pod可以调度到哪些node的问题")]),t._v(" "),n("li",[t._v("podAffinity(pod亲和性) :  以pod为目标，解决pod可以和哪些已存在的pod部署在同一个拓扑域中的问题")]),t._v(" "),n("li",[t._v("podAntiAffinity(pod反亲和性) :  以pod为目标，解决pod不能和哪些已存在pod部署在同一个拓扑域中的问题")])]),t._v(" "),n("blockquote",[n("p",[t._v("关于亲和性(反亲和性)使用场景的说明：")]),t._v(" "),n("p",[n("strong",[t._v("亲和性")]),t._v("：如果两个应用频繁交互，那就有必要利用亲和性让两个应用的尽可能的靠近，这样可以减少因网络通信而带来的性能损耗。")]),t._v(" "),n("p",[n("strong",[t._v("反亲和性")]),t._v("：当应用的采用多副本部署时，有必要采用反亲和性让各个应用实例打散分布在各个node上，这样可以提高服务的高可用性。")])]),t._v(" "),n("p",[n("strong",[t._v("NodeAffinity")])]),t._v(" "),n("p",[t._v("首先来看一下"),n("code",[t._v("NodeAffinity")]),t._v("的可配置项：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('pod.spec.affinity.nodeAffinity\n  requiredDuringSchedulingIgnoredDuringExecution  Node节点必须满足指定的所有规则才可以，相当于硬限制\n    nodeSelectorTerms  节点选择列表\n      matchFields   按节点字段列出的节点选择器要求列表\n      matchExpressions   按节点标签列出的节点选择器要求列表(推荐)\n        key    键\n        values 值\n        operator 关系符 支持Exists, DoesNotExist, In, NotIn, Gt, Lt\n  preferredDuringSchedulingIgnoredDuringExecution 优先调度到满足指定的规则的Node，相当于软限制 (倾向)\n    preference   一个节点选择器项，与相应的权重相关联\n      matchFields   按节点字段列出的节点选择器要求列表\n      matchExpressions   按节点标签列出的节点选择器要求列表(推荐)\n        key    键\n        values 值\n        operator 关系符 支持In, NotIn, Exists, DoesNotExist, Gt, Lt\n\tweight 倾向权重，在范围1-100。\n\t\n关系符的使用说明:\n\n- matchExpressions:\n  - key: nodeenv              # 匹配存在标签的key为nodeenv的节点\n    operator: Exists\n  - key: nodeenv              # 匹配标签的key为nodeenv,且value是"xxx"或"yyy"的节点\n    operator: In\n    values: ["xxx","yyy"]\n  - key: nodeenv              # 匹配标签的key为nodeenv,且value大于"xxx"的节点\n    operator: Gt\n    values: "xxx"\n')])])]),n("p",[t._v("接下来首先演示一下"),n("code",[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),t._v(" ,")]),t._v(" "),n("p",[t._v("创建pod-nodeaffinity-required.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeaffinity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("required\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置node亲和性")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬限制")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelectorTerms")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配env的值在["xxx","yyy"]中的标签')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeenv\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-nodeaffinity-required.yaml")]),t._v("\npod/pod-nodeaffinity-required created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod状态 （运行失败）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-nodeaffinity-required -n dev -o wide")]),t._v("\nNAME                        READY   STATUS    RESTARTS   AGE   IP       NODE    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" \npod-nodeaffinity-required   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          16s   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod的详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发现调度失败，提示node选择失败")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pod pod-nodeaffinity-required -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n  Warning  FailedScheduling  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  default-scheduler  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/3 nodes are available: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" didn"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t match node selector.\n  Warning  FailedScheduling  <unknown>  default-scheduler  0/3 nodes are available: 3 node(s) didn'")]),t._v("t match node selector.\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接下来，停止pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f pod-nodeaffinity-required.yaml")]),t._v("\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod-nodeaffinity-required"')]),t._v(" deleted\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 修改文件，将values: ["xxx","yyy"]------\x3e ["pro","yyy"]')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod-nodeaffinity-required.yaml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次启动")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-nodeaffinity-required.yaml")]),t._v("\npod/pod-nodeaffinity-required created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时查看，发现调度成功，已经将pod调度到了node1上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-nodeaffinity-required -n dev -o wide")]),t._v("\nNAME                        READY   STATUS    RESTARTS   AGE   IP            NODE  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" \npod-nodeaffinity-required   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          11s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.89   node1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n")])])]),n("p",[t._v("接下来再演示一下"),n("code",[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),t._v(" ,")]),t._v(" "),n("p",[t._v("创建pod-nodeaffinity-preferred.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeaffinity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("preferred\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置node亲和性")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 软限制")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preference")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配env的值在["xxx","yyy"]中的标签(当前环境没有)')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeenv\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-nodeaffinity-preferred.yaml")]),t._v("\npod/pod-nodeaffinity-preferred created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod状态 （运行成功）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-nodeaffinity-preferred -n dev")]),t._v("\nNAME                         READY   STATUS    RESTARTS   AGE\npod-nodeaffinity-preferred   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          40s\nNodeAffinity规则设置的注意事项：\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 如果同时定义了nodeSelector和nodeAffinity，那么必须两个条件都得到满足，Pod才能运行在指定的Node上\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 如果nodeAffinity指定了多个nodeSelectorTerms，那么只需要其中一个能够匹配成功即可\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" 如果一个nodeSelectorTerms中有多个matchExpressions ，则一个节点必须满足所有的才能匹配成功\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 如果一个pod所在的Node在Pod运行期间其标签发生了改变，不再符合该Pod的节点亲和性需求，则系统将忽略此变化\n")])])]),n("p",[n("strong",[t._v("PodAffinity")])]),t._v(" "),n("p",[t._v("PodAffinity主要实现以运行的Pod为参照，实现让新创建的Pod跟参照pod在一个区域的功能。")]),t._v(" "),n("p",[t._v("首先来看一下"),n("code",[t._v("PodAffinity")]),t._v("的可配置项：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("pod.spec.affinity.podAffinity\n  requiredDuringSchedulingIgnoredDuringExecution  硬限制\n    namespaces       指定参照pod的namespace\n    topologyKey      指定调度作用域\n    labelSelector    标签选择器\n      matchExpressions  按节点标签列出的节点选择器要求列表(推荐)\n        key    键\n        values 值\n        operator 关系符 支持In, NotIn, Exists, DoesNotExist.\n      matchLabels    指多个matchExpressions映射的内容\n  preferredDuringSchedulingIgnoredDuringExecution 软限制\n    podAffinityTerm  选项\n      namespaces      \n      topologyKey\n      labelSelector\n        matchExpressions  \n          key    键\n          values 值\n          operator\n        matchLabels \n    weight 倾向权重，在范围1-100\ntopologyKey用于指定调度时作用域,例如:\n    如果指定为kubernetes.io/hostname，那就是以Node节点为区分范围\n\t如果指定为beta.kubernetes.io/os,则以Node节点的操作系统类型来区分\n")])])]),n("p",[t._v("接下来，演示下"),n("code",[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),t._v(",")]),t._v(" "),n("p",[t._v("1）首先创建一个参照Pod，pod-podaffinity-target.yaml：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podaffinity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("target\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podenv")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pro "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置标签")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标pod名确指定到node1上")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动目标pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-podaffinity-target.yaml")]),t._v("\npod/pod-podaffinity-target created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod状况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods  pod-podaffinity-target -n dev")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE\npod-podaffinity-target   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          4s\n")])])]),n("p",[t._v("2）创建pod-podaffinity-required.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podaffinity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("required\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAffinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置pod亲和性")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬限制")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labelSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配env的值在["xxx","yyy"]中的标签')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podenv\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topologyKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/hostname\n")])])]),n("p",[t._v("上面配置表达的意思是：新Pod必须要与拥有标签nodeenv=xxx或者nodeenv=yyy的pod在同一Node上，显然现在没有这样pod，接下来，运行测试一下。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-podaffinity-required.yaml")]),t._v("\npod/pod-podaffinity-required created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod状态，发现未运行")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-podaffinity-required -n dev")]),t._v("\nNAME                       READY   STATUS    RESTARTS   AGE\npod-podaffinity-required   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          9s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看详细信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe pods pod-podaffinity-required  -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nEvents:\n  Type     Reason            Age        From               Message\n  ----     ------            ----       ----               -------\n  Warning  FailedScheduling  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  default-scheduler  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/3 nodes are available: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" didn"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t match pod affinity rules, 1 node(s) had taints that the pod didn'")]),t._v("t tolerate.\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 接下来修改  values: ["xxx","yyy"]-----\x3evalues:["pro","yyy"]')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 意思是：新Pod必须要与拥有标签nodeenv=xxx或者nodeenv=yyy的pod在同一Node上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod-podaffinity-required.yaml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 然后重新创建pod，查看效果")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f  pod-podaffinity-required.yaml")]),t._v("\npod "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pod-podaffinity-required"')]),t._v(" deleted\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-podaffinity-required.yaml")]),t._v("\npod/pod-podaffinity-required created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发现此时Pod运行正常")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-podaffinity-required -n dev")]),t._v("\nNAME                       READY   STATUS    RESTARTS   AGE   LABELS\npod-podaffinity-required   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          6s    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[t._v("关于"),n("code",[t._v("PodAffinity")]),t._v("的 "),n("code",[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),t._v("，这里不再演示。")]),t._v(" "),n("p",[n("strong",[t._v("PodAntiAffinity")])]),t._v(" "),n("p",[t._v("PodAntiAffinity主要实现以运行的Pod为参照，让新创建的Pod跟参照pod不在一个区域中的功能。")]),t._v(" "),n("p",[t._v("它的配置方式和选项跟PodAffinty是一样的，这里不再做详细解释，直接做一个测试案例。")]),t._v(" "),n("p",[t._v("1）继续使用上个案例中目标pod")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide --show-labels")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE     IP            NODE    LABELS\npod-podaffinity-required "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m29s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.38   node1   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     \npod-podaffinity-target   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          9m25s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.37   node1   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("podenv")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pro\n")])])]),n("p",[t._v("2）创建pod-podantiaffinity-required.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podantiaffinity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("required\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#亲和性设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAntiAffinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置pod亲和性")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬限制")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labelSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配podenv的值在["pro"]中的标签')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podenv\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pro"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topologyKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/hostname\n")])])]),n("p",[t._v("上面配置表达的意思是：新Pod必须要与拥有标签nodeenv=pro的pod不在同一Node上，运行测试一下。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-podantiaffinity-required.yaml")]),t._v("\npod/pod-podantiaffinity-required created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发现调度到了node2上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods pod-podantiaffinity-required -n dev -o wide")]),t._v("\nNAME                           READY   STATUS    RESTARTS   AGE   IP            NODE   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" \npod-podantiaffinity-required   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          30s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.96   node2  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n")])])]),n("h4",{attrs:{id:"污点和容忍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#污点和容忍"}},[t._v("#")]),t._v(" 污点和容忍")]),t._v(" "),n("p",[n("strong",[t._v("污点（Taints）")])]),t._v(" "),n("p",[t._v("前面的调度方式都是站在Pod的角度上，通过在Pod上添加属性，来确定Pod是否要调度到指定的Node上，其实我们也可以站在Node的角度上，通过在Node上添加"),n("strong",[t._v("污点")]),t._v("属性，来决定是否允许Pod调度过来。")]),t._v(" "),n("p",[t._v("Node被设置上污点之后就和Pod之间存在了一种相斥的关系，进而拒绝Pod调度进来，甚至可以将已经存在的Pod驱逐出去。")]),t._v(" "),n("p",[t._v("污点的格式为："),n("code",[t._v("key=value:effect")]),t._v(", key和value是污点的标签，effect描述污点的作用，支持如下三个选项：")]),t._v(" "),n("ul",[n("li",[t._v("PreferNoSchedule：kubernetes将尽量避免把Pod调度到具有该污点的Node上，除非没有其他节点可调度")]),t._v(" "),n("li",[t._v("NoSchedule：kubernetes将不会把Pod调度到具有该污点的Node上，但不会影响当前Node上已存在的Pod")]),t._v(" "),n("li",[t._v("NoExecute：kubernetes将不会把Pod调度到具有该污点的Node上，同时也会将Node上已存在的Pod驱离")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(515),alt:"image-20200605021606508"}})]),t._v(" "),n("p",[t._v("使用kubectl设置和去除污点的命令示例如下：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置污点")]),t._v("\nkubectl taint nodes node1 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value:effect\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 去除污点")]),t._v("\nkubectl taint nodes node1 key:effect-\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 去除所有污点")]),t._v("\nkubectl taint nodes node1 key-\n")])])]),n("p",[t._v("接下来，演示下污点的效果：")]),t._v(" "),n("ol",[n("li",[t._v("准备节点node1（为了演示效果更加明显，暂时停止node2节点）")]),t._v(" "),n("li",[t._v("为node1节点设置一个污点: "),n("code",[t._v("tag=pyy:PreferNoSchedule")]),t._v("；然后创建pod1( pod1 可以 )")]),t._v(" "),n("li",[t._v("修改为node1节点设置一个污点: "),n("code",[t._v("tag=pyy:NoSchedule")]),t._v("；然后创建pod2( pod1 正常  pod2 失败 )")]),t._v(" "),n("li",[t._v("修改为node1节点设置一个污点: "),n("code",[t._v("tag=pyy:NoExecute")]),t._v("；然后创建pod3 ( 3个pod都失败 )")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为node1设置污点(PreferNoSchedule)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint nodes node1 tag=pyy:PreferNoSchedule")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run taint1 --image=nginx:1.17.1 -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME                      READY   STATUS    RESTARTS   AGE     IP           NODE   \ntaint1-7665f7fd85-574h4   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2m24s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.59   node1    \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为node1设置污点(取消PreferNoSchedule，设置NoSchedule)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint nodes node1 tag:PreferNoSchedule-")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint nodes node1 tag=pyy:NoSchedule")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run taint2 --image=nginx:1.17.1 -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods taint2 -n dev -o wide")]),t._v("\nNAME                      READY   STATUS    RESTARTS   AGE     IP            NODE\ntaint1-7665f7fd85-574h4   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2m24s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.59   node1 \ntaint2-544694789-6zmlf    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          21s     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为node1设置污点(取消NoSchedule，设置NoExecute)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint nodes node1 tag:NoSchedule-")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl taint nodes node1 tag=pyy:NoExecute")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run taint3 --image=nginx:1.17.1 -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME                      READY   STATUS    RESTARTS   AGE   IP       NODE     NOMINATED \ntaint1-7665f7fd85-htkmp   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          35s   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    \ntaint2-544694789-bn7wb    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          35s   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     \ntaint3-6d78dbd749-tktkq   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          6s    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     \n小提示：\n    使用kubeadm搭建的集群，默认就会给master节点添加一个污点标记,所以pod就不会调度到master节点上.\n")])])]),n("p",[n("strong",[t._v("容忍（Toleration）")])]),t._v(" "),n("p",[t._v("上面介绍了污点的作用，我们可以在node上添加污点用于拒绝pod调度上来，但是如果就是想将一个pod调度到一个有污点的node上去，这时候应该怎么做呢？这就要使用到"),n("strong",[t._v("容忍")]),t._v("。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(516),alt:"image-20200514095913741"}})]),t._v(" "),n("blockquote",[n("p",[t._v("污点就是拒绝，容忍就是忽略，Node通过污点拒绝pod调度上去，Pod通过容忍忽略拒绝")])]),t._v(" "),n("p",[t._v("下面先通过一个案例看下效果：")]),t._v(" "),n("ol",[n("li",[t._v("上一小节，已经在node1节点上打上了"),n("code",[t._v("NoExecute")]),t._v("的污点，此时pod是调度不上去的")]),t._v(" "),n("li",[t._v("本小节，可以通过给pod添加容忍，然后将其调度上去")])]),t._v(" "),n("p",[t._v("创建pod-toleration.yaml,内容如下")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("toleration\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加容忍")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag"')]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要容忍的污点的key")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Equal"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作符")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pyy"')]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容忍的污点的value")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NoExecute"')]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加容忍的规则，这里必须和标记的污点规则相同")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加容忍之前的pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME             READY   STATUS    RESTARTS   AGE   IP       NODE     NOMINATED \npod-toleration   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3s    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加容忍之后的pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME             READY   STATUS    RESTARTS   AGE   IP            NODE    NOMINATED\npod-toleration   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3s    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.62   node1   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        \n")])])]),n("p",[t._v("下面看一下容忍的详细配置:")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain pod.spec.tolerations")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nFIELDS:\n   key       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对应着要容忍的污点的键，空意味着匹配所有的键")]),t._v("\n   value     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对应着要容忍的污点的值")]),t._v("\n   operator  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# key-value的运算符，支持Equal和Exists（默认）")]),t._v("\n   effect    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对应污点的effect，空意味着匹配所有影响")]),t._v("\n   tolerationSeconds   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容忍时间, 当effect为NoExecute时生效，表示pod在Node上的停留时间")]),t._v("\n")])])]),n("h2",{attrs:{id:"第六章-pod控制器详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第六章-pod控制器详解"}},[t._v("#")]),t._v(" 第六章 Pod控制器详解")]),t._v(" "),n("p",[t._v("本章节主要介绍各种Pod控制器的详细使用。")]),t._v(" "),n("h3",{attrs:{id:"_6-1-pod控制器介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-pod控制器介绍"}},[t._v("#")]),t._v(" 6.1 Pod控制器介绍")]),t._v(" "),n("p",[t._v("Pod是kubernetes的最小管理单元，在kubernetes中，按照pod的创建方式可以将其分为两类：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("自主式pod：kubernetes直接创建出来的Pod，这种pod删除后就没有了，也不会重建")])]),t._v(" "),n("li",[n("p",[t._v("控制器创建的pod：kubernetes通过控制器创建的pod，这种pod删除了之后还会自动重建")])])]),t._v(" "),n("blockquote",[n("p",[n("strong",[n("code",[t._v("什么是Pod控制器")])])]),t._v(" "),n("p",[t._v("Pod控制器是管理pod的中间层，使用Pod控制器之后，只需要告诉Pod控制器，想要多少个什么样的Pod就可以了，它会创建出满足条件的Pod并确保每一个Pod资源处于用户期望的目标状态。如果Pod资源在运行中出现故障，它会基于指定策略重新编排Pod。")])]),t._v(" "),n("p",[t._v("在kubernetes中，有很多类型的pod控制器，每种都有自己的适合的场景，常见的有下面这些：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("ReplicationController：比较原始的pod控制器，已经被废弃，由ReplicaSet替代")])]),t._v(" "),n("li",[n("p",[t._v("ReplicaSet：保证副本数量一直维持在期望值，并支持pod数量扩缩容，镜像版本升级")])]),t._v(" "),n("li",[n("p",[t._v("Deployment：通过控制ReplicaSet来控制Pod，并支持滚动升级、回退版本")])]),t._v(" "),n("li",[n("p",[t._v("Horizontal Pod Autoscaler：可以根据集群负载自动水平调整Pod的数量，实现削峰填谷")])]),t._v(" "),n("li",[n("p",[t._v("DaemonSet：在集群中的指定Node上运行且仅运行一个副本，一般用于守护进程类的任务")])]),t._v(" "),n("li",[n("p",[t._v("Job：它创建出来的pod只要完成任务就立即退出，不需要重启或重建，用于执行一次性任务")])]),t._v(" "),n("li",[n("p",[t._v("Cronjob：它创建的Pod负责周期性任务控制，不需要持续后台运行")])]),t._v(" "),n("li",[n("p",[t._v("StatefulSet：管理有状态应用")])])]),t._v(" "),n("h3",{attrs:{id:"_6-2-replicaset-rs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-replicaset-rs"}},[t._v("#")]),t._v(" 6.2 ReplicaSet(RS)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("ReplicaSet的主要作用是**保证一定数量的pod正常运行**，它会持续监听这些Pod的运行状态，一旦Pod发生故障，就会重启或重建。同时它还支持对pod数量的扩缩容和镜像版本的升降级。\n")])])]),n("p",[n("img",{attrs:{src:a(517),alt:""}})]),t._v(" "),n("p",[t._v("ReplicaSet的资源清单文件：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicaSet "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类型       ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rs名称 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属命名空间 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rs\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详情描述")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 副本数量")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择器，通过它指定该控制器管理哪些pod")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Labels匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Expressions匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模板，当副本数量不足时，会根据下面的模板创建pod副本")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),n("p",[t._v("在这里面，需要新了解的配置项就是"),n("code",[t._v("spec")]),t._v("下面几个选项：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("replicas：指定副本数量，其实就是当前rs创建出来的pod的数量，默认为1")])]),t._v(" "),n("li",[n("p",[t._v("selector：选择器，它的作用是建立pod控制器和pod之间的关联关系，采用的Label Selector机制")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("           在pod模板上定义label，在控制器上定义选择器，就可以表明当前控制器能管理哪些pod了\n")])])])]),t._v(" "),n("li",[n("p",[t._v("template：模板，就是当前控制器创建pod所使用的模板板，里面其实就是前一章学过的pod的定义")])])]),t._v(" "),n("p",[n("strong",[t._v("创建ReplicaSet")])]),t._v(" "),n("p",[t._v("创建pc-replicaset.yaml文件，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicaSet   \n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("replicaset\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建rs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pc-replicaset.yaml")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看rs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DESIRED:期望副本数量  ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CURRENT:当前副本数量  ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# READY:已经准备好提供服务的副本数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs pc-replicaset -n dev -o wide")]),t._v("\nNAME          DESIRED   CURRENT READY AGE   CONTAINERS   IMAGES             SELECTOR\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset 3         3       3     22s   nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1       app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前控制器创建出来的pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里发现控制器创建出来的pod的名称是在控制器名称后面拼接了-xxxxx随机码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n dev")]),t._v("\nNAME                          READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6vmvt   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          54s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fmb8f   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          54s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("snrk2   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          54s\n")])])]),n("p",[n("strong",[t._v("扩缩容")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑rs的副本数量，修改spec:replicas: 6即可")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl edit rs pc-replicaset -n dev")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset edited\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                          READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6vmvt   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          114m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cftnp   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          10s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fjlm6   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          10s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fmb8f   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          114m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s2whj   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          10s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("snrk2   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          114m\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然也可以直接使用命令实现")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用scale命令实现扩缩容， 后面--replicas=n直接指定目标数量即可")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl scale rs pc-replicaset --replicas=2 -n dev")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset scaled\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令运行完毕，立即查看，发现已经有4个开始准备退出了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                       READY   STATUS        RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6vmvt   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating   0          118m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cftnp   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating   0          4m17s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fjlm6   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating   0          4m17s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fmb8f   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running       0          118m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s2whj   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating   0          4m17s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("snrk2   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running       0          118m\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#稍等片刻，就只剩下2个了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                       READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fmb8f   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          119m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("snrk2   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          119m\n")])])]),n("p",[n("strong",[t._v("镜像升级")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑rs的容器镜像 - image: nginx:1.17.2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl edit rs pc-replicaset -n dev")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset edited\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次查看，发现镜像版本已经变更了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs -n dev -o wide")]),t._v("\nNAME                DESIRED  CURRENT   READY   AGE    CONTAINERS   IMAGES        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset       2        2         2       140m   nginx         nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同样的道理，也可以使用命令完成这个工作")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl set image rs rs名称 容器=镜像版本 -n namespace")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl set image rs pc-replicaset nginx=nginx:1.17.1  -n dev")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset image updated\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次查看，发现镜像版本已经变更了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs -n dev -o wide")]),t._v("\nNAME                 DESIRED  CURRENT   READY   AGE    CONTAINERS   IMAGES            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset        2        2         2       145m   nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n")])])]),n("p",[n("strong",[t._v("删除ReplicaSet")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用kubectl delete命令会删除此RS以及它管理的Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在kubernetes删除RS前，会将RS的replicasclear调整为0，等待所有的Pod被删除后，在执行RS对象的删除")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete rs pc-replicaset -n dev")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-replicaset"')]),t._v(" deleted\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n dev -o wide")]),t._v("\nNo resources found in dev namespace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果希望仅仅删除RS对象（保留Pod），可以使用kubectl delete命令时添加--cascade=false选项（不推荐）。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete rs pc-replicaset -n dev --cascade=false")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-replicaset"')]),t._v(" deleted\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                  READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cl82j   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          75s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicaset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dslhb   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          75s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以使用yaml直接删除(推荐)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f pc-replicaset.yaml")]),t._v("\nreplicaset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-replicaset"')]),t._v(" deleted\n")])])]),n("h3",{attrs:{id:"_6-3-deployment-deploy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-deployment-deploy"}},[t._v("#")]),t._v(" 6.3 Deployment(Deploy)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("为了更好的解决服务编排的问题，kubernetes在V1.2版本开始，引入了Deployment控制器。值得一提的是，这种控制器并不直接管理pod，而是通过管理ReplicaSet来简介管理Pod，即：Deployment管理ReplicaSet，ReplicaSet管理Pod。所以Deployment比ReplicaSet功能更加强大。\n")])])]),n("p",[n("img",{attrs:{src:a(518),alt:""}})]),t._v(" "),n("p",[t._v("Deployment主要功能有下面几个：")]),t._v(" "),n("ul",[n("li",[t._v("支持ReplicaSet的所有功能")]),t._v(" "),n("li",[t._v("支持发布的停止、继续")]),t._v(" "),n("li",[t._v("支持滚动升级和回滚版本")])]),t._v(" "),n("p",[t._v("Deployment的资源清单文件：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类型       ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rs名称 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属命名空间 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详情描述")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 副本数量")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("revisionHistoryLimit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保留历史版本")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paused")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂停部署，默认是false")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("progressDeadlineSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署超时时间（s），默认是600")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 策略")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RollingUpdate "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新策略")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rollingUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxSurge")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30% "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最大额外可以存在的副本数，可以为百分比，也可以为整数")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxUnavailable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30% "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最大不可用状态的 Pod 的最大值，可以为百分比，也可以为整数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择器，通过它指定该控制器管理哪些pod")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Labels匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Expressions匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模板，当副本数量不足时，会根据下面的模板创建pod副本")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),n("p",[n("strong",[t._v("创建deployment")])]),t._v(" "),n("p",[t._v("创建pc-deployment.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment      \n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建deployment")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pc-deployment.yaml --record=true")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看deployment")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# UP-TO-DATE 最新版本的pod的数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AVAILABLE  当前可用的pod的数量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deploy pc-deployment -n dev")]),t._v("\nNAME            READY   UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TO"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("DATE   AVAILABLE   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment   3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3     3            3           15s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看rs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发现rs的名称是在原来deployment的名字后面添加了一个10位数的随机串")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs -n dev")]),t._v("\nNAME                       DESIRED   CURRENT   READY   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78   3         3         3       23s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                             READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d2c8n   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          107s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("smpvp   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          107s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wvjd8   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          107s\n")])])]),n("p",[n("strong",[t._v("扩缩容")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 变更副本数量为5个")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl scale deploy pc-deployment --replicas=5  -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment scaled\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看deployment")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deploy pc-deployment -n dev")]),t._v("\nNAME            READY   UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TO"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("DATE   AVAILABLE   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment   5"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("5     5            5           2m\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl get pods -n dev")]),t._v("\nNAME                             READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d2c8n   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          4m19s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jxmdq   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          94s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mktqv   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          93s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("smpvp   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          4m19s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wvjd8   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          4m19s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑deployment的副本数量，修改spec:replicas: 4即可")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl edit deploy pc-deployment -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment edited\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                             READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d2c8n   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5m23s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jxmdq   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          2m38s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("smpvp   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5m23s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wvjd8   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5m23s\n")])])]),n("p",[n("strong",[t._v("镜像更新")])]),t._v(" "),n("p",[t._v("deployment支持两种更新策略:"),n("code",[t._v("重建更新")]),t._v("和"),n("code",[t._v("滚动更新")]),t._v(",可以通过"),n("code",[t._v("strategy")]),t._v("指定策略类型,支持两个属性:")]),t._v(" "),n("div",{staticClass:"language-markdown extra-class"},[n("pre",{pre:!0,attrs:{class:"language-markdown"}},[n("code",[t._v("strategy：指定新的Pod替换旧的Pod的策略， 支持两个属性：\n  type：指定策略类型，支持两种策略\n    Recreate：在创建出新的Pod之前会先杀掉所有已存在的Pod\n    RollingUpdate：滚动更新，就是杀死一部分，就启动一部分，在更新过程中，存在两个版本Pod\n  rollingUpdate：当type为RollingUpdate时生效，用于为RollingUpdate设置参数，支持两个属性：\n    maxUnavailable：用来指定在升级过程中不可用Pod的最大数量，默认为25%。\n    maxSurge： 用来指定在升级过程中可以超过期望的Pod的最大数量，默认为25%。\n")])])]),n("p",[t._v("重建更新")]),t._v(" "),n("ol",[n("li",[t._v("编辑pc-deployment.yaml,在spec节点下添加更新策略")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 策略")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Recreate "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重建更新")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("创建deploy进行验证")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 变更镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl set image deployment pc-deployment nginx=nginx:1.17.2 -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment image updated\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 观察升级过程")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl get pods -n dev -w")]),t._v("\nNAME                             READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("65qcw   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          31s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("w5nzv   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          31s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xpt7w   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          31s\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xpt7w   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating   0          41s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("65qcw   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating   0          41s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("w5nzv   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating   0          41s\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("grn8z   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending       0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hbl4v   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending       0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("67nz2   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending       0          0s\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("grn8z   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hbl4v   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("67nz2   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("grn8z   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          1s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("67nz2   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          1s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hbl4v   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          2s\n")])])]),n("p",[t._v("滚动更新")]),t._v(" "),n("ol",[n("li",[t._v("编辑pc-deployment.yaml,在spec节点下添加更新策略")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 策略")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RollingUpdate "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新策略")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rollingUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxSurge")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25% \n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxUnavailable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25%\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("创建deploy进行验证")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 变更镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl set image deployment pc-deployment nginx=nginx:1.17.3 -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment image updated\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 观察升级过程")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -w")]),t._v("\nNAME                           READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8rbzt   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          31m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("h4p68   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          31m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hlmz4   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          31m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rrqcn   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          31m\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("226rx   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("226rx   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("226rx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          1s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("h4p68    0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          34m\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cnd44   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cnd44   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cnd44   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          2s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hlmz4    0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          34m\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("px48p   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("px48p   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("px48p   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8rbzt    0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          34m\n\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dkmqp   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dkmqp   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dkmqp   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          2s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rrqcn    0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          34m\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 至此，新版本的pod创建完毕，就版本的pod销毁完毕")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 中间过程是滚动进行的，也就是边销毁边创建")]),t._v("\n")])])]),n("p",[t._v("滚动更新的过程：")]),t._v(" "),n("img",{staticStyle:{zoom:"150%"},attrs:{src:a(519)}}),t._v(" "),n("p",[t._v("镜像更新中rs的变化:")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看rs,发现原来的rs的依旧存在，只是pod数量变为了0，而后又新产生了一个rs，pod数量为4")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其实这就是deployment能够进行版本回退的奥妙所在，后面会详细解释")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs -n dev")]),t._v("\nNAME                       DESIRED   CURRENT   READY   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78   0         0         0       7m37s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b11   0         0         0       5m37s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d76789   4         4         4       72s\n")])])]),n("p",[n("strong",[t._v("版本回退")])]),t._v(" "),n("p",[t._v("deployment支持版本升级过程中的暂停、继续功能以及版本回退等诸多功能，下面具体来看.")]),t._v(" "),n("p",[t._v("kubectl rollout： 版本升级相关功能，支持下面的选项：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("status       显示当前升级状态")])]),t._v(" "),n("li",[n("p",[t._v("history     显示 升级历史记录")])]),t._v(" "),n("li",[n("p",[t._v("pause       暂停版本升级过程")])]),t._v(" "),n("li",[n("p",[t._v("resume    继续已经暂停的版本升级过程")])]),t._v(" "),n("li",[n("p",[t._v("restart      重启版本升级过程")])]),t._v(" "),n("li",[n("p",[t._v("undo        回滚到上一级版本（可以使用--to-revision回滚到指定版本）")])])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前升级版本的状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout status deploy pc-deployment -n dev")]),t._v("\ndeployment "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-deployment"')]),t._v(" successfully rolled out\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看升级历史记录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout history deploy pc-deployment -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment\nREVISION  CHANGE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("CAUSE\n1         kubectl create "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("filename=pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yaml "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("record=true\n2         kubectl create "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("filename=pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yaml "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("record=true\n3         kubectl create "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("filename=pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yaml "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("record=true\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以发现有三次版本记录，说明完成过两次升级")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本回滚")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里直接使用--to-revision=1回滚到了1版本， 如果省略这个选项，就是回退到上个版本，就是2版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout undo deployment pc-deployment --to-revision=1 -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment rolled back\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看发现，通过nginx镜像版本可以发现到了第一版")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deploy -n dev -o wide")]),t._v("\nNAME            READY   UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TO"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("DATE   AVAILABLE   AGE   CONTAINERS   IMAGES         \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment   4"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("4     4            4           74m   nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1   \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看rs，发现第一个rs中有4个pod运行，后面两个版本的rs中pod为运行")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其实deployment之所以可是实现版本的回滚，就是通过记录下历史rs来实现的，")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一旦想回滚到哪个版本，只需要将当前版本pod数量降为0，然后将回滚版本的pod提升为目标数量就可以了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs -n dev")]),t._v("\nNAME                       DESIRED   CURRENT   READY   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6696798b78   4         4         4       78m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("966bf7f44    0         0         0       37m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c848d767     0         0         0       71m\n")])])]),n("p",[n("strong",[t._v("金丝雀发布")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("Deployment控制器支持控制更新过程中的控制，如“暂停(pause)”或“继续(resume)”更新操作。\n\n比如有一批新的Pod资源创建完成后立即暂停更新过程，此时，仅存在一部分新版本的应用，主体部分还是旧的版本。然后，再筛选一小部分的用户请求路由到新版本的Pod应用，继续观察能否稳定地按期望的方式运行。确定没问题之后再继续完成余下的Pod资源滚动更新，否则立即回滚更新操作。这就是所谓的金丝雀发布。\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新deployment的版本，并配置暂停deployment")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl set image deploy pc-deployment nginx=nginx:1.17.4 -n dev && kubectl rollout pause deployment pc-deployment  -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment image updated\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment paused\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#观察更新状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout status deploy pc-deployment -n dev　")]),t._v("\nWaiting "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" deployment "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-deployment"')]),t._v(" rollout to finish: 2 out of 4 new replicas have been updated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 监控更新的过程，可以看到已经新增了一个资源，但是并未按照预期的状态去删除一个旧的资源，就是因为使用了pause暂停命令")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs -n dev -o wide")]),t._v("\nNAME                       DESIRED   CURRENT   READY   AGE     CONTAINERS   IMAGES         \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9   3         3         3       19m     nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1   \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b   0         0         0       14m     nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2   \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb   2         2         2       3m16s   nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4   \n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                             READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rj8sq   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          7m33s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ttwgg   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          7m35s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v4wvc   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          7m34s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("996rt   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          3m31s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("j2gtj   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          3m31s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确保更新的pod没问题了，继续更新")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout resume deploy pc-deployment -n dev")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment resumed\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看最后的更新情况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rs -n dev -o wide")]),t._v("\nNAME                       DESIRED   CURRENT   READY   AGE     CONTAINERS   IMAGES         \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5d89bdfbf9   0         0         0       21m     nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1   \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("675d469f8b   0         0         0       16m     nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2   \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb   4         4         4       5m11s   nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4   \n\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                             READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7bfwh   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          37s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("996rt   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5m27s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("j2gtj   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5m27s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6c9f56fcfb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rf84v   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          37s\n")])])]),n("p",[n("strong",[t._v("删除Deployment")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除deployment，其下的rs和pod也将被删除")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f pc-deployment.yaml")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-deployment"')]),t._v(" deleted\n")])])]),n("h3",{attrs:{id:"_6-4-horizontal-pod-autoscaler-hpa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-horizontal-pod-autoscaler-hpa"}},[t._v("#")]),t._v(" 6.4 Horizontal Pod Autoscaler(HPA)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("在前面的课程中，我们已经可以实现通过手工执行`kubectl scale`命令实现Pod扩容或缩容，但是这显然不符合Kubernetes的定位目标--自动化、智能化。 Kubernetes期望可以实现通过监测Pod的使用情况，实现pod数量的自动调整，于是就产生了Horizontal Pod Autoscaler（HPA）这种控制器。\n\nHPA可以获取每个Pod利用率，然后和HPA中定义的指标进行对比，同时计算出需要伸缩的具体值，最后实现Pod的数量的调整。其实HPA与之前的Deployment一样，也属于一种Kubernetes资源对象，它通过追踪分析RC控制的所有目标Pod的负载变化情况，来确定是否需要针对性地调整目标Pod的副本数，这是HPA的实现原理。\n")])])]),n("img",{attrs:{src:a(520)}}),t._v(" "),n("p",[t._v("接下来，我们来做一个实验")]),t._v(" "),n("p",[n("strong",[t._v("1 安装metrics-server")])]),t._v(" "),n("p",[t._v("metrics-server可以用来收集集群中的资源使用情况")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装git")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install git -y")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取metrics-server, 注意使用的版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git clone -b v0.3.6 https://github.com/kubernetes-incubator/metrics-server")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改deployment, 注意修改的是镜像和初始化参数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /root/metrics-server/deploy/1.8+/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim metrics-server-deployment.yaml")]),t._v("\n按图中添加下面选项\nhostNetwork: true\nimage: registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hangzhou"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliyuncs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("google_containers"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("metrics"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("amd64:v0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("6\nargs:\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("kubelet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("insecure"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tls\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("kubelet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("preferred"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("address"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("types=InternalIP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Hostname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("InternalDNS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ExternalDNS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ExternalIP\n")])])]),n("p",[n("img",{attrs:{src:a(521),alt:"image-20200608163326496"}})]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装metrics-server")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f ./")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod运行情况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n kube-system")]),t._v("\nmetrics"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6b976979db"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("2xwbj   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          90s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用kubectl top node 查看资源使用情况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl top node")]),t._v("\nNAME     CPU"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cores"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   CPU"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("   MEMORY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   MEMORY"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("\nmaster   98m          4"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1067Mi          62"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("\nnode1    27m          1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     727Mi           42"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("\nnode2    34m          1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     800Mi           46"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl top pod -n kube-system")]),t._v("\nNAME                              CPU"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cores"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   MEMORY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncoredns"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6955765f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7ptsb          3m           9Mi\ncoredns"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("6955765f44"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("vcwr5          3m           8Mi\netcd"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("master                       14m          145Mi\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 至此,metrics-server安装完成")]),t._v("\n")])])]),n("p",[n("strong",[t._v("2 准备deployment和servie")])]),t._v(" "),n("p",[t._v("为了操作简单,直接使用命令")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建deployment ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run nginx --image=nginx:latest --requests=cpu=100m -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl expose deployment nginx --type=NodePort --port=80 -n dev")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deployment,pod,svc -n dev")]),t._v("\nNAME                    READY   UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TO"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("DATE   AVAILABLE   AGE\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     1            1           47s\n\nNAME                         READY   STATUS    RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bh8dr   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          47s\n\nNAME            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TYPE")]),t._v("       CLUSTER"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP      EXTERNAL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        AGE\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   NodePort   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("57"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("248   <none>        80:31136"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP   35s\n")])])]),n("p",[n("strong",[t._v("3 部署HPA")])]),t._v(" "),n("p",[t._v("创建pc-hpa.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" autoscaling/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HorizontalPodAutoscaler\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hpa\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minReplicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最小pod数量")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxReplicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最大pod数量")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetCPUUtilizationPercentage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU使用率指标")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scaleTargetRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定要控制的nginx信息")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment  \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx  \n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建hpa")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pc-hpa.yaml")]),t._v("\nhorizontalpodautoscaler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoscaling"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看hpa")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master 1.8+]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get hpa -n dev")]),t._v("\nNAME     REFERENCE          TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   0%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1         10        1          62s\n")])])]),n("p",[n("strong",[t._v("4 测试")])]),t._v(" "),n("p",[t._v("使用压测工具对service地址"),n("code",[t._v("192.168.109.100:31136")]),t._v("进行压测，然后通过控制台查看hpa和pod的变化")]),t._v(" "),n("p",[n("code",[t._v("hpa变化")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get hpa -n dev -w")]),t._v("\nNAME     REFERENCE          TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   0%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1         10        1          4m11s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   0%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1         10        1          5m19s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   22%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("    1         10        1          6m50s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   22%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("    1         10        4          7m5s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   22%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("    1         10        8          7m21s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   6%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1         10        8          7m51s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   0%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1         10        8          9m6s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   0%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1         10        8          13m\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hpa   Deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   0%"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("     1         10        1          14m\n")])])]),n("p",[n("code",[t._v("deployment变化")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deployment -n dev -w")]),t._v("\nNAME    READY   UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TO"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("DATE   AVAILABLE   AGE\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     1            1           11m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("4     1            1           13m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("4     1            1           13m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("4     1            1           13m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("4     4            1           13m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     4            1           14m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     4            1           14m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     4            1           14m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            1           14m\nnginx   2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            2           14m\nnginx   3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            3           14m\nnginx   4"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            4           14m\nnginx   5"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            5           14m\nnginx   6"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            6           14m\nnginx   7"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            7           14m\nnginx   8"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("8     8            8           15m\nnginx   8"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     8            8           20m\nnginx   8"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     8            8           20m\nnginx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     1            1           20m\n")])])]),n("p",[n("code",[t._v("pod变化")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -w")]),t._v("\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bh8dr   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          11m\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cpgrv   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8zhwk   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rr9bn   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cpgrv   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8zhwk   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rr9bn   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m9gsj   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g56qb   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sl9c6   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fgst7   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g56qb   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m9gsj   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sl9c6   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fgst7   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8zhwk   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          19s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rr9bn   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          30s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m9gsj   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          21s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cpgrv   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          47s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sl9c6   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          33s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g56qb   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          48s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fgst7   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          66s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fgst7   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          6m50s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8zhwk   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          7m5s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cpgrv   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          7m5s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g56qb   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          6m50s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rr9bn   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          7m5s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m9gsj   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          6m50s\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("7df9756ccc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sl9c6   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Terminating         0          6m50s\n")])])]),n("h3",{attrs:{id:"_6-5-daemonset-ds"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-daemonset-ds"}},[t._v("#")]),t._v(" 6.5 DaemonSet(DS)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("DaemonSet类型的控制器可以保证在集群中的每一台（或指定）节点上都运行一个副本。一般适用于日志收集、节点监控等场景。也就是说，如果一个Pod提供的功能是节点级别的（每个节点都需要且只需要一个），那么这类Pod就适合使用DaemonSet类型的控制器创建。\n")])])]),n("p",[n("img",{attrs:{src:a(522),alt:""}})]),t._v(" "),n("p",[t._v("DaemonSet控制器的特点：")]),t._v(" "),n("ul",[n("li",[t._v("每当向集群中添加一个节点时，指定的 Pod 副本也将添加到该节点上")]),t._v(" "),n("li",[t._v("当节点从集群中移除时，Pod 也就被垃圾回收了")])]),t._v(" "),n("p",[t._v("下面先来看下DaemonSet的资源清单文件")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DaemonSet "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类型       ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rs名称 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属命名空间 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" daemonset\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详情描述")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("revisionHistoryLimit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保留历史版本")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("updateStrategy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新策略")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RollingUpdate "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新策略")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rollingUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxUnavailable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最大不可用状态的 Pod 的最大值，可以为百分比，也可以为整数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择器，通过它指定该控制器管理哪些pod")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Labels匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Expressions匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模板，当副本数量不足时，会根据下面的模板创建pod副本")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),n("p",[t._v("创建pc-daemonset.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DaemonSet      \n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("daemonset\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建daemonset")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f  pc-daemonset.yaml")]),t._v("\ndaemonset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("daemonset created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看daemonset")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl get ds -n dev -o wide")]),t._v("\nNAME        DESIRED  CURRENT  READY  UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TO"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("DATE  AVAILABLE   AGE   CONTAINERS   IMAGES         \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("daemonset   2        2        2      2           2        24s   nginx        nginx:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1   \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod,发现在每个Node上都运行一个pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl get pods -n dev -o wide")]),t._v("\nNAME                 READY   STATUS    RESTARTS   AGE   IP            NODE    \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("daemonset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("9bck8   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          37s   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("43   node1     \npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("daemonset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("k224w   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          37s   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("74   node2      \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除daemonset")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f pc-daemonset.yaml")]),t._v("\ndaemonset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-daemonset"')]),t._v(" deleted\n")])])]),n("h3",{attrs:{id:"_6-6-job"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-job"}},[t._v("#")]),t._v(" 6.6 Job")]),t._v(" "),n("p",[t._v("Job，主要用于负责**批量处理(一次要处理指定数量任务)"),n("strong",[t._v("短暂的")]),t._v("一次性(每个任务仅运行一次就结束)**任务。Job特点如下：")]),t._v(" "),n("ul",[n("li",[t._v("当Job创建的pod执行成功结束时，Job将记录成功结束的pod数量")]),t._v(" "),n("li",[t._v("当成功结束的pod达到指定的数量时，Job将完成执行")])]),t._v(" "),n("img",{staticStyle:{zoom:"80%"},attrs:{src:a(523)}}),t._v(" "),n("p",[t._v("Job的资源清单文件：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Job "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类型       ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rs名称 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属命名空间 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详情描述")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("completions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定job需要成功运行Pods的次数。默认值: 1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("parallelism")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定job在任一时刻应该并发运行Pods的数量。默认值: 1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("activeDeadlineSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定job可运行的时间期限，超过时间还未结束，系统将会尝试进行终止。")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backoffLimit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定job失败后进行重试的次数。默认是6")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("manualSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否可以使用selector选择器选择pod，默认是false")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择器，通过它指定该控制器管理哪些pod")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Labels匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Expressions匹配规则")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模板，当副本数量不足时，会根据下面的模板创建pod副本")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启策略只能设置为Never或者OnFailure")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 2;done"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-markdown extra-class"},[n("pre",{pre:!0,attrs:{class:"language-markdown"}},[n("code",[t._v("关于重启策略设置的说明：\n    如果指定为OnFailure，则job会在pod出现故障时重启容器，而不是创建pod，failed次数不变\n    如果指定为Never，则job会在pod出现故障时创建新的pod，并且故障pod不会消失，也不会重启，failed次数加1\n    如果指定为Always的话，就意味着一直重启，意味着job任务会重复去执行了，当然不对，所以不能设置为Always\n")])])]),n("p",[t._v("创建pc-job.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Job      \n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("job\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("manualSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 3;done"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建job")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pc-job.yaml")]),t._v("\njob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看job")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get job -n dev -o wide  -w")]),t._v("\nNAME     COMPLETIONS   DURATION   AGE   CONTAINERS   IMAGES         SELECTOR\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1           21s        21s   counter      busybox:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("30   app=counter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1           31s        79s   counter      busybox:1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("30   app=counter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过观察pod状态可以看到，pod在运行完毕任务后，就会变成Completed状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -w")]),t._v("\nNAME           READY   STATUS     RESTARTS      AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rxg96   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running     0            29s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rxg96   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed   0            33s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来，调整下pod运行的总数量和并行数量 即：在spec下设置下面两个选项")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  completions: 6 # 指定job需要成功运行Pods的次数为6")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  parallelism: 3 # 指定job并发运行Pods的数量为3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  然后重新运行job，观察效果，此时会发现，job会每次运行3个pod，总共执行了6个pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -w")]),t._v("\nNAME           READY   STATUS    RESTARTS   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("684ft   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jhj49   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pfcvh   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          5s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("684ft   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed   0          11s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v7rhr   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending     0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v7rhr   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending     0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v7rhr   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jhj49   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed           0          11s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fhwf7   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fhwf7   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pfcvh   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed           0          11s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5vg2j   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fhwf7   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5vg2j   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Pending             0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5vg2j   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     ContainerCreating   0          0s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fhwf7   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          2s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v7rhr   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          2s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5vg2j   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running             0          3s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fhwf7   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed           0          12s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v7rhr   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed           0          12s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("5vg2j   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed           0          12s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除job")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f pc-job.yaml")]),t._v("\njob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batch "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-job"')]),t._v(" deleted\n")])])]),n("h3",{attrs:{id:"_6-7-cronjob-cj"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-cronjob-cj"}},[t._v("#")]),t._v(" 6.7 CronJob(CJ)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("CronJob控制器以Job控制器资源为其管控对象，并借助它管理pod资源对象，Job控制器定义的作业任务在其控制器资源创建之后便会立即执行，但CronJob可以以类似于Linux操作系统的周期性任务作业计划的方式控制其运行**时间点**及**重复运行**的方式。也就是说，**CronJob可以在特定的时间点(反复的)去运行job任务**。\n")])])]),n("img",{staticStyle:{zoom:"80%"},attrs:{src:a(524)}}),t._v(" "),n("p",[t._v("CronJob的资源清单文件：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1beta1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CronJob "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类型       ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rs名称 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属命名空间 ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cronjob\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详情描述")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cron格式的作业调度运行时间点,用于控制任务在什么时间执行")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("concurrencyPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 并发执行策略，用于定义前一次作业运行尚未完成时是否以及如何运行后一次的作业")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failedJobHistoryLimit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为失败的任务执行保留的历史记录数，默认为1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("successfulJobHistoryLimit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为成功的任务执行保留的历史记录数，默认为3")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("startingDeadlineSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动作业错误的超时时长")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobTemplate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# job控制器模板，用于为cronjob控制器生成job对象;下面其实就是job的定义")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("completions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("parallelism")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("activeDeadlineSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backoffLimit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("manualSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 规则\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never \n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 20;done"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-markdown extra-class"},[n("pre",{pre:!0,attrs:{class:"language-markdown"}},[n("code",[t._v("需要重点解释的几个选项：\nschedule: cron表达式，用于指定任务的执行时间\n\t"),n("span",{pre:!0,attrs:{class:"token italic"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token content"}},[t._v("/1    ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("*")])]),t._v("      "),n("span",{pre:!0,attrs:{class:"token italic"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token content"}},[t._v("    ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("*")])]),t._v("     *\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("分钟")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("小时")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("日")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("月份")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("星期")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("    分钟 值从 0 到 59.\n    小时 值从 0 到 23.\n    日 值从 1 到 31.\n    月 值从 1 到 12.\n    星期 值从 0 到 6, 0 代表星期日\n    多个时间可以用逗号隔开； 范围可以用连字符给出；*可以作为通配符； /表示每...")]),t._v("\nconcurrencyPolicy:\n\tAllow:   允许Jobs并发运行(默认)\n\tForbid:  禁止并发运行，如果上一次运行尚未完成，则跳过下一次运行\n\tReplace: 替换，取消当前正在运行的作业并用新作业替换它\n")])])]),n("p",[t._v("创建pc-cronjob.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CronJob\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cronjob\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cronjob\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*/1 * * * *"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobTemplate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" counter\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 3;done"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建cronjob")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pc-cronjob.yaml")]),t._v("\ncronjob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看cronjob")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get cronjobs -n dev")]),t._v("\nNAME         SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("   False     0        <none>          6s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看job")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get jobs -n dev")]),t._v("\nNAME                    COMPLETIONS   DURATION   AGE\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1592587800   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1           28s        3m26s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1592587860   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1           28s        2m26s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1592587920   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1           28s        86s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1592587800"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x4tsm   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed   0          2m24s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1592587860"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r5gv4   0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Completed   0          84s\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cronjob"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1592587920"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("9dxxq   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running     0          24s\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除cronjob")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl  delete -f pc-cronjob.yaml")]),t._v("\ncronjob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batch "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pc-cronjob"')]),t._v(" deleted\n")])])]),n("h2",{attrs:{id:"第七章-service详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第七章-service详解"}},[t._v("#")]),t._v(" 第七章 Service详解")]),t._v(" "),n("p",[t._v("本章节主要介绍kubernetes的流量负载组件：Service和Ingress。")]),t._v(" "),n("h3",{attrs:{id:"_7-1-service介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-service介绍"}},[t._v("#")]),t._v(" 7.1 Service介绍")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("在kubernetes中，pod是应用程序的载体，我们可以通过pod的ip来访问应用程序，但是pod的ip地址不是固定的，这也就意味着不方便直接采用pod的ip对服务进行访问。\n\n为了解决这个问题，kubernetes提供了Service资源，Service会对提供同一个服务的多个pod进行聚合，并且提供一个统一的入口地址。通过访问Service的入口地址就能访问到后面的pod服务。\n")])])]),n("img",{staticStyle:{zoom:"100%"},attrs:{src:a(525)}}),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("Service在很多情况下只是一个概念，真正起作用的其实是kube-proxy服务进程，每个Node节点上都运行着一个kube-proxy服务进程。当创建Service的时候会通过api-server向etcd写入创建的service的信息，而kube-proxy会基于监听的机制发现这种Service的变动，然后**它会将最新的Service信息转换成对应的访问规则**。\n")])])]),n("img",{attrs:{src:a(526)}}),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 10.97.97.97:80 是service提供的访问入口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当访问这个入口的时候，可以发现后面有三个pod的服务在等待调用，")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kube-proxy会基于rr（轮询）的策略，将请求分发到其中一个pod上去")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个规则会同时在集群内的所有节点上都生成，所以在任何一个节点上访问都可以。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@node1 ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ipvsadm -Ln")]),t._v("\nIP Virtual Server version 1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size=4096"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nProt LocalAddress:Port Scheduler Flags\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> RemoteAddress:Port           Forward Weight ActiveConn InActConn\nTCP  10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97:80 rr\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33:80               Masq    1      0          0\n")])])]),n("p",[t._v("kube-proxy目前支持三种工作模式:")]),t._v(" "),n("p",[n("strong",[t._v("userspace 模式")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("userspace模式下，kube-proxy会为每一个Service创建一个监听端口，发向Cluster IP的请求被Iptables规则重定向到kube-proxy监听的端口上，kube-proxy根据LB算法选择一个提供服务的Pod并和其建立链接，以将请求转发到Pod上。\n该模式下，kube-proxy充当了一个四层负责均衡器的角色。由于kube-proxy运行在userspace中，在进行转发处理时会增加内核和用户空间之间的数据拷贝，虽然比较稳定，但是效率比较低。\n")])])]),n("img",{staticStyle:{border:"1px solid",zoom:"57%"},attrs:{src:a(527)}}),t._v(" "),n("p",[n("strong",[t._v("iptables 模式")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("iptables模式下，kube-proxy为service后端的每个Pod创建对应的iptables规则，直接将发向Cluster IP的请求重定向到一个Pod IP。\n该模式下kube-proxy不承担四层负责均衡器的角色，只负责创建iptables规则。该模式的优点是较userspace模式效率更高，但不能提供灵活的LB策略，当后端Pod不可用时也无法进行重试。\n")])])]),n("img",{staticStyle:{zoom:"57%"},attrs:{src:a(528)}}),t._v(" "),n("p",[n("strong",[t._v("ipvs 模式")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("ipvs模式和iptables类似，kube-proxy监控Pod的变化并创建相应的ipvs规则。ipvs相对iptables转发效率更高。除此以外，ipvs支持更多的LB算法。\n")])])]),n("img",{staticStyle:{zoom:"57%"},attrs:{src:a(529)}}),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此模式必须安装ipvs内核模块，否则会降级为iptables")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启ipvs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl edit cm kube-proxy -n kube-system")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete pod -l k8s-app=kube-proxy -n kube-system")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@node1 ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ipvsadm -Ln")]),t._v("\nIP Virtual Server version 1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size=4096"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nProt LocalAddress:Port Scheduler Flags\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> RemoteAddress:Port           Forward Weight ActiveConn InActConn\nTCP  10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97:80 rr\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33:80               Masq    1      0          0\n")])])]),n("h3",{attrs:{id:"_7-2-service类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-service类型"}},[t._v("#")]),t._v(" 7.2 Service类型")]),t._v(" "),n("p",[t._v("Service的资源清单文件：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源名称")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命名空间")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 描述")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 标签选择器，用于确定当前service代理哪些pod")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Service类型，指定service的访问方式")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟服务的ip地址")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sessionAffinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# session亲和性，支持ClientIP、None两个选项")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口信息")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP \n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3017")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service端口")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5003")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod端口")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("31122")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主机端口")]),t._v("\n")])])]),n("ul",[n("li",[t._v("ClusterIP：默认值，它是Kubernetes系统自动分配的虚拟IP，只能在集群内部访问")]),t._v(" "),n("li",[t._v("NodePort：将Service通过指定的Node上的端口暴露给外部，通过此方法，就可以在集群外部访问服务")]),t._v(" "),n("li",[t._v("LoadBalancer：使用外接负载均衡器完成到服务的负载分发，注意此模式需要外部云环境支持")]),t._v(" "),n("li",[t._v("ExternalName： 把集群外部的服务引入集群内部，直接使用")])]),t._v(" "),n("h3",{attrs:{id:"_7-3-service使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-service使用"}},[t._v("#")]),t._v(" 7.3 Service使用")]),t._v(" "),n("h4",{attrs:{id:"实验环境准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验环境准备"}},[t._v("#")]),t._v(" 实验环境准备")]),t._v(" "),n("p",[t._v("在使用service之前，首先利用Deployment创建出3个pod，注意要为pod设置"),n("code",[t._v("app=nginx-pod")]),t._v("的标签")]),t._v(" "),n("p",[t._v("创建deployment.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment      \n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f deployment.yaml")]),t._v("\ndeployment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide --show-labels")]),t._v("\nNAME                             READY   STATUS     IP            NODE     LABELS\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("66cb59b984"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8p84h   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running    10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40   node1    app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("66cb59b984"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("vx8vx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running    10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33   node2    app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\npc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deployment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("66cb59b984"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wnncx   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running    10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39   node1    app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为了方便后面的测试，修改下三台nginx的index.html页面（三台修改的IP地址不一致）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec -it pc-deployment-66cb59b984-8p84h -n dev /bin/sh")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# echo "10.244.1.40" > /usr/share/nginx/html/index.html')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改完毕之后，访问测试")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.244.1.40")]),t._v("\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.244.2.33")]),t._v("\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.244.1.39")]),t._v("\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39\n")])])]),n("h4",{attrs:{id:"clusterip类型的service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#clusterip类型的service"}},[t._v("#")]),t._v(" ClusterIP类型的Service")]),t._v(" "),n("p",[t._v("创建service-clusterip.yaml文件")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("clusterip\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.97.97.97 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service的ip地址，如果不写，默认会生成一个")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Service端口       ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod端口")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f service-clusterip.yaml")]),t._v("\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("clusterip created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc -n dev -o wide")]),t._v("\nNAME                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TYPE")]),t._v("        CLUSTER"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP    EXTERNAL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   AGE   SELECTOR\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("clusterip   ClusterIP   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97   <none>        80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP    13s   app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看service的详细信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在这里有一个Endpoints列表，里面就是当前service可以负载到的服务入口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe svc service-clusterip -n dev")]),t._v("\nName:              service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("clusterip\nNamespace:         dev\nLabels:            <none>\nAnnotations:       <none>\nSelector:          app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Type")]),t._v(":              ClusterIP\nIP:                10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97\nPort:              <unset>  80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP\nTargetPort:        80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP\nEndpoints:         10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33:80\nSession Affinity:  None\nEvents:            <none>\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看ipvs的映射规则")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ipvsadm -Ln")]),t._v("\nTCP  10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97:80 rr\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33:80               Masq    1      0          0\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问10.97.97.97:80观察效果")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.97.97.97:80")]),t._v("\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n")])])]),n("p",[n("strong",[t._v("Endpoint")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("Endpoint是kubernetes中的一个资源对象，存储在etcd中，用来记录一个service对应的所有pod的访问地址，它是根据service配置文件中selector描述产生的。\n\n一个Service由一组Pod组成，这些Pod通过Endpoints暴露出来，**Endpoints是实现实际服务的端点集合**。换句话说，service和pod之间的联系是通过endpoints实现的。\n")])])]),n("p",[n("img",{attrs:{src:a(530),alt:"image-20200509191917069"}})]),t._v(" "),n("p",[n("strong",[t._v("负载分发策略")])]),t._v(" "),n("p",[t._v("对Service的访问被分发到了后端的Pod上去，目前kubernetes提供了两种负载分发策略：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如果不定义，默认使用kube-proxy的策略，比如随机、轮询")])]),t._v(" "),n("li",[n("p",[t._v("基于客户端地址的会话保持模式，即来自同一个客户端发起的所有请求都会转发到固定的一个Pod上")]),t._v(" "),n("p",[t._v("此模式可以使在spec中添加"),n("code",[t._v("sessionAffinity:ClientIP")]),t._v("选项")])])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看ipvs的映射规则【rr 轮询】")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ipvsadm -Ln")]),t._v("\nTCP  10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97:80 rr\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33:80               Masq    1      0          0\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 循环访问测试")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# while true;do curl 10.97.97.97:80; sleep 5; done;")]),t._v("\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改分发策略----sessionAffinity:ClientIP")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看ipvs规则【persistent 代表持久】")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ipvsadm -Ln")]),t._v("\nTCP  10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97:80 rr persistent 10800\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40:80               Masq    1      0          0\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("> 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33:80               Masq    1      0          0\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 循环访问测试")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# while true;do curl 10.97.97.97; sleep 5; done;")]),t._v("\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f service-clusterip.yaml")]),t._v("\nservice "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"service-clusterip"')]),t._v(" deleted\n")])])]),n("h4",{attrs:{id:"headliness类型的service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#headliness类型的service"}},[t._v("#")]),t._v(" HeadLiness类型的Service")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("在某些场景中，开发人员可能不想使用Service提供的负载均衡功能，而希望自己来控制负载均衡策略，针对这种情况，kubernetes提供了HeadLiness  Service，这类Service不会分配Cluster IP，如果想要访问service，只能通过service的域名进行查询。\n")])])]),n("p",[t._v("创建service-headliness.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("headliness\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将clusterIP设置为None，即可创建headliness Service")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("    \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f service-headliness.yaml")]),t._v("\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("headliness created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取service， 发现CLUSTER-IP未分配")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc service-headliness -n dev -o wide")]),t._v("\nNAME                 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TYPE")]),t._v("        CLUSTER"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   EXTERNAL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   AGE   SELECTOR\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("headliness   ClusterIP   None         <none>        80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP    11s   app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看service详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe svc service-headliness  -n dev")]),t._v("\nName:              service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("headliness\nNamespace:         dev\nLabels:            <none>\nAnnotations:       <none>\nSelector:          app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Type")]),t._v(":              ClusterIP\nIP:                None\nPort:              <unset>  80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP\nTargetPort:        80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP\nEndpoints:         10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33:80\nSession Affinity:  None\nEvents:            <none>\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看域名的解析情况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec -it pc-deployment-66cb59b984-8p84h -n dev /bin/sh")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /etc/resolv.conf")]),t._v("\nnameserver 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("96"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("10\nsearch dev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("svc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local svc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local\n\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dig @10.96.0.10 service-headliness.dev.svc.cluster.local")]),t._v("\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("headliness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("svc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 30 IN A 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("40\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("headliness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("svc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 30 IN A 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("39\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("headliness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("svc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 30 IN A 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("33\n")])])]),n("h4",{attrs:{id:"nodeport类型的service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nodeport类型的service"}},[t._v("#")]),t._v(" NodePort类型的Service")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("在之前的样例中，创建的Service的ip地址只有集群内部才可以访问，如果希望将Service暴露给集群外部使用，那么就要使用到另外一种类型的Service，称为NodePort类型。NodePort的工作原理其实就是**将service的端口映射到Node的一个端口上**，然后就可以通过`NodeIp:NodePort`来访问service了。\n")])])]),n("img",{attrs:{src:a(531)}}),t._v(" "),n("p",[t._v("创建service-nodeport.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeport\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePort "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service类型")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30002")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定绑定的node的端口(默认的取值范围是：30000-32767), 如果不指定，会默认分配")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f service-nodeport.yaml")]),t._v("\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodeport created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc -n dev -o wide")]),t._v("\nNAME               "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TYPE")]),t._v("       CLUSTER"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP      EXTERNAL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       SELECTOR\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodeport   NodePort   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("105"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("191   <none>        80:30002"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP  app=nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pod\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来可以通过电脑主机的浏览器去访问集群中任意一个nodeip的30002端口，即可访问到pod")]),t._v("\n")])])]),n("h4",{attrs:{id:"loadbalancer类型的service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loadbalancer类型的service"}},[t._v("#")]),t._v(" LoadBalancer类型的Service")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("LoadBalancer和NodePort很相似，目的都是向外部暴露一个端口，区别在于LoadBalancer会在集群的外部再来做一个负载均衡设备，而这个设备需要外部环境支持的，外部服务发送到这个设备上的请求，会被设备负载之后转发到集群中。\n")])])]),n("img",{attrs:{src:a(532)}}),t._v(" "),n("h4",{attrs:{id:"externalname类型的service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#externalname类型的service"}},[t._v("#")]),t._v(" ExternalName类型的Service")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("ExternalName类型的Service用于引入集群外部的服务，它通过`externalName`属性指定外部一个服务的地址，然后在集群内部访问此service就可以访问到外部的服务了。\n")])])]),n("img",{attrs:{src:a(533)}}),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("externalname\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ExternalName "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service类型")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("externalName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" www.baidu.com  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#改成ip地址也可以")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl  create -f service-externalname.yaml")]),t._v("\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("service"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("externalname created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 域名解析")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dig @10.96.0.10 service-externalname.dev.svc.cluster.local")]),t._v("\nservice"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("externalname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("svc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cluster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 30 IN CNAME www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baidu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nwww"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baidu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("          30      IN      CNAME   www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shifen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nwww"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shifen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("       30      IN      A       39"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("156"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("66"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("18\nwww"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shifen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("       30      IN      A       39"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("156"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("66"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("14\n")])])]),n("h3",{attrs:{id:"_7-4-ingress介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-ingress介绍"}},[t._v("#")]),t._v(" 7.4 Ingress介绍")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v(" 在前面课程中已经提到，Service对集群之外暴露服务的主要方式有两种：NotePort和LoadBalancer，但是这两种方式，都有一定的缺点：\n")])])]),n("ul",[n("li",[n("p",[t._v("NodePort方式的缺点是会占用很多集群机器的端口，那么当集群服务变多的时候，这个缺点就愈发明显")])]),t._v(" "),n("li",[n("p",[t._v("LB方式的缺点是每个service需要一个LB，浪费、麻烦，并且需要kubernetes之外设备的支持")]),t._v(" "),n("p",[t._v("基于这种现状，kubernetes提供了Ingress资源对象，Ingress只需要一个NodePort或者一个LB就可以满足暴露多个Service的需求。工作机制大致如下图表示：")])])]),t._v(" "),n("img",{attrs:{src:a(534)}}),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("实际上，Ingress相当于一个7层的负载均衡器，是kubernetes对反向代理的一个抽象，它的工作原理类似于Nginx，可以理解成在**Ingress里建立诸多映射规则，Ingress Controller通过监听这些配置规则并转化成Nginx的反向代理配置 , 然后对外部提供服务**。在这里有两个核心概念：\n")])])]),n("ul",[n("li",[t._v("ingress：kubernetes中的一个对象，作用是定义请求如何转发到service的规则")]),t._v(" "),n("li",[t._v("ingress controller：具体实现反向代理及负载均衡的程序，对ingress定义的规则进行解析，根据配置的规则来实现请求转发，实现方式有很多，比如Nginx, Contour, Haproxy等等")])]),t._v(" "),n("p",[t._v("Ingress（以Nginx为例）的工作原理如下：")]),t._v(" "),n("ol",[n("li",[t._v("用户编写Ingress规则，说明哪个域名对应kubernetes集群中的哪个Service")]),t._v(" "),n("li",[t._v("Ingress控制器动态感知Ingress服务规则的变化，然后生成一段对应的Nginx反向代理配置")]),t._v(" "),n("li",[t._v("Ingress控制器会将生成的Nginx配置写入到一个运行着的Nginx服务中，并动态更新")]),t._v(" "),n("li",[t._v("到此为止，其实真正在工作的就是一个Nginx了，内部配置了用户定义的请求转发规则")])]),t._v(" "),n("img",{staticStyle:{border:"1px solid",zoom:"100%"},attrs:{src:a(535)}}),t._v(" "),n("h3",{attrs:{id:"_7-5-ingress使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-ingress使用"}},[t._v("#")]),t._v(" 7.5 Ingress使用")]),t._v(" "),n("h4",{attrs:{id:"环境准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[t._v("#")]),t._v(" 环境准备")]),t._v(" "),n("p",[n("strong",[t._v("搭建ingress环境")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建文件夹")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir ingress-controller")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd ingress-controller/")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取ingress-nginx，本次案例使用的是0.30版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ingress-controller]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/mandatory.yaml")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ingress-controller]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/provider/baremetal/service-nodeport.yaml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改mandatory.yaml文件中的仓库")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为quay-mirror.qiniu.com/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建ingress-nginx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ingress-controller]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f ./")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看ingress-nginx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ingress-controller]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod -n ingress-nginx")]),t._v("\nNAME                                           READY   STATUS    RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("controller"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fbf967dd5"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("4qpbp   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          12h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ingress-controller]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc -n ingress-nginx")]),t._v("\nNAME            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TYPE")]),t._v("       CLUSTER"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP     EXTERNAL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                      AGE\ningress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nginx   NodePort   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("98"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("75"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("163   <none>        80:32240"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("443:31335"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP   11h\n")])])]),n("p",[n("strong",[t._v("准备service和pod")])]),t._v(" "),n("p",[t._v("为了后面的实验比较方便，创建如下图所示的模型")]),t._v(" "),n("img",{staticStyle:{zoom:"80%"},attrs:{src:a(536)}}),t._v(" "),n("p",[t._v("创建tomcat-nginx.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jre10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slim\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f tomcat-nginx.yaml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc -n dev")]),t._v("\nNAME             "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TYPE")]),t._v("        CLUSTER"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   EXTERNAL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP   PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    AGE\nnginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service    ClusterIP   None         <none>        80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP     48s\ntomcat"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service   ClusterIP   None         <none>        8080"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TCP   48s\n")])])]),n("h4",{attrs:{id:"http代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http代理"}},[t._v("#")]),t._v(" Http代理")]),t._v(" "),n("p",[t._v("创建ingress-http.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("http\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx.itheima.com\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat.itheima.com\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f ingress-http.yaml")]),t._v("\ningress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extensions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("http created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get ing ingress-http -n dev")]),t._v("\nNAME           HOSTS                                  ADDRESS   PORTS   AGE\ningress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("http   nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com             80      22s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe ing ingress-http  -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nRules:\nHost                Path  Backends\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\nnginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service:80 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("96:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("112:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("94:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("95:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("111:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来,在本地电脑上配置host文件,解析上面的两个域名到192.168.109.100(master)上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 然后,就可以分别访问tomcat.itheima.com:32240  和  nginx.itheima.com:32240 查看效果了")]),t._v("\n")])])]),n("h4",{attrs:{id:"https代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#https代理"}},[t._v("#")]),t._v(" Https代理")]),t._v(" "),n("p",[t._v("创建证书")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成证书")]),t._v("\nopenssl req "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x509 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sha256 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("days 365 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("newkey rsa:2048 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keyout tls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out tls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("subj "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/C=CN/ST=BJ/L=BJ/O=nginx/CN=itheima.com"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建密钥")]),t._v("\nkubectl create secret tls tls"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("secret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("key tls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("cert tls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt\n")])])]),n("p",[t._v("创建ingress-https.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("https\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" nginx.itheima.com\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcat.itheima.com\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secretName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定秘钥")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx.itheima.com\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat.itheima.com\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f ingress-https.yaml")]),t._v("\ningress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extensions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ingress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("https created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get ing ingress-https -n dev")]),t._v("\nNAME            HOSTS                                  ADDRESS         PORTS     AGE\ningress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("https   nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("104"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("184"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("38   80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 443   2m42s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe ing ingress-https -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nTLS:\n  tls"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("secret terminates nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\nRules:\nHost              Path Backends\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\nnginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("  nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service:80 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("97:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("98:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("119:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itheima"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("  tomcat"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("service:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("99:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("117:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("120:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面可以通过浏览器访问https://nginx.itheima.com:31335 和 https://tomcat.itheima.com:31335来查看了")]),t._v("\n")])])]),n("h2",{attrs:{id:"第八章-数据存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第八章-数据存储"}},[t._v("#")]),t._v(" 第八章 数据存储")]),t._v(" "),n("p",[t._v("在前面已经提到，容器的生命周期可能很短，会被频繁地创建和销毁。那么容器在销毁时，保存在容器中的数据也会被清除。这种结果对用户来说，在某些情况下是不乐意看到的。为了持久化保存容器的数据，kubernetes引入了Volume的概念。")]),t._v(" "),n("p",[t._v("Volume是Pod中能够被多个容器访问的共享目录，它被定义在Pod上，然后被一个Pod里的多个容器挂载到具体的文件目录下，kubernetes通过Volume实现同一个Pod中不同容器之间的数据共享以及数据的持久化存储。Volume的生命容器不与Pod中单个容器的生命周期相关，当容器终止或者重启时，Volume中的数据也不会丢失。")]),t._v(" "),n("p",[t._v("kubernetes的Volume支持多种类型，比较常见的有下面几个：")]),t._v(" "),n("ul",[n("li",[t._v("简单存储：EmptyDir、HostPath、NFS")]),t._v(" "),n("li",[t._v("高级存储：PV、PVC")]),t._v(" "),n("li",[t._v("配置存储：ConfigMap、Secret")])]),t._v(" "),n("h3",{attrs:{id:"_8-1-基本存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-基本存储"}},[t._v("#")]),t._v(" 8.1 基本存储")]),t._v(" "),n("h4",{attrs:{id:"emptydir"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#emptydir"}},[t._v("#")]),t._v(" EmptyDir")]),t._v(" "),n("p",[t._v("EmptyDir是最基础的Volume类型，一个EmptyDir就是Host上的一个空目录。")]),t._v(" "),n("p",[t._v("EmptyDir是在Pod被分配到Node时创建的，它的初始内容为空，并且无须指定宿主机上对应的目录文件，因为kubernetes会自动分配一个目录，当Pod销毁时， EmptyDir中的数据也会被永久删除。 EmptyDir用途如下：")]),t._v(" "),n("ul",[n("li",[t._v("临时空间，例如用于某些应用程序运行时所需的临时目录，且无须永久保留")]),t._v(" "),n("li",[t._v("一个容器需要从另一个容器中获取数据的目录（多容器共享目录）")])]),t._v(" "),n("p",[t._v("接下来，通过一个容器之间文件共享的案例来使用一下EmptyDir。")]),t._v(" "),n("p",[t._v("在一个Pod中准备两个容器nginx和busybox，然后声明一个Volume分别挂在到两个容器的目录中，然后nginx容器负责向Volume中写日志，busybox中通过命令将日志内容读到控制台。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(537),alt:"img"}})]),t._v(" "),n("p",[t._v("创建一个volume-emptydir.yaml")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("emptydir\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.14"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将logs-volume挂在到nginx容器中，对应的目录为 /var/log/nginx")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log/nginx\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tail -f /logs/access.log"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始命令，动态读取指定文件中内容")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将logs-volume 挂在到busybox容器中，对应的目录为 /logs")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /logs\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 声明volume， name为logs-volume，类型为emptyDir")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f volume-emptydir.yaml")]),t._v("\npod/volume-emptydir created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods volume-emptydir -n dev -o wide")]),t._v("\nNAME                  READY   STATUS    RESTARTS   AGE   IP             NODE   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" \nvolume-emptydir   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          97s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.100   node1  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过podIp访问nginx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.244.1.100")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过kubectl logs命令查看指定容器的标准输出")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl logs -f volume-emptydir -n dev -c busybox")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".0.0 - - "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("/Apr/2020:10:58:47 +0000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET / HTTP/1.1"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("612")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"curl/7.29.0"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v("\n")])])]),n("h4",{attrs:{id:"hostpath"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hostpath"}},[t._v("#")]),t._v(" HostPath")]),t._v(" "),n("p",[t._v("上面提到，EmptyDir中数据不会被持久化，它会随着Pod的结束而销毁，如果想简单的将数据持久化到主机中，可以选择HostPath。")]),t._v(" "),n("p",[t._v("HostPath就是将Node主机中一个实际目录挂在到Pod中，以供容器使用，这样的设计就可以保证Pod销毁了，但是数据依据可以存在于Node主机上。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(538),alt:"img"}})]),t._v(" "),n("p",[t._v("创建一个volume-hostpath.yaml：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hostpath\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log/nginx\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tail -f /logs/access.log"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /logs\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/logs\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DirectoryOrCreate  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目录存在就使用，不存在就先创建后使用")]),t._v("\n关于type的值的一点说明：\n  DirectoryOrCreate 目录存在就使用，不存在就先创建后使用\n  Directory 目录必须存在\n  FileOrCreate  文件存在就使用，不存在就先创建后使用\n  File 文件必须存在 \n    Socket  unix套接字必须存在\n  CharDevice  字符设备必须存在\n  BlockDevice 块设备必须存在\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f volume-hostpath.yaml")]),t._v("\npod/volume-hostpath created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods volume-hostpath -n dev -o wide")]),t._v("\nNAME                  READY   STATUS    RESTARTS   AGE   IP             NODE   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\npod-volume-hostpath   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          16s   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.104   node1  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问nginx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 10.244.1.104")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来就可以去host的/root/logs目录下查看存储的文件了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###  注意: 下面的操作需要到Pod所在的节点运行（案例中是node1）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node1 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls /root/logs/")]),t._v("\naccess.log  error.log\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同样的道理，如果在此目录下创建一个文件，到容器中也是可以看到的")]),t._v("\n")])])]),n("h4",{attrs:{id:"nfs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nfs"}},[t._v("#")]),t._v(" NFS")]),t._v(" "),n("p",[t._v("HostPath可以解决数据持久化的问题，但是一旦Node节点故障了，Pod如果转移到了别的节点，又会出现问题了，此时需要准备单独的网络存储系统，比较常用的用NFS、CIFS。")]),t._v(" "),n("p",[t._v("NFS是一个网络文件存储系统，可以搭建一台NFS服务器，然后将Pod中的存储直接连接到NFS系统上，这样的话，无论Pod在节点上怎么转移，只要Node跟NFS的对接没问题，数据就可以成功访问。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(539),alt:"img"}})]),t._v(" "),n("p",[t._v("1）首先要准备nfs的服务器，这里为了简单，直接是master节点做nfs服务器")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在master上安装nfs服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install nfs-utils -y")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 准备一个共享目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir /root/data/nfs -pv")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将共享目录以读写权限暴露给192.168.109.0/24网段中的所有主机")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim /etc/exports")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /etc/exports")]),t._v("\n/root/data/nfs     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.0/24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动nfs服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl start nfs")]),t._v("\n")])])]),n("p",[t._v("2）接下来，要在的每个node节点上都安装下nfs，这样的目的是为了node节点可以驱动nfs设备")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在node上安装nfs服务，注意不需要启动")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install nfs-utils -y")]),t._v("\n")])])]),n("p",[t._v("3）接下来，就可以编写pod的配置文件了，创建volume-nfs.yaml")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: volume-nfs\n  namespace: dev\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.17.1\n    ports:\n    - containerPort: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    volumeMounts:\n    - name: logs-volume\n      mountPath: /var/log/nginx\n  - name: busybox\n    image: busybox:1.30\n    command: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),t._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tail -f /logs/access.log"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n    volumeMounts:\n    - name: logs-volume\n      mountPath: /logs\n  volumes:\n  - name: logs-volume\n    nfs:\n      server: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.100  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nfs服务器地址")]),t._v("\n      path: /root/data/nfs "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享文件路径")]),t._v("\n")])])]),n("p",[t._v("4）最后，运行下pod，观察结果")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f volume-nfs.yaml")]),t._v("\npod/volume-nfs created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods volume-nfs -n dev")]),t._v("\nNAME                  READY   STATUS    RESTARTS   AGE\nvolume-nfs        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2m9s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看nfs服务器上的共享目录，发现已经有文件了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls /root/data/")]),t._v("\naccess.log  error.log\n")])])]),n("h3",{attrs:{id:"_8-2-高级存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-高级存储"}},[t._v("#")]),t._v(" 8.2 高级存储")]),t._v(" "),n("h4",{attrs:{id:"pv和pvc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pv和pvc"}},[t._v("#")]),t._v(" PV和PVC")]),t._v(" "),n("p",[t._v("前面已经学习了使用NFS提供存储，此时就要求用户会搭建NFS系统，并且会在yaml配置nfs。由于kubernetes支持的存储系统有很多，要求客户全都掌握，显然不现实。为了能够屏蔽底层存储实现的细节，方便用户使用， kubernetes引入PV和PVC两种资源对象。")]),t._v(" "),n("p",[t._v("PV（Persistent Volume）是持久化卷的意思，是对底层的共享存储的一种抽象。一般情况下PV由kubernetes管理员进行创建和配置，它与底层具体的共享存储技术有关，并通过插件完成与共享存储的对接。")]),t._v(" "),n("p",[t._v("PVC（Persistent Volume Claim）是持久卷声明的意思，是用户对于存储需求的一种声明。换句话说，PVC其实就是用户向kubernetes系统发出的一种资源需求申请。")]),t._v(" "),n("img",{staticStyle:{zoom:"100%"},attrs:{src:a(540)}}),t._v(" "),n("p",[t._v("使用了PV和PVC之后，工作可以得到进一步的细分：")]),t._v(" "),n("ul",[n("li",[t._v("存储：存储工程师维护")]),t._v(" "),n("li",[t._v("PV：  kubernetes管理员维护")]),t._v(" "),n("li",[t._v("PVC：kubernetes用户维护")])]),t._v(" "),n("h4",{attrs:{id:"pv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pv"}},[t._v("#")]),t._v(" PV")]),t._v(" "),n("p",[t._v("PV是存储资源的抽象，下面是资源清单文件:")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1  \n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pv2\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储类型，与底层真正存储对应")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储能力，目前只支持存储空间的设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2Gi\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问模式")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储类别")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回收策略")]),t._v("\n")])])]),n("p",[t._v("PV 的关键配置参数说明：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("存储类型")])]),t._v(" "),n("p",[t._v("底层实际存储的类型，kubernetes支持多种存储类型，每种存储类型的配置都有所差异")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("存储能力（capacity）")])])])]),t._v(" "),n("p",[t._v("​      目前只支持存储空间的设置( storage=1Gi )，不过未来可能会加入IOPS、吞吐量等指标的配置")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("访问模式（accessModes）")])]),t._v(" "),n("p",[t._v("用于描述用户应用对存储资源的访问权限，访问权限包括下面几种方式：")]),t._v(" "),n("ul",[n("li",[t._v("ReadWriteOnce（RWO）：读写权限，但是只能被单个节点挂载")]),t._v(" "),n("li",[t._v("ReadOnlyMany（ROX）：  只读权限，可以被多个节点挂载")]),t._v(" "),n("li",[t._v("ReadWriteMany（RWX）：读写权限，可以被多个节点挂载")])]),t._v(" "),n("p",[n("code",[t._v("需要注意的是，底层不同的存储类型可能支持的访问模式不同")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("回收策略（persistentVolumeReclaimPolicy）")])]),t._v(" "),n("p",[t._v("当PV不再被使用了之后，对其的处理方式。目前支持三种策略：")]),t._v(" "),n("ul",[n("li",[t._v("Retain  （保留）  保留数据，需要管理员手工清理数据")]),t._v(" "),n("li",[t._v("Recycle（回收）  清除 PV 中的数据，效果相当于执行 rm -rf /thevolume/*")]),t._v(" "),n("li",[t._v("Delete  （删除） 与 PV 相连的后端存储完成 volume 的删除操作，当然这常见于云服务商的存储服务")])]),t._v(" "),n("p",[n("code",[t._v("需要注意的是，底层不同的存储类型可能支持的回收策略不同")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("存储类别")])]),t._v(" "),n("p",[t._v("PV可以通过storageClassName参数指定一个存储类别")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("具有特定类别的PV只能与请求了该类别的PVC进行绑定")])]),t._v(" "),n("li",[n("p",[t._v("未设定类别的PV则只能与不请求任何类别的PVC进行绑定")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("状态（status）")])]),t._v(" "),n("p",[t._v("一个 PV 的生命周期中，可能会处于4中不同的阶段：")]),t._v(" "),n("ul",[n("li",[t._v("Available（可用）：     表示可用状态，还未被任何 PVC 绑定")]),t._v(" "),n("li",[t._v("Bound（已绑定）：     表示 PV 已经被 PVC 绑定")]),t._v(" "),n("li",[t._v("Released（已释放）： 表示 PVC 被删除，但是资源还未被集群重新声明")]),t._v(" "),n("li",[t._v("Failed（失败）：         表示该 PV 的自动回收失败")])])])]),t._v(" "),n("p",[n("strong",[t._v("实验")])]),t._v(" "),n("p",[t._v("使用NFS作为存储，来演示PV的使用，创建3个PV，对应NFS中的3个暴露的路径。")]),t._v(" "),n("ol",[n("li",[t._v("准备NFS环境")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir /root/data/{pv1,pv2,pv3} -pv")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暴露服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /etc/exports")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pv1     192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("no_root_squash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pv2     192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("no_root_squash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pv3     192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("no_root_squash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  systemctl restart nfs")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("创建pv.yaml")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  pv1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  pv2\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2Gi\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv2\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100\n    \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  pv3\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3Gi\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv3\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 pv")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pv.yaml")]),t._v("\npersistentvolume"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pv1 created\npersistentvolume"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pv2 created\npersistentvolume"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pv3 created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pv")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pv -o wide")]),t._v("\nNAME   CAPACITY   ACCESS MODES  RECLAIM POLICY  STATUS      AGE   VOLUMEMODE\npv1    1Gi        RWX            Retain        Available    10s   Filesystem\npv2    2Gi        RWX            Retain        Available    10s   Filesystem\npv3    3Gi        RWX            Retain        Available    9s    Filesystem\n")])])]),n("h4",{attrs:{id:"pvc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pvc"}},[t._v("#")]),t._v(" PVC")]),t._v(" "),n("p",[t._v("PVC是资源的申请，用来声明对存储空间、访问模式、存储类别需求信息。下面是资源清单文件:")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问模式")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 采用标签对PV选择")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储类别")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求空间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n")])])]),n("p",[t._v("PVC 的关键配置参数说明：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("访问模式（accessModes）")])])]),t._v(" "),n("p",[t._v("​       用于描述用户应用对存储资源的访问权限")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("选择条件（selector）")])]),t._v(" "),n("p",[t._v("通过Label Selector的设置，可使PVC对于系统中己存在的PV进行筛选")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("存储类别（storageClassName）")])]),t._v(" "),n("p",[t._v("PVC在定义时可以设定需要的后端存储的类别，只有设置了该class的pv才能被系统选出")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("资源请求（Resources ）")])]),t._v(" "),n("p",[t._v("描述对存储资源的请求")])])]),t._v(" "),n("p",[n("strong",[t._v("实验")])]),t._v(" "),n("ol",[n("li",[t._v("创建pvc.yaml，申请pv")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n      \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc2\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n     \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc3\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pvc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pvc.yaml")]),t._v("\npersistentvolumeclaim"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc1 created\npersistentvolumeclaim"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc2 created\npersistentvolumeclaim"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc3 created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pvc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pvc  -n dev -o wide")]),t._v("\nNAME   STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE   VOLUMEMODE\npvc1   Bound    pv1      1Gi        RWX                           15s   Filesystem\npvc2   Bound    pv2      2Gi        RWX                           15s   Filesystem\npvc3   Bound    pv3      3Gi        RWX                           15s   Filesystem\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pv")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pv -o wide")]),t._v("\nNAME  CAPACITY ACCESS MODES  RECLAIM POLICY  STATUS    CLAIM       AGE     VOLUMEMODE\npv1    1Gi        RWx        Retain          Bound    dev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc1    3h37m    Filesystem\npv2    2Gi        RWX        Retain          Bound    dev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc2    3h37m    Filesystem\npv3    3Gi        RWX        Retain          Bound    dev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc3    3h37m    Filesystem   \n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("创建pods.yaml, 使用pv")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod1\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"while true;do echo pod1 >> /root/out.txt; sleep 10; done;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc1\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod2\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"while true;do echo pod2 >> /root/out.txt; sleep 10; done;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc2\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("        \n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pods.yaml")]),t._v("\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pod1 created\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pod2 created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev -o wide")]),t._v("\nNAME   READY   STATUS    RESTARTS   AGE   IP            NODE   \npod1   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          14s   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("69   node1   \npod2   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          14s   10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("244"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("70   node1  \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pvc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pvc -n dev -o wide")]),t._v("\nNAME   STATUS   VOLUME   CAPACITY   ACCESS MODES      AGE   VOLUMEMODE\npvc1   Bound    pv1      1Gi        RWX               94m   Filesystem\npvc2   Bound    pv2      2Gi        RWX               94m   Filesystem\npvc3   Bound    pv3      3Gi        RWX               94m   Filesystem\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pv")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pv -n dev -o wide")]),t._v("\nNAME   CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM       AGE     VOLUMEMODE\npv1    1Gi        RWX            Retain           Bound    dev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc1    5h11m   Filesystem\npv2    2Gi        RWX            Retain           Bound    dev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc2    5h11m   Filesystem\npv3    3Gi        RWX            Retain           Bound    dev"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pvc3    5h11m   Filesystem\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看nfs中的文件存储")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /root/data/pv1/out.txt")]),t._v("\nnode1\nnode1\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /root/data/pv2/out.txt")]),t._v("\nnode2\nnode2\n")])])]),n("h4",{attrs:{id:"生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),n("p",[t._v("PVC和PV是一一对应的，PV和PVC之间的相互作用遵循以下生命周期：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("资源供应")]),t._v("：管理员手动创建底层存储和PV")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("资源绑定")]),t._v("：用户创建PVC，kubernetes负责根据PVC的声明去寻找PV，并绑定")]),t._v(" "),n("p",[t._v("在用户定义好PVC之后，系统将根据PVC对存储资源的请求在已存在的PV中选择一个满足条件的")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("一旦找到，就将该PV与用户定义的PVC进行绑定，用户的应用就可以使用这个PVC了")])]),t._v(" "),n("li",[n("p",[t._v("如果找不到，PVC则会无限期处于Pending状态，直到等到系统管理员创建了一个符合其要求的PV")])])]),t._v(" "),n("p",[t._v("PV一旦绑定到某个PVC上，就会被这个PVC独占，不能再与其他PVC进行绑定了")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("资源使用")]),t._v("：用户可在pod中像volume一样使用pvc")]),t._v(" "),n("p",[t._v("Pod使用Volume的定义，将PVC挂载到容器内的某个路径进行使用。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("资源释放")]),t._v("：用户删除pvc来释放pv")]),t._v(" "),n("p",[t._v("当存储资源使用完毕后，用户可以删除PVC，与该PVC绑定的PV将会被标记为“已释放”，但还不能立刻与其他PVC进行绑定。通过之前PVC写入的数据可能还被留在存储设备上，只有在清除之后该PV才能再次使用。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("资源回收")]),t._v("：kubernetes根据pv设置的回收策略进行资源的回收")]),t._v(" "),n("p",[t._v("对于PV，管理员可以设定回收策略，用于设置与之绑定的PVC释放资源之后如何处理遗留数据的问题。只有PV的存储空间完成回收，才能供新的PVC绑定和使用")])])]),t._v(" "),n("img",{staticStyle:{zoom:"100%"},attrs:{src:a(541)}}),t._v(" "),n("h3",{attrs:{id:"_8-3-配置存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-配置存储"}},[t._v("#")]),t._v(" 8.3 配置存储")]),t._v(" "),n("h4",{attrs:{id:"configmap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configmap"}},[t._v("#")]),t._v(" ConfigMap")]),t._v(" "),n("p",[t._v("ConfigMap是一种比较特殊的存储卷，它的主要作用是用来存储配置信息的。")]),t._v(" "),n("p",[t._v("创建configmap.yaml，内容如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ConfigMap\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" configmap\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n    username:admin\n    password:123456")]),t._v("\n")])])]),n("p",[t._v("接下来，使用此配置文件创建configmap")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建configmap")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f configmap.yaml")]),t._v("\nconfigmap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("configmap created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看configmap详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe cm configmap -n dev")]),t._v("\nName:         configmap\nNamespace:    dev\nLabels:       <none>\nAnnotations:  <none>\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Data")]),t._v("\n====\ninfo:\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\nusername:admin\npassword:123456\n\nEvents:  <none>\n")])])]),n("p",[t._v("接下来创建一个pod-configmap.yaml，将上面创建的configmap挂载进去")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("configmap\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将configmap挂载到目录")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /configmap/config\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 引用configmap")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" configmap\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-configmap.yaml")]),t._v("\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configmap created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-configmap -n dev")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configmap   1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          6s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入容器")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec -it pod-configmap -n dev /bin/sh")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /configmap/config/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\ninfo\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more info")]),t._v("\nusername:admin\npassword:123456\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以看到映射已经成功，每个configmap都映射成了一个目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# key---\x3e文件     value----\x3e文件中的内容")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时如果更新configmap的内容, 容器中的值也会动态更新")]),t._v("\n")])])]),n("h4",{attrs:{id:"secret"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#secret"}},[t._v("#")]),t._v(" Secret")]),t._v(" "),n("p",[t._v("在kubernetes中，还存在一种和ConfigMap非常类似的对象，称为Secret对象。它主要用于存储敏感信息，例如密码、秘钥、证书等等。")]),t._v(" "),n("ol",[n("li",[t._v("首先使用base64对数据进行编码")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo -n 'admin' | base64 #准备username")]),t._v("\nYWRtaW4=\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo -n '123456' | base64 #准备password")]),t._v("\nMTIzNDU2\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("接下来编写secret.yaml，并创建Secret")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Opaque\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YWRtaW4=\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MTIzNDU2\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建secret")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f secret.yaml")]),t._v("\nsecret"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("secret created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看secret详情")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe secret secret -n dev")]),t._v("\nName:         secret\nNamespace:    dev\nLabels:       <none>\nAnnotations:  <none>\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Type")]),t._v(":  Opaque\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Data")]),t._v("\n====\npassword:  6 bytes\nusername:  5 bytes\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("创建pod-secret.yaml，将上面创建的secret挂载进去：")])]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将secret挂载到目录")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /secret/config\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secretName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f pod-secret.yaml")]),t._v("\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("secret created\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod pod-secret -n dev")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE\npod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("secret      1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1     Running   0          2m28s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入容器，查看secret信息，发现已经自动解码了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@master ~]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec -it pod-secret /bin/sh -n dev")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls /secret/config/")]),t._v("\npassword  username\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /secret/config/username")]),t._v("\nadmin\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more /secret/config/password")]),t._v("\n123456\n")])])]),n("p",[t._v("至此，已经实现了利用secret实现了信息的编码。")]),t._v(" "),n("h2",{attrs:{id:"第九章-安全认证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第九章-安全认证"}},[t._v("#")]),t._v(" 第九章 安全认证")]),t._v(" "),n("p",[t._v("本章节主要介绍Kubernetes的安全认证机制。")]),t._v(" "),n("h3",{attrs:{id:"_9-1-访问控制概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-访问控制概述"}},[t._v("#")]),t._v(" 9.1 访问控制概述")]),t._v(" "),n("p",[t._v("Kubernetes作为一个分布式集群的管理工具，保证集群的安全性是其一个重要的任务。所谓的安全性其实就是保证对Kubernetes的各种"),n("strong",[t._v("客户端")]),t._v("进行"),n("strong",[t._v("认证和鉴权")]),t._v("操作。")]),t._v(" "),n("p",[n("strong",[t._v("客户端")])]),t._v(" "),n("p",[t._v("在Kubernetes集群中，客户端通常有两类：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("User Account")]),t._v("：一般是独立于kubernetes之外的其他服务管理的用户账号。")]),t._v(" "),n("li",[n("strong",[t._v("Service Account")]),t._v("：kubernetes管理的账号，用于为Pod中的服务进程在访问Kubernetes时提供身份标识。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(542),alt:"img"}})]),t._v(" "),n("p",[n("strong",[t._v("认证、授权与准入控制")])]),t._v(" "),n("p",[t._v("ApiServer是访问及管理资源对象的唯一入口。任何一个请求访问ApiServer，都要经过下面三个流程：")]),t._v(" "),n("ul",[n("li",[t._v("Authentication（认证）：身份鉴别，只有正确的账号才能够通过认证")]),t._v(" "),n("li",[t._v("Authorization（授权）：  判断用户是否有权限对访问的资源执行特定的动作")]),t._v(" "),n("li",[t._v("Admission Control（准入控制）：用于补充授权机制以实现更加精细的访问控制功能。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(543),alt:"img"}})]),t._v(" "),n("h3",{attrs:{id:"_9-2-认证管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-认证管理"}},[t._v("#")]),t._v(" 9.2 认证管理")]),t._v(" "),n("p",[t._v("Kubernetes集群安全的最关键点在于如何识别并认证客户端身份，它提供了3种客户端身份认证方式：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("HTTP Base认证：通过用户名+密码的方式认证")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    这种认证方式是把“用户名:密码”用BASE64算法进行编码后的字符串放在HTTP请求中的Header Authorization域里发送给服务端。服务端收到后进行解码，获取用户名及密码，然后进行用户身份认证的过程。\n")])])])]),t._v(" "),n("li",[n("p",[t._v("HTTP Token认证：通过一个Token来识别合法用户")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    这种认证方式是用一个很长的难以被模仿的字符串--Token来表明客户身份的一种方式。每个Token对应一个用户名，当客户端发起API调用请求时，需要在HTTP Header里放入Token，API Server接到Token后会跟服务器中保存的token进行比对，然后进行用户身份认证的过程。\n")])])])]),t._v(" "),n("li",[n("p",[t._v("HTTPS证书认证：基于CA根证书签名的双向数字证书认证方式")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    这种认证方式是安全性最高的一种方式，但是同时也是操作起来最麻烦的一种方式。\n")])])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(544),alt:"img"}})]),t._v(" "),n("p",[n("strong",[t._v("HTTPS认证大体分为3个过程：")])]),t._v(" "),n("ol",[n("li",[n("p",[t._v("证书申请和下发")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  HTTPS通信双方的服务器向CA机构申请证书，CA机构下发根证书、服务端证书及私钥给申请者\n")])])])]),t._v(" "),n("li",[n("p",[t._v("客户端和服务端的双向认证")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  1> 客户端向服务器端发起请求，服务端下发自己的证书给客户端，\n     客户端接收到证书后，通过私钥解密证书，在证书中获得服务端的公钥，\n     客户端利用服务器端的公钥认证证书中的信息，如果一致，则认可这个服务器\n  2> 客户端发送自己的证书给服务器端，服务端接收到证书后，通过私钥解密证书，\n     在证书中获得客户端的公钥，并用该公钥认证证书信息，确认客户端是否合法\n")])])])]),t._v(" "),n("li",[n("p",[t._v("服务器端和客户端进行通信")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  服务器端和客户端协商好加密方案后，客户端会产生一个随机的秘钥并加密，然后发送到服务器端。\n  服务器端接收这个秘钥后，双方接下来通信的所有内容都通过该随机秘钥加密\n")])])])])]),t._v(" "),n("blockquote",[n("p",[t._v("注意:  Kubernetes允许同时配置多种认证方式，只要其中任意一个方式认证通过即可")])]),t._v(" "),n("h3",{attrs:{id:"_9-3-授权管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-授权管理"}},[t._v("#")]),t._v(" 9.3 授权管理")]),t._v(" "),n("p",[t._v("授权发生在认证成功之后，通过认证就可以知道请求用户是谁， 然后Kubernetes会根据事先定义的授权策略来决定用户是否有权限访问，这个过程就称为授权。")]),t._v(" "),n("p",[t._v("每个发送到ApiServer的请求都带上了用户和资源的信息：比如发送请求的用户、请求的路径、请求的动作等，授权就是根据这些信息和授权策略进行比较，如果符合策略，则认为授权通过，否则会返回错误。")]),t._v(" "),n("p",[t._v("API Server目前支持以下几种授权策略：")]),t._v(" "),n("ul",[n("li",[t._v("AlwaysDeny：表示拒绝所有请求，一般用于测试")]),t._v(" "),n("li",[t._v("AlwaysAllow：允许接收所有请求，相当于集群不需要授权流程（Kubernetes默认的策略）")]),t._v(" "),n("li",[t._v("ABAC：基于属性的访问控制，表示使用用户配置的授权规则对用户请求进行匹配和控制")]),t._v(" "),n("li",[t._v("Webhook：通过调用外部REST服务对用户进行授权")]),t._v(" "),n("li",[t._v("Node：是一种专用模式，用于对kubelet发出的请求进行访问控制")]),t._v(" "),n("li",[t._v("RBAC：基于角色的访问控制（kubeadm安装方式下的默认选项）")])]),t._v(" "),n("p",[t._v("RBAC(Role-Based Access Control) 基于角色的访问控制，主要是在描述一件事情："),n("strong",[t._v("给哪些对象授予了哪些权限")])]),t._v(" "),n("p",[t._v("其中涉及到了下面几个概念：")]),t._v(" "),n("ul",[n("li",[t._v("对象：User、Groups、ServiceAccount")]),t._v(" "),n("li",[t._v("角色：代表着一组定义在资源上的可操作动作(权限)的集合")]),t._v(" "),n("li",[t._v("绑定：将定义好的角色跟用户绑定在一起")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(545),alt:"img"}})]),t._v(" "),n("p",[t._v("RBAC引入了4个顶级资源对象：")]),t._v(" "),n("ul",[n("li",[t._v("Role、ClusterRole：角色，用于指定一组权限")]),t._v(" "),n("li",[t._v("RoleBinding、ClusterRoleBinding：角色绑定，用于将角色（权限）赋予给对象")])]),t._v(" "),n("p",[n("strong",[t._v("Role、ClusterRole")])]),t._v(" "),n("p",[t._v("一个角色就是一组权限的集合，这里的权限都是许可形式的（白名单）。")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Role只能对命名空间内的资源进行授权，需要指定nameapce")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 支持的API组列表,"" 空字符串，表示核心API群')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 支持的资源对象列表")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watch"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许的对资源对象的操作方法列表")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ClusterRole可以对集群范围内资源、跨namespaces的范围资源、非资源类型进行授权")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("clusterrole\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watch"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("p",[t._v("需要详细说明的是，rules中的参数：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("apiGroups: 支持的API组列表")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('"","apps", "autoscaling", "batch"\n')])])])]),t._v(" "),n("li",[n("p",[t._v("resources：支持的资源对象列表")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('"services", "endpoints", "pods","secrets","configmaps","crontabs","deployments","jobs",\n"nodes","rolebindings","clusterroles","daemonsets","replicasets","statefulsets",\n"horizontalpodautoscalers","replicationcontrollers","cronjobs"\n')])])])]),t._v(" "),n("li",[n("p",[t._v("verbs：对资源对象的操作方法列表")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('"get", "list", "watch", "create", "update", "patch", "delete", "exec"\n')])])])])]),t._v(" "),n("p",[n("strong",[t._v("RoleBinding、ClusterRoleBinding")])]),t._v(" "),n("p",[t._v("角色绑定用来把一个角色绑定到一个目标对象上，绑定目标可以是User、Group或者ServiceAccount。")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RoleBinding可以将同一namespace中的subject绑定到某个Role下，则此subject即具有该Role定义的权限")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RoleBinding\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("binding\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" heima\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ClusterRoleBinding在整个集群级别和所有namespaces将特定的subject与ClusterRole绑定，授予权限")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRoleBinding\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("clusterrole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("binding\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" heima\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("clusterrole\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n")])])]),n("p",[n("strong",[t._v("RoleBinding引用ClusterRole进行授权")])]),t._v(" "),n("p",[t._v("RoleBinding可以引用ClusterRole，对属于同一命名空间内ClusterRole定义的资源主体进行授权。")]),t._v(" "),n("p",[t._v("一种很常用的做法就是，集群管理员为集群范围预定义好一组角色（ClusterRole），然后在多个命名空间中重复使用这些ClusterRole。这样可以大幅提高授权管理工作效率，也使得各个命名空间下的基础性授权规则与使用体验保持一致。")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虽然authorization-clusterrole是一个集群角色，但是因为使用了RoleBinding")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以heima只能读取dev命名空间中的资源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RoleBinding\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("binding"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ns\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" heima\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("clusterrole\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n")])])]),n("p",[n("strong",[t._v("实战：创建一个只能管理dev空间下Pods资源的账号")])]),t._v(" "),n("ol",[n("li",[t._v("创建账号")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1) 创建证书")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /etc/kubernetes/pki/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (umask 077;openssl genrsa -out devman.key 2048)")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2) 用apiserver的证书去签署")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2-1) 签名申请，申请的用户是devman,组是devgroup")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# openssl req -new -key devman.key -out devman.csr -subj "/CN=devman/O=devgroup"     ')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2-2) 签署证书")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl x509 -req -in devman.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out devman.crt -days 3650")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3) 设置集群、用户、上下文信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl config set-cluster kubernetes --embed-certs=true --certificate-authority=/etc/kubernetes/pki/ca.crt --server=https://192.168.109.100:6443")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl config set-credentials devman --embed-certs=true --client-certificate=/etc/kubernetes/pki/devman.crt --client-key=/etc/kubernetes/pki/devman.key")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl config set-context devman@kubernetes --cluster=kubernetes --user=devman")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换账户到devman")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl config use-context devman@kubernetes")]),t._v("\nSwitched to context "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"devman@kubernetes"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看dev下pod，发现没有权限")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nError from server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Forbidden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": pods is forbidden: User "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"devman"')]),t._v(" cannot list resource "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" API group "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the namespace "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dev"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到admin账户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl config use-context kubernetes-admin@kubernetes")]),t._v("\nSwitched to context "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes-admin@kubernetes"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),n("p",[t._v("2） 创建Role和RoleBinding，为devman用户授权")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("kind: Role\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  namespace: dev\n  name: dev-role\nrules:\n- apiGroups: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  resources: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  verbs: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),t._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watch"')]),t._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \n---\n\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: authorization-role-binding\n  namespace: dev\nsubjects:\n- kind: User\n  name: devman\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: dev-role\n  apiGroup: rbac.authorization.k8s.io\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f dev-role.yaml")]),t._v("\nrole.rbac.authorization.k8s.io/dev-role created\nrolebinding.rbac.authorization.k8s.io/authorization-role-binding created\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("切换账户，再次验证")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换账户到devman")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl config use-context devman@kubernetes")]),t._v("\nSwitched to context "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"devman@kubernetes"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次查看")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods -n dev")]),t._v("\nNAME                                 READY   STATUS             RESTARTS   AGE\nnginx-deployment-66cb59b984-8wp2k    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          4d1h\nnginx-deployment-66cb59b984-dc46j    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          4d1h\nnginx-deployment-66cb59b984-thfck    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          4d1h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为了不影响后面的学习,切回admin账户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pki"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl config use-context kubernetes-admin@kubernetes")]),t._v("\nSwitched to context "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes-admin@kubernetes"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),n("h3",{attrs:{id:"_9-4-准入控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-准入控制"}},[t._v("#")]),t._v(" 9.4 准入控制")]),t._v(" "),n("p",[t._v("通过了前面的认证和授权之后，还需要经过准入控制处理通过之后，apiserver才会处理这个请求。")]),t._v(" "),n("p",[t._v("准入控制是一个可配置的控制器列表，可以通过在Api-Server上通过命令行设置选择执行哪些准入控制器：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,\n                      DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds\n")])])]),n("p",[t._v("只有当所有的准入控制器都检查通过之后，apiserver才执行该请求，否则返回拒绝。")]),t._v(" "),n("p",[t._v("当前可配置的Admission Control准入控制如下：")]),t._v(" "),n("ul",[n("li",[t._v("AlwaysAdmit：允许所有请求")]),t._v(" "),n("li",[t._v("AlwaysDeny：禁止所有请求，一般用于测试")]),t._v(" "),n("li",[t._v("AlwaysPullImages：在启动容器之前总去下载镜像")]),t._v(" "),n("li",[t._v("DenyExecOnPrivileged：它会拦截所有想在Privileged Container上执行命令的请求")]),t._v(" "),n("li",[t._v("ImagePolicyWebhook：这个插件将允许后端的一个Webhook程序来完成admission controller的功能。")]),t._v(" "),n("li",[t._v("Service Account：实现ServiceAccount实现了自动化")]),t._v(" "),n("li",[t._v("SecurityContextDeny：这个插件将使用SecurityContext的Pod中的定义全部失效")]),t._v(" "),n("li",[t._v("ResourceQuota：用于资源配额管理目的，观察所有请求，确保在namespace上的配额不会超标")]),t._v(" "),n("li",[t._v("LimitRanger：用于资源限制管理，作用于namespace上，确保对Pod进行资源限制")]),t._v(" "),n("li",[t._v("InitialResources：为未设置资源请求与限制的Pod，根据其镜像的历史资源的使用情况进行设置")]),t._v(" "),n("li",[t._v("NamespaceLifecycle：如果尝试在一个不存在的namespace中创建资源对象，则该创建请求将被拒绝。当删除一个namespace时，系统将会删除该namespace中所有对象。")]),t._v(" "),n("li",[t._v("DefaultStorageClass：为了实现共享存储的动态供应，为未指定StorageClass或PV的PVC尝试匹配默认的StorageClass，尽可能减少用户在申请PVC时所需了解的后端存储细节")]),t._v(" "),n("li",[t._v("DefaultTolerationSeconds：这个插件为那些没有设置forgiveness tolerations并具有notready:NoExecute和unreachable:NoExecute两种taints的Pod设置默认的“容忍”时间，为5min")]),t._v(" "),n("li",[t._v("PodSecurityPolicy：这个插件用于在创建或修改Pod时决定是否根据Pod的security context和可用的PodSecurityPolicy对Pod的安全策略进行控制")])]),t._v(" "),n("h2",{attrs:{id:"第十章-dashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第十章-dashboard"}},[t._v("#")]),t._v(" 第十章 DashBoard")]),t._v(" "),n("p",[t._v("之前在kubernetes中完成的所有操作都是通过命令行工具kubectl完成的。其实，为了提供更丰富的用户体验，kubernetes还开发了一个基于web的用户界面（Dashboard）。用户可以使用Dashboard部署容器化的应用，还可以监控应用的状态，执行故障排查以及管理kubernetes中各种资源。")]),t._v(" "),n("h3",{attrs:{id:"_10-1-部署dashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-部署dashboard"}},[t._v("#")]),t._v(" 10.1 部署Dashboard")]),t._v(" "),n("ol",[n("li",[t._v("下载yaml，并运行Dashboard")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载yaml")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget  https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改kubernetes-dashboard的Service类型")]),t._v("\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kubernetes-dashboard\nspec:\n  type: NodePort  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增")]),t._v("\n  ports:\n    - port: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n      targetPort: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8443")]),t._v("\n      nodePort: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30009")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增")]),t._v("\n  selector:\n    k8s-app: kubernetes-dashboard\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f recommended.yaml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看namespace下的kubernetes-dashboard下的资源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pod,svc -n kubernetes-dashboard")]),t._v("\nNAME                                            READY   STATUS    RESTARTS   AGE\npod/dashboard-metrics-scraper-c79c65bb7-zwfvw   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          111s\npod/kubernetes-dashboard-56484d4c5-z95z5        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          111s\n\nNAME                               TYPE       CLUSTER-IP      EXTERNAL-IP  PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         AGE\nservice/dashboard-metrics-scraper  ClusterIP  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".89.218    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v("/TCP        111s\nservice/kubernetes-dashboard       NodePort   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.104")]),t._v(".178.171  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(":30009/TCP   111s\n")])])]),n("p",[t._v("2）创建访问账户，获取token")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建账号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master-1 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create serviceaccount dashboard-admin -n kubernetes-dashboard")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 授权")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master-1 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create clusterrolebinding dashboard-admin-rb --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:dashboard-admin")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取账号token")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl get secrets -n kubernetes-dashboard | grep dashboard-admin")]),t._v("\ndashboard-admin-token-xbqhh        kubernetes.io/service-account-token   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("      2m35s\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl describe secrets dashboard-admin-token-xbqhh -n kubernetes-dashboard")]),t._v("\nName:         dashboard-admin-token-xbqhh\nNamespace:    kubernetes-dashboard\nLabels:       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nAnnotations:  kubernetes.io/service-account.name: dashboard-admin\n              kubernetes.io/service-account.uid: 95d84d80-be7a-4d10-a2e0-68f90222d039\n\nType:  kubernetes.io/service-account-token\n\nData\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nnamespace:  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" bytes\ntoken:      eyJhbGciOiJSUzI1NiIsImtpZCI6ImJrYkF4bW5XcDhWcmNGUGJtek5NODFuSXl1aWptMmU2M3o4LTY5a2FKS2cifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4teGJxaGgiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiOTVkODRkODAtYmU3YS00ZDEwLWEyZTAtNjhmOTAyMjJkMDM5Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.NAl7e8ZfWWdDoPxkqzJzTB46sK9E8iuJYnUI9vnBaY3Jts7T1g1msjsBnbxzQSYgAG--cV0WYxjndzJY_UWCwaGPrQrt_GunxmOK9AUnzURqm55GR2RXIZtjsWVP2EBatsDgHRmuUbQvTFOvdJB4x3nXcYLN2opAaMqg3rnU2rr-A8zCrIuX_eca12wIp_QiuP3SF-tzpdLpsyRfegTJZl6YnSGyaVkC9id-cxZRb307qdCfXPfCHR_2rt5FVfxARgg_C0e3eFHaaYQO7CitxsnIoIXpOFNAR8aUrmopJyODQIPqBWUehb7FhlU1DCduHnIIXVC_UICZ-MKYewBDLw\nca.crt:     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1025")]),t._v(" bytes\n")])])]),n("p",[t._v("3）通过浏览器访问Dashboard的UI")]),t._v(" "),n("p",[t._v("在登录页面上输入上面的token")]),t._v(" "),n("p",[n("img",{attrs:{src:a(546),alt:"image-20200520144548997"}})]),t._v(" "),n("p",[t._v("出现下面的页面代表成功")]),t._v(" "),n("p",[n("img",{attrs:{src:a(547),alt:"image-20200520144959353"}})]),t._v(" "),n("h3",{attrs:{id:"_10-2-使用dashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-使用dashboard"}},[t._v("#")]),t._v(" 10.2 使用DashBoard")]),t._v(" "),n("p",[t._v("本章节以Deployment为例演示DashBoard的使用")]),t._v(" "),n("p",[n("strong",[t._v("查看")])]),t._v(" "),n("p",[t._v("选择指定的命名空间"),n("code",[t._v("dev")]),t._v("，然后点击"),n("code",[t._v("Deployments")]),t._v("，查看dev空间下的所有deployment")]),t._v(" "),n("p",[n("img",{attrs:{src:a(548),alt:"img"}})]),t._v(" "),n("p",[n("strong",[t._v("扩缩容")])]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("Deployment")]),t._v("上点击"),n("code",[t._v("规模")]),t._v("，然后指定"),n("code",[t._v("目标副本数量")]),t._v("，点击确定")]),t._v(" "),n("p",[n("img",{attrs:{src:a(549),alt:"img"}})]),t._v(" "),n("p",[n("strong",[t._v("编辑")])]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("Deployment")]),t._v("上点击"),n("code",[t._v("编辑")]),t._v("，然后修改"),n("code",[t._v("yaml文件")]),t._v("，点击确定")]),t._v(" "),n("p",[n("img",{attrs:{src:a(550),alt:"image-20200520163253644"}})]),t._v(" "),n("p",[n("strong",[t._v("查看Pod")])]),t._v(" "),n("p",[t._v("点击"),n("code",[t._v("Pods")]),t._v(", 查看pods列表")]),t._v(" "),n("p",[n("img",{attrs:{src:a(551),alt:"img"}})]),t._v(" "),n("p",[n("strong",[t._v("操作Pod")])]),t._v(" "),n("p",[t._v("选中某个Pod，可以对其执行日志（logs）、进入执行（exec）、编辑、删除操作")]),t._v(" "),n("p",[n("img",{attrs:{src:a(552),alt:"img"}})]),t._v(" "),n("blockquote",[n("p",[t._v("Dashboard提供了kubectl的绝大部分功能，这里不再一一演示")])])])}),[],!1,null,null,null);s.default=e.exports},339:function(t,s,a){t.exports=a.p+"assets/img/image-20200407121501907.f2c6952c.png"},498:function(t,s,a){t.exports=a.p+"assets/img/image-20200505183738289.286028b5.png"},499:function(t,s,a){t.exports=a.p+"assets/img/image-20200524150339551.f07ce7bd.png"},500:function(t,s,a){t.exports=a.p+"assets/img/image-20200406232838722.96750940.png"},501:function(t,s,a){t.exports=a.p+"assets/img/image-20200526203726071.8d0d7d59.png"},502:function(t,s,a){t.exports=a.p+"assets/img/image-20200406184656917.26e2021c.png"},503:function(t,s,a){t.exports=a.p+"assets/img/image-20200403224313355.32c98063.png"},504:function(t,s,a){t.exports=a.p+"assets/img/image-20200404094800622.cebaa87a.png"},505:function(t,s,a){t.exports=a.p+"assets/img/image-20200505213817934.1a69bd43.png"},506:function(t,s,a){t.exports=a.p+"assets/img/image-20200505214156148.a9b7ce7d.png"},507:function(t,s,a){t.exports=a.p+"assets/img/image-20210719135715740.448b8a5d.png"},508:function(t,s,a){t.exports=a.p+"assets/img/image-20200405142656921.c6f3fe1f.png"},509:function(t,s,a){t.exports=a.p+"assets/img/image-20200406225334627.102ffc00.png"},510:function(t,s,a){t.exports=a.p+"assets/img/image-20200407100850484.5c0ca682.png"},511:function(t,s,a){t.exports=a.p+"assets/img/image-20200408193950807.cbf7a130.png"},512:function(t,s,a){t.exports=a.p+"assets/img/image-20200408194716912.934ff829.png"},513:function(t,s,a){t.exports=a.p+"assets/img/image-20200412111402706.adeb7bf5.png"},514:function(t,s,a){t.exports=a.p+"assets/img/image-20200406184656917.26e2021c.png"},515:function(t,s,a){t.exports=a.p+"assets/img/image-20200605021831545.93f3766a.png"},516:function(t,s,a){t.exports=a.p+"assets/img/image-20200514095913741.3680fdf7.png"},517:function(t,s,a){t.exports=a.p+"assets/img/image-20200612005334159-7557563.7adfdf0d.png"},518:function(t,s,a){t.exports=a.p+"assets/img/image-20200612005524778-7557563.30222833.png"},519:function(t,s,a){t.exports=a.p+"assets/img/image-20200416140251491-7557563.eb37e58e.png"},520:function(t,s,a){t.exports=a.p+"assets/img/image-20200608155858271-7557563.33396a79.png"},521:function(t,s,a){t.exports=a.p+"assets/img/image-20200608163326496-7557563.bc2ed35e.png"},522:function(t,s,a){t.exports=a.p+"assets/img/image-20200612010223537-7557563.bdda87db.png"},523:function(t,s,a){t.exports=a.p+"assets/img/image-20200618213054113-7557563.23448555.png"},524:function(t,s,a){t.exports=a.p+"assets/img/image-20200618213149531-7557563.07c2d4a4.png"},525:function(t,s,a){t.exports=a.p+"assets/img/image-20200408194716912-7557563.934ff829.png"},526:function(t,s,a){t.exports=a.p+"assets/img/image-20200509121254425-7557563.f304bf37.png"},527:function(t,s,a){t.exports=a.p+"assets/img/image-20200509151424280-7557563.b618d57f.png"},528:function(t,s,a){t.exports=a.p+"assets/img/image-20200509152947714-7557563.967c05ad.png"},529:function(t,s,a){t.exports=a.p+"assets/img/image-20200509153731363-7557563.425c1683.png"},530:function(t,s,a){t.exports=a.p+"assets/img/image-20200509191917069-7557563.6d0c1442.png"},531:function(t,s,a){t.exports=a.p+"assets/img/image-20200620175731338-7557563.57a3e689.png"},532:function(t,s,a){t.exports=a.p+"assets/img/image-20200510103945494-7557563.514ae73e.png"},533:function(t,s,a){t.exports=a.p+"assets/img/image-20200510113311209-7557563.c08c2b86.png"},534:function(t,s,a){t.exports=a.p+"assets/img/image-20200623092808049-7557563.1414c953.png"},535:function(t,s,a){t.exports=a.p+"assets/img/image-20200516112704764-7557563.dfcca666.png"},536:function(t,s,a){t.exports=a.p+"assets/img/image-20200516102419998-7557563.7a6e16c2.png"},537:function(t,s,a){t.exports=a.p+"assets/img/image-20200413174713773-7560388.f669092d.png"},538:function(t,s,a){t.exports=a.p+"assets/img/image-20200413214031331-7560388.1ac41a5f.png"},539:function(t,s,a){t.exports=a.p+"assets/img/image-20200413215133559-7560388.9abe54c9.png"},540:function(t,s,a){t.exports=a.p+"assets/img/image-20200514194111567-7560553.74cfa2f2.png"},541:function(t,s,a){t.exports=a.p+"assets/img/image-20200515002806726-7560631.a7f84e1b.png"},542:function(t,s,a){t.exports=a.p+"assets/img/image-20200520102949189-7560728.5fd250f6.png"},543:function(t,s,a){t.exports=a.p+"assets/img/image-20200520103942580-7560728.10834b9b.png"},544:function(t,s,a){t.exports=a.p+"assets/img/image-20200518211037434-7560728.9dff23bf.png"},545:function(t,s,a){t.exports=a.p+"assets/img/image-20200519181209566-7560728.b0891456.png"},546:function(t,s,a){t.exports=a.p+"assets/img/image-20200520144548997-7560728.38880d5b.png"},547:function(t,s,a){t.exports=a.p+"assets/img/image-20200520144959353-7560728.6ea0cd70.png"},548:function(t,s,a){t.exports=a.p+"assets/img/image-20200520154628679-7560728.008bd821.png"},549:function(t,s,a){t.exports=a.p+"assets/img/image-20200520162605102-7560728.26a03a73.png"},550:function(t,s,a){t.exports=a.p+"assets/img/image-20200520163253644-7560728.5df6652f.png"},551:function(t,s,a){t.exports=a.p+"assets/img/image-20200520163552110-7560728.c277dfdb.png"},552:function(t,s,a){t.exports=a.p+"assets/img/image-20200520163832827-7560728.d53635fb.png"}}]);